{
  "version": 3,
  "sources": ["../node_modules/@messageformat/runtime/esm/runtime.js", "../node_modules/make-plural/plurals.mjs", "../main/src/messages/en.properties", "../main/src/messages/ru.properties", "../main/src/main.ts"],
  "sourcesContent": ["/**\n * A set of utility functions that are called by the compiled Javascript\n * functions, these are included locally in the output of {@link MessageFormat.compile compile()}.\n */\n/** @private */\nexport function _nf(lc) {\n    // @ts-ignore\n    return _nf[lc] || (_nf[lc] = new Intl.NumberFormat(lc));\n}\n/**\n * Utility function for `#` in plural rules\n *\n * @param lc The current locale\n * @param value The value to operate on\n * @param offset An offset, set by the surrounding context\n * @returns The result of applying the offset to the input value\n */\nexport function number(lc, value, offset) {\n    return _nf(lc).format(value - offset);\n}\n/**\n * Strict utility function for `#` in plural rules\n *\n * Will throw an Error if `value` or `offset` are non-numeric.\n *\n * @param lc The current locale\n * @param value The value to operate on\n * @param offset An offset, set by the surrounding context\n * @param name The name of the argument, used for error reporting\n * @returns The result of applying the offset to the input value\n */\nexport function strictNumber(lc, value, offset, name) {\n    var n = value - offset;\n    if (isNaN(n))\n        throw new Error('`' + name + '` or its offset is not a number');\n    return _nf(lc).format(n);\n}\n/**\n * Utility function for `{N, plural|selectordinal, ...}`\n *\n * @param value The key to use to find a pluralization rule\n * @param offset An offset to apply to `value`\n * @param lcfunc A locale function from `pluralFuncs`\n * @param data The object from which results are looked up\n * @param isOrdinal If true, use ordinal rather than cardinal rules\n * @returns The result of the pluralization\n */\nexport function plural(value, offset, lcfunc, data, isOrdinal) {\n    if ({}.hasOwnProperty.call(data, value))\n        return data[value];\n    if (offset)\n        value -= offset;\n    var key = lcfunc(value, isOrdinal);\n    return key in data ? data[key] : data.other;\n}\n/**\n * Utility function for `{N, select, ...}`\n *\n * @param value The key to use to find a selection\n * @param data The object from which results are looked up\n * @returns The result of the select statement\n */\nexport function select(value, data) {\n    return {}.hasOwnProperty.call(data, value) ? data[value] : data.other;\n}\n/**\n * Checks that all required arguments are set to defined values\n *\n * Throws on failure; otherwise returns undefined\n *\n * @param keys The required keys\n * @param data The data object being checked\n */\nexport function reqArgs(keys, data) {\n    for (var i = 0; i < keys.length; ++i)\n        if (!data || data[keys[i]] === undefined)\n            throw new Error(\"Message requires argument '\" + keys[i] + \"'\");\n}\n", "function a(n, ord) {\n  if (ord) return 'other';\n  return n == 1 ? 'one' : 'other';\n}\nfunction b(n, ord) {\n  if (ord) return 'other';\n  return (n == 0 || n == 1) ? 'one' : 'other';\n}\nfunction c(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1];\n  if (ord) return 'other';\n  return n == 1 && v0 ? 'one' : 'other';\n}\nfunction d(n, ord) {\n  return 'other';\n}\nfunction e(n, ord) {\n  if (ord) return 'other';\n  return n == 1 ? 'one'\n    : n == 2 ? 'two'\n    : 'other';\n}\n\nexport const _in = d;\nexport const af = a;\nexport const ak = b;\nexport function am(n, ord) {\n  if (ord) return 'other';\n  return n >= 0 && n <= 1 ? 'one' : 'other';\n}\nexport const an = a;\nexport function ar(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n  if (ord) return 'other';\n  return n == 0 ? 'zero'\n    : n == 1 ? 'one'\n    : n == 2 ? 'two'\n    : (n100 >= 3 && n100 <= 10) ? 'few'\n    : (n100 >= 11 && n100 <= 99) ? 'many'\n    : 'other';\n}\nexport function ars(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n  if (ord) return 'other';\n  return n == 0 ? 'zero'\n    : n == 1 ? 'one'\n    : n == 2 ? 'two'\n    : (n100 >= 3 && n100 <= 10) ? 'few'\n    : (n100 >= 11 && n100 <= 99) ? 'many'\n    : 'other';\n}\nexport function as(n, ord) {\n  if (ord) return (n == 1 || n == 5 || n == 7 || n == 8 || n == 9 || n == 10) ? 'one'\n    : (n == 2 || n == 3) ? 'two'\n    : n == 4 ? 'few'\n    : n == 6 ? 'many'\n    : 'other';\n  return n >= 0 && n <= 1 ? 'one' : 'other';\n}\nexport const asa = a;\nexport const ast = c;\nexport function az(n, ord) {\n  var s = String(n).split('.'), i = s[0], i10 = i.slice(-1), i100 = i.slice(-2), i1000 = i.slice(-3);\n  if (ord) return (i10 == 1 || i10 == 2 || i10 == 5 || i10 == 7 || i10 == 8) || (i100 == 20 || i100 == 50 || i100 == 70 || i100 == 80) ? 'one'\n    : (i10 == 3 || i10 == 4) || (i1000 == 100 || i1000 == 200 || i1000 == 300 || i1000 == 400 || i1000 == 500 || i1000 == 600 || i1000 == 700 || i1000 == 800 || i1000 == 900) ? 'few'\n    : i == 0 || i10 == 6 || (i100 == 40 || i100 == 60 || i100 == 90) ? 'many'\n    : 'other';\n  return n == 1 ? 'one' : 'other';\n}\nexport function be(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n  if (ord) return (n10 == 2 || n10 == 3) && n100 != 12 && n100 != 13 ? 'few' : 'other';\n  return n10 == 1 && n100 != 11 ? 'one'\n    : (n10 >= 2 && n10 <= 4) && (n100 < 12 || n100 > 14) ? 'few'\n    : t0 && n10 == 0 || (n10 >= 5 && n10 <= 9) || (n100 >= 11 && n100 <= 14) ? 'many'\n    : 'other';\n}\nexport const bem = a;\nexport const bez = a;\nexport const bg = a;\nexport const bho = b;\nexport const bm = d;\nexport function bn(n, ord) {\n  if (ord) return (n == 1 || n == 5 || n == 7 || n == 8 || n == 9 || n == 10) ? 'one'\n    : (n == 2 || n == 3) ? 'two'\n    : n == 4 ? 'few'\n    : n == 6 ? 'many'\n    : 'other';\n  return n >= 0 && n <= 1 ? 'one' : 'other';\n}\nexport const bo = d;\nexport function br(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2), n1000000 = t0 && s[0].slice(-6);\n  if (ord) return 'other';\n  return n10 == 1 && n100 != 11 && n100 != 71 && n100 != 91 ? 'one'\n    : n10 == 2 && n100 != 12 && n100 != 72 && n100 != 92 ? 'two'\n    : ((n10 == 3 || n10 == 4) || n10 == 9) && (n100 < 10 || n100 > 19) && (n100 < 70 || n100 > 79) && (n100 < 90 || n100 > 99) ? 'few'\n    : n != 0 && t0 && n1000000 == 0 ? 'many'\n    : 'other';\n}\nexport const brx = a;\nexport function bs(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n  if (ord) return 'other';\n  return v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one'\n    : v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) || (f10 >= 2 && f10 <= 4) && (f100 < 12 || f100 > 14) ? 'few'\n    : 'other';\n}\nexport function ca(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1];\n  if (ord) return (n == 1 || n == 3) ? 'one'\n    : n == 2 ? 'two'\n    : n == 4 ? 'few'\n    : 'other';\n  return n == 1 && v0 ? 'one' : 'other';\n}\nexport const ce = a;\nexport function ceb(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), f10 = f.slice(-1);\n  if (ord) return 'other';\n  return v0 && (i == 1 || i == 2 || i == 3) || v0 && i10 != 4 && i10 != 6 && i10 != 9 || !v0 && f10 != 4 && f10 != 6 && f10 != 9 ? 'one' : 'other';\n}\nexport const cgg = a;\nexport const chr = a;\nexport const ckb = a;\nexport function cs(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1];\n  if (ord) return 'other';\n  return n == 1 && v0 ? 'one'\n    : (i >= 2 && i <= 4) && v0 ? 'few'\n    : !v0 ? 'many'\n    : 'other';\n}\nexport function cy(n, ord) {\n  if (ord) return (n == 0 || n == 7 || n == 8 || n == 9) ? 'zero'\n    : n == 1 ? 'one'\n    : n == 2 ? 'two'\n    : (n == 3 || n == 4) ? 'few'\n    : (n == 5 || n == 6) ? 'many'\n    : 'other';\n  return n == 0 ? 'zero'\n    : n == 1 ? 'one'\n    : n == 2 ? 'two'\n    : n == 3 ? 'few'\n    : n == 6 ? 'many'\n    : 'other';\n}\nexport function da(n, ord) {\n  var s = String(n).split('.'), i = s[0], t0 = Number(s[0]) == n;\n  if (ord) return 'other';\n  return n == 1 || !t0 && (i == 0 || i == 1) ? 'one' : 'other';\n}\nexport const de = c;\nexport function dsb(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i100 = i.slice(-2), f100 = f.slice(-2);\n  if (ord) return 'other';\n  return v0 && i100 == 1 || f100 == 1 ? 'one'\n    : v0 && i100 == 2 || f100 == 2 ? 'two'\n    : v0 && (i100 == 3 || i100 == 4) || (f100 == 3 || f100 == 4) ? 'few'\n    : 'other';\n}\nexport const dv = a;\nexport const dz = d;\nexport const ee = a;\nexport const el = a;\nexport function en(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n  if (ord) return n10 == 1 && n100 != 11 ? 'one'\n    : n10 == 2 && n100 != 12 ? 'two'\n    : n10 == 3 && n100 != 13 ? 'few'\n    : 'other';\n  return n == 1 && v0 ? 'one' : 'other';\n}\nexport const eo = a;\nexport const es = a;\nexport const et = c;\nexport const eu = a;\nexport function fa(n, ord) {\n  if (ord) return 'other';\n  return n >= 0 && n <= 1 ? 'one' : 'other';\n}\nexport function ff(n, ord) {\n  if (ord) return 'other';\n  return n >= 0 && n < 2 ? 'one' : 'other';\n}\nexport const fi = c;\nexport function fil(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), f10 = f.slice(-1);\n  if (ord) return n == 1 ? 'one' : 'other';\n  return v0 && (i == 1 || i == 2 || i == 3) || v0 && i10 != 4 && i10 != 6 && i10 != 9 || !v0 && f10 != 4 && f10 != 6 && f10 != 9 ? 'one' : 'other';\n}\nexport const fo = a;\nexport function fr(n, ord) {\n  if (ord) return n == 1 ? 'one' : 'other';\n  return n >= 0 && n < 2 ? 'one' : 'other';\n}\nexport const fur = a;\nexport const fy = c;\nexport function ga(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n;\n  if (ord) return n == 1 ? 'one' : 'other';\n  return n == 1 ? 'one'\n    : n == 2 ? 'two'\n    : (t0 && n >= 3 && n <= 6) ? 'few'\n    : (t0 && n >= 7 && n <= 10) ? 'many'\n    : 'other';\n}\nexport function gd(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n;\n  if (ord) return (n == 1 || n == 11) ? 'one'\n    : (n == 2 || n == 12) ? 'two'\n    : (n == 3 || n == 13) ? 'few'\n    : 'other';\n  return (n == 1 || n == 11) ? 'one'\n    : (n == 2 || n == 12) ? 'two'\n    : ((t0 && n >= 3 && n <= 10) || (t0 && n >= 13 && n <= 19)) ? 'few'\n    : 'other';\n}\nexport const gl = c;\nexport const gsw = a;\nexport function gu(n, ord) {\n  if (ord) return n == 1 ? 'one'\n    : (n == 2 || n == 3) ? 'two'\n    : n == 4 ? 'few'\n    : n == 6 ? 'many'\n    : 'other';\n  return n >= 0 && n <= 1 ? 'one' : 'other';\n}\nexport const guw = b;\nexport function gv(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2);\n  if (ord) return 'other';\n  return v0 && i10 == 1 ? 'one'\n    : v0 && i10 == 2 ? 'two'\n    : v0 && (i100 == 0 || i100 == 20 || i100 == 40 || i100 == 60 || i100 == 80) ? 'few'\n    : !v0 ? 'many'\n    : 'other';\n}\nexport const ha = a;\nexport const haw = a;\nexport function he(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1], t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1);\n  if (ord) return 'other';\n  return n == 1 && v0 ? 'one'\n    : i == 2 && v0 ? 'two'\n    : v0 && (n < 0 || n > 10) && t0 && n10 == 0 ? 'many'\n    : 'other';\n}\nexport function hi(n, ord) {\n  if (ord) return n == 1 ? 'one'\n    : (n == 2 || n == 3) ? 'two'\n    : n == 4 ? 'few'\n    : n == 6 ? 'many'\n    : 'other';\n  return n >= 0 && n <= 1 ? 'one' : 'other';\n}\nexport function hr(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n  if (ord) return 'other';\n  return v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one'\n    : v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) || (f10 >= 2 && f10 <= 4) && (f100 < 12 || f100 > 14) ? 'few'\n    : 'other';\n}\nexport function hsb(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i100 = i.slice(-2), f100 = f.slice(-2);\n  if (ord) return 'other';\n  return v0 && i100 == 1 || f100 == 1 ? 'one'\n    : v0 && i100 == 2 || f100 == 2 ? 'two'\n    : v0 && (i100 == 3 || i100 == 4) || (f100 == 3 || f100 == 4) ? 'few'\n    : 'other';\n}\nexport function hu(n, ord) {\n  if (ord) return (n == 1 || n == 5) ? 'one' : 'other';\n  return n == 1 ? 'one' : 'other';\n}\nexport function hy(n, ord) {\n  if (ord) return n == 1 ? 'one' : 'other';\n  return n >= 0 && n < 2 ? 'one' : 'other';\n}\nexport const ia = c;\nexport const id = d;\nexport const ig = d;\nexport const ii = d;\nexport const io = c;\nexport function is(n, ord) {\n  var s = String(n).split('.'), i = s[0], t0 = Number(s[0]) == n, i10 = i.slice(-1), i100 = i.slice(-2);\n  if (ord) return 'other';\n  return t0 && i10 == 1 && i100 != 11 || !t0 ? 'one' : 'other';\n}\nexport function it(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1];\n  if (ord) return (n == 11 || n == 8 || n == 80 || n == 800) ? 'many' : 'other';\n  return n == 1 && v0 ? 'one' : 'other';\n}\nexport const iu = e;\nexport function iw(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1], t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1);\n  if (ord) return 'other';\n  return n == 1 && v0 ? 'one'\n    : i == 2 && v0 ? 'two'\n    : v0 && (n < 0 || n > 10) && t0 && n10 == 0 ? 'many'\n    : 'other';\n}\nexport const ja = d;\nexport const jbo = d;\nexport const jgo = a;\nexport const ji = c;\nexport const jmc = a;\nexport const jv = d;\nexport const jw = d;\nexport function ka(n, ord) {\n  var s = String(n).split('.'), i = s[0], i100 = i.slice(-2);\n  if (ord) return i == 1 ? 'one'\n    : i == 0 || ((i100 >= 2 && i100 <= 20) || i100 == 40 || i100 == 60 || i100 == 80) ? 'many'\n    : 'other';\n  return n == 1 ? 'one' : 'other';\n}\nexport function kab(n, ord) {\n  if (ord) return 'other';\n  return n >= 0 && n < 2 ? 'one' : 'other';\n}\nexport const kaj = a;\nexport const kcg = a;\nexport const kde = d;\nexport const kea = d;\nexport function kk(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1);\n  if (ord) return n10 == 6 || n10 == 9 || t0 && n10 == 0 && n != 0 ? 'many' : 'other';\n  return n == 1 ? 'one' : 'other';\n}\nexport const kkj = a;\nexport const kl = a;\nexport const km = d;\nexport function kn(n, ord) {\n  if (ord) return 'other';\n  return n >= 0 && n <= 1 ? 'one' : 'other';\n}\nexport const ko = d;\nexport const ks = a;\nexport const ksb = a;\nexport function ksh(n, ord) {\n  if (ord) return 'other';\n  return n == 0 ? 'zero'\n    : n == 1 ? 'one'\n    : 'other';\n}\nexport const ku = a;\nexport function kw(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2), n1000 = t0 && s[0].slice(-3), n100000 = t0 && s[0].slice(-5), n1000000 = t0 && s[0].slice(-6);\n  if (ord) return (t0 && n >= 1 && n <= 4) || ((n100 >= 1 && n100 <= 4) || (n100 >= 21 && n100 <= 24) || (n100 >= 41 && n100 <= 44) || (n100 >= 61 && n100 <= 64) || (n100 >= 81 && n100 <= 84)) ? 'one'\n    : n == 5 || n100 == 5 ? 'many'\n    : 'other';\n  return n == 0 ? 'zero'\n    : n == 1 ? 'one'\n    : (n100 == 2 || n100 == 22 || n100 == 42 || n100 == 62 || n100 == 82) || t0 && n1000 == 0 && ((n100000 >= 1000 && n100000 <= 20000) || n100000 == 40000 || n100000 == 60000 || n100000 == 80000) || n != 0 && n1000000 == 100000 ? 'two'\n    : (n100 == 3 || n100 == 23 || n100 == 43 || n100 == 63 || n100 == 83) ? 'few'\n    : n != 1 && (n100 == 1 || n100 == 21 || n100 == 41 || n100 == 61 || n100 == 81) ? 'many'\n    : 'other';\n}\nexport const ky = a;\nexport function lag(n, ord) {\n  var s = String(n).split('.'), i = s[0];\n  if (ord) return 'other';\n  return n == 0 ? 'zero'\n    : (i == 0 || i == 1) && n != 0 ? 'one'\n    : 'other';\n}\nexport const lb = a;\nexport const lg = a;\nexport const lkt = d;\nexport const ln = b;\nexport function lo(n, ord) {\n  if (ord) return n == 1 ? 'one' : 'other';\n  return 'other';\n}\nexport function lt(n, ord) {\n  var s = String(n).split('.'), f = s[1] || '', t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n  if (ord) return 'other';\n  return n10 == 1 && (n100 < 11 || n100 > 19) ? 'one'\n    : (n10 >= 2 && n10 <= 9) && (n100 < 11 || n100 > 19) ? 'few'\n    : f != 0 ? 'many'\n    : 'other';\n}\nexport function lv(n, ord) {\n  var s = String(n).split('.'), f = s[1] || '', v = f.length, t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2), f100 = f.slice(-2), f10 = f.slice(-1);\n  if (ord) return 'other';\n  return t0 && n10 == 0 || (n100 >= 11 && n100 <= 19) || v == 2 && (f100 >= 11 && f100 <= 19) ? 'zero'\n    : n10 == 1 && n100 != 11 || v == 2 && f10 == 1 && f100 != 11 || v != 2 && f10 == 1 ? 'one'\n    : 'other';\n}\nexport const mas = a;\nexport const mg = b;\nexport const mgo = a;\nexport function mk(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n  if (ord) return i10 == 1 && i100 != 11 ? 'one'\n    : i10 == 2 && i100 != 12 ? 'two'\n    : (i10 == 7 || i10 == 8) && i100 != 17 && i100 != 18 ? 'many'\n    : 'other';\n  return v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one' : 'other';\n}\nexport const ml = a;\nexport const mn = a;\nexport function mo(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n  if (ord) return n == 1 ? 'one' : 'other';\n  return n == 1 && v0 ? 'one'\n    : !v0 || n == 0 || (n100 >= 2 && n100 <= 19) ? 'few'\n    : 'other';\n}\nexport function mr(n, ord) {\n  if (ord) return n == 1 ? 'one'\n    : (n == 2 || n == 3) ? 'two'\n    : n == 4 ? 'few'\n    : 'other';\n  return n == 1 ? 'one' : 'other';\n}\nexport function ms(n, ord) {\n  if (ord) return n == 1 ? 'one' : 'other';\n  return 'other';\n}\nexport function mt(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n  if (ord) return 'other';\n  return n == 1 ? 'one'\n    : n == 0 || (n100 >= 2 && n100 <= 10) ? 'few'\n    : (n100 >= 11 && n100 <= 19) ? 'many'\n    : 'other';\n}\nexport const my = d;\nexport const nah = a;\nexport const naq = e;\nexport const nb = a;\nexport const nd = a;\nexport function ne(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n;\n  if (ord) return (t0 && n >= 1 && n <= 4) ? 'one' : 'other';\n  return n == 1 ? 'one' : 'other';\n}\nexport const nl = c;\nexport const nn = a;\nexport const nnh = a;\nexport const no = a;\nexport const nqo = d;\nexport const nr = a;\nexport const nso = b;\nexport const ny = a;\nexport const nyn = a;\nexport const om = a;\nexport function or(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n;\n  if (ord) return (n == 1 || n == 5 || (t0 && n >= 7 && n <= 9)) ? 'one'\n    : (n == 2 || n == 3) ? 'two'\n    : n == 4 ? 'few'\n    : n == 6 ? 'many'\n    : 'other';\n  return n == 1 ? 'one' : 'other';\n}\nexport const os = a;\nexport const osa = d;\nexport const pa = b;\nexport const pap = a;\nexport function pl(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2);\n  if (ord) return 'other';\n  return n == 1 && v0 ? 'one'\n    : v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) ? 'few'\n    : v0 && i != 1 && (i10 == 0 || i10 == 1) || v0 && (i10 >= 5 && i10 <= 9) || v0 && (i100 >= 12 && i100 <= 14) ? 'many'\n    : 'other';\n}\nexport function prg(n, ord) {\n  var s = String(n).split('.'), f = s[1] || '', v = f.length, t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2), f100 = f.slice(-2), f10 = f.slice(-1);\n  if (ord) return 'other';\n  return t0 && n10 == 0 || (n100 >= 11 && n100 <= 19) || v == 2 && (f100 >= 11 && f100 <= 19) ? 'zero'\n    : n10 == 1 && n100 != 11 || v == 2 && f10 == 1 && f100 != 11 || v != 2 && f10 == 1 ? 'one'\n    : 'other';\n}\nexport const ps = a;\nexport function pt(n, ord) {\n  var s = String(n).split('.'), i = s[0];\n  if (ord) return 'other';\n  return (i == 0 || i == 1) ? 'one' : 'other';\n}\nexport const pt_PT = c;\nexport const rm = a;\nexport function ro(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n  if (ord) return n == 1 ? 'one' : 'other';\n  return n == 1 && v0 ? 'one'\n    : !v0 || n == 0 || (n100 >= 2 && n100 <= 19) ? 'few'\n    : 'other';\n}\nexport const rof = a;\nexport const root = d;\nexport function ru(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2);\n  if (ord) return 'other';\n  return v0 && i10 == 1 && i100 != 11 ? 'one'\n    : v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) ? 'few'\n    : v0 && i10 == 0 || v0 && (i10 >= 5 && i10 <= 9) || v0 && (i100 >= 11 && i100 <= 14) ? 'many'\n    : 'other';\n}\nexport const rwk = a;\nexport const sah = d;\nexport const saq = a;\nexport function sc(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1];\n  if (ord) return (n == 11 || n == 8 || n == 80 || n == 800) ? 'many' : 'other';\n  return n == 1 && v0 ? 'one' : 'other';\n}\nexport function scn(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1];\n  if (ord) return (n == 11 || n == 8 || n == 80 || n == 800) ? 'many' : 'other';\n  return n == 1 && v0 ? 'one' : 'other';\n}\nexport const sd = a;\nexport const sdh = a;\nexport const se = e;\nexport const seh = a;\nexport const ses = d;\nexport const sg = d;\nexport function sh(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n  if (ord) return 'other';\n  return v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one'\n    : v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) || (f10 >= 2 && f10 <= 4) && (f100 < 12 || f100 > 14) ? 'few'\n    : 'other';\n}\nexport function shi(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n;\n  if (ord) return 'other';\n  return n >= 0 && n <= 1 ? 'one'\n    : (t0 && n >= 2 && n <= 10) ? 'few'\n    : 'other';\n}\nexport function si(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '';\n  if (ord) return 'other';\n  return (n == 0 || n == 1) || i == 0 && f == 1 ? 'one' : 'other';\n}\nexport function sk(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1];\n  if (ord) return 'other';\n  return n == 1 && v0 ? 'one'\n    : (i >= 2 && i <= 4) && v0 ? 'few'\n    : !v0 ? 'many'\n    : 'other';\n}\nexport function sl(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1], i100 = i.slice(-2);\n  if (ord) return 'other';\n  return v0 && i100 == 1 ? 'one'\n    : v0 && i100 == 2 ? 'two'\n    : v0 && (i100 == 3 || i100 == 4) || !v0 ? 'few'\n    : 'other';\n}\nexport const sma = e;\nexport const smi = e;\nexport const smj = e;\nexport const smn = e;\nexport const sms = e;\nexport const sn = a;\nexport const so = a;\nexport function sq(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n  if (ord) return n == 1 ? 'one'\n    : n10 == 4 && n100 != 14 ? 'many'\n    : 'other';\n  return n == 1 ? 'one' : 'other';\n}\nexport function sr(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n  if (ord) return 'other';\n  return v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one'\n    : v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) || (f10 >= 2 && f10 <= 4) && (f100 < 12 || f100 > 14) ? 'few'\n    : 'other';\n}\nexport const ss = a;\nexport const ssy = a;\nexport const st = a;\nexport const su = d;\nexport function sv(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n  if (ord) return (n10 == 1 || n10 == 2) && n100 != 11 && n100 != 12 ? 'one' : 'other';\n  return n == 1 && v0 ? 'one' : 'other';\n}\nexport const sw = c;\nexport const syr = a;\nexport const ta = a;\nexport const te = a;\nexport const teo = a;\nexport const th = d;\nexport const ti = b;\nexport const tig = a;\nexport function tk(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1);\n  if (ord) return (n10 == 6 || n10 == 9) || n == 10 ? 'few' : 'other';\n  return n == 1 ? 'one' : 'other';\n}\nexport function tl(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), f10 = f.slice(-1);\n  if (ord) return n == 1 ? 'one' : 'other';\n  return v0 && (i == 1 || i == 2 || i == 3) || v0 && i10 != 4 && i10 != 6 && i10 != 9 || !v0 && f10 != 4 && f10 != 6 && f10 != 9 ? 'one' : 'other';\n}\nexport const tn = a;\nexport const to = d;\nexport const tr = a;\nexport const ts = a;\nexport function tzm(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n;\n  if (ord) return 'other';\n  return (n == 0 || n == 1) || (t0 && n >= 11 && n <= 99) ? 'one' : 'other';\n}\nexport const ug = a;\nexport function uk(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1], t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2), i10 = i.slice(-1), i100 = i.slice(-2);\n  if (ord) return n10 == 3 && n100 != 13 ? 'few' : 'other';\n  return v0 && i10 == 1 && i100 != 11 ? 'one'\n    : v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) ? 'few'\n    : v0 && i10 == 0 || v0 && (i10 >= 5 && i10 <= 9) || v0 && (i100 >= 11 && i100 <= 14) ? 'many'\n    : 'other';\n}\nexport const ur = c;\nexport const uz = a;\nexport const ve = a;\nexport function vi(n, ord) {\n  if (ord) return n == 1 ? 'one' : 'other';\n  return 'other';\n}\nexport const vo = a;\nexport const vun = a;\nexport const wa = b;\nexport const wae = a;\nexport const wo = d;\nexport const xh = a;\nexport const xog = a;\nexport const yi = c;\nexport const yo = d;\nexport const yue = d;\nexport const zh = d;\nexport function zu(n, ord) {\n  if (ord) return 'other';\n  return n >= 0 && n <= 1 ? 'one' : 'other';\n}\n", "import { number, plural } from '@messageformat/runtime';\nimport { en } from '@messageformat/runtime/lib/plurals';\n\nconst x = (value, locale, arg) => {\n                        return value[arg];\n                    };\nexport default {\n  overlay: {\n    intro: {\n      header: function(d) { return \"You're the team lead!\\nYour team:\\n\" + d.team; },\n      difficulty: function(d) { return \"Difficulty: \" + d.difficulty; },\n      teammate: function(d) { return x(d.name, \"en\", (\" nominative\").trim()) + \" specializes in \" + d.skills; }\n    },\n    editor: {\n      nothing_done: function(d) { return \"Nothing has been done in this task so far. Time to work?\"; },\n      lots_of_work: function(d) { return \"The current task still has a lot of work to be done\"; },\n      mostly_done: function(d) { return \"Most of the work for this task seems to be complete\"; },\n      almost_there: function(d) { return \"This task has little work to be done\"; },\n      done: function(d) { return \"The main code for the task is ready!\"; },\n      work_on_task: function(d) { return \"Work on the current task (1 hr)\"; },\n      work_done_1: function(d) { return \"With a crack of your knuckles, you get to work. After an hour of continuous tapping on your keyboard, you finally reach the point where you can make a commit\"; },\n      work_done_2: function(d) { return \"Stretching in your chair, you get to work. After an hour of hard refactoring, you finally reach a point where you can commit\"; },\n      work_done_3: function(d) { return \"Taking a sip of coffee, you get to work. After an hour of creating services, you finally reach a point where you can commit\"; },\n      work_done_4: function(d) { return \"Taking a deep breath, you get to work. After an hour of rewriting code, you finally reach a point where you can commit\"; },\n      passed_to_review: function(d) { return \"With a sense of accomplishment, you submit the task for review\"; },\n      tests_done: function(d) { return \"Finding a couple of bugs along the way, you test most of the code. You feel a little calmer\"; },\n      qa_instructions_done: function(d) { return \"Trying to soothe your conscience, you describe the detailed changes made in the task and the areas that need to be thoroughly tested. This should simplify and accelerate the QA process\"; },\n      task_done: function(d) { return \"The current task is complete!\"; },\n      action: {\n        pass_to_review: function(d) { return \"Submit the task for review\"; },\n        write_tests: function(d) { return \"Write tests (1 hr)\"; },\n        write_qa_instructions: function(d) { return \"Write detailed instructions for QA (1 hour)\"; },\n        open_wrike_to_take_new_task: function(d) { return \"Open Wrike and accept the next one\"; },\n        do_something_else: function(d) { return \"Do something else\"; }\n      }\n    },\n    code_review: {\n      look_at_code: {\n        bad: function(d) { return \"You open \" + x(d.name, \"en\", (\" genitive\").trim()) + \"'s task with the ever-sluggish GitPub. To be honest, the code looks awful\"; },\n        not_too_bad: function(d) { return \"You open \" + x(d.name, \"en\", (\" genitive\").trim()) + \"'s task with the slowly working GitPub. The code looks quite messy\"; },\n        ok: function(d) { return \"You open \" + x(d.name, \"en\", (\" genitive\").trim()) + \"'s task with the ever-sluggish GitPub. At first glance, the code looks good\"; }\n      },\n      passed_to_qa_without_looking: function(d) { return \"Without thinking much, you set 'Review OK' and transfer the task to QA. You trust your team.\"; },\n      found_bugs: function(d) { return \"Checking the code thoroughly, you find several bugs and controversial points. The task is returned to the developer.\"; },\n      couldnt_find_bugs: function(d) { return \"Scrutinizing the code for a long time, you still can't find anything to complain about. The task is sent for testing\"; },\n      action: {\n        pass_to_qa_without_looking: function(d) { return \"Submit for testing without checking\"; },\n        look_at_code: function(d) { return \"Carefully check the code (1 hr)\"; },\n        do_something_else: function(d) { return \"Think it over\"; }\n      }\n    },\n    standup: {\n      you: {\n        name: function(d) { return \"You\"; },\n        working_on: function(d) { return \"For now I'm working on \" + d.task; },\n        will_take_next_task: function(d) { return \"I accept the next task\"; }\n      },\n      teammate: {\n        worked_on: {\n          v1: function(d) { return \"I've worked on\"; },\n          v2: function(d) { return \"I've tried to do\"; },\n          v3: function(d) { return \"I've gotten stuck on\"; },\n          v4: function(d) { return \"I've worked on\"; },\n          v5: function(d) { return \"I've been slow on\"; },\n          v6: function(d) { return \"I've dug into\"; },\n          v7: function(d) { return \"I've tried to understand\"; },\n          base: function(d) { return d.worked_on + \" \" + d.task; },\n          stuck: function(d) { return d.worked_on + \" \" + d.task + \", I've gotten a little stuck trying to figure it out\"; },\n          finishing_soon: function(d) { return d.worked_on + \" \" + d.task + \", I hope to finish it today\"; }\n        },\n        finished_all_tasks: {\n          v1: function(d) { return \"I've completed all my tasks and am waiting for the next one\"; },\n          v2: function(d) { return \"All tasks are complete, what should I do next?\"; },\n          v3: function(d) { return \"All previous tasks are completed, I'm ready to accept more\"; },\n          v4: function(d) { return \"The previous task is completed, what should I do next?\"; },\n          v5: function(d) { return \"I've completed everything I worked on, I'm ready for a new task\"; }\n        }\n      },\n      action: {\n        \"continue\": function(d) { return \"Continue\"; },\n        suggest_task: function(d) { return \"Suggest accepting \" + d.task + \", estimate: \" + d.estimated_time; },\n        continue_no_free_tasks: function(d) { return \"No tasks to be done, continue\"; },\n        assign_to_yourself: function(d) { return \"Accept \" + d.task + \", estimate: \" + d.estimated_time; }\n      },\n      finished: function(d) { return \"The standup is over, a new working day has begun!\"; }\n    },\n    calendar: {\n      lunch: {\n        message: function(d) { return \"The local diner was crowded more than usual today. After standing in line, you bought \" + d.food + \" and ate with gusto. [+Health]\"; },\n        food: {\n          v1: function(d) { return \"pasta with chicken\"; },\n          v2: function(d) { return \"mashed potatoes with goulash\"; },\n          v3: function(d) { return \"soup\"; },\n          v4: function(d) { return \"cutlets\"; },\n          v5: function(d) { return \"a salad\"; },\n          v6: function(d) { return \"fish\"; },\n          v7: function(d) { return \"a slice of pizza\"; }\n        }\n      },\n      standup: {\n        info: function(d) { return \"At the daily standup, all team members share brief information about the work done on the previous day and current obstacles\"; }\n      },\n      one_on_one: {\n        info: function(d) { return \"At weekly One on One meetings, team members meet their line manager and discuss both work and personal issues in a free manner. This helps them to build trust and proactively identify potential problems\"; },\n        message: function(d) { return \"The One on One meeting was productive. \" + x(d.name, \"en\", (\" nominative\").trim()) + \" shared his feelings about deadlines and work success. You shared a piece of Team Lead wisdom and \" + x(d.name, \"en\", (\" nominative\").trim()) + \" was clearly pleased with it [+Skill]\"; }\n      },\n      knowledge_sharing: {\n        info: function(d) { return \"Knowledge Sharing is a weekly event where a developer covers a topic that is potentially useful to their colleagues. The topic of today's meeting is \" + d.topic; },\n        message: function(d) { return \"Sharing was very interesting today. You gain insights on \" + d.topic + \" and feel like you can do anything now [+Performance]\"; }\n      },\n      interview: {\n        info: function(d) { return \"It is your responsibility to participate in interviews with potential candidates, including candidates for other teams.\"; },\n        message: function(d) { return \"The interview was exhausting as always. But today's candidate, \" + d.candidate_name + \", was pretty interesting.\"; }\n      },\n      lead_meeting: {\n        info: function(d) { return \"The weekly team lead sync is a kind of forum for quick communication among teams. You can always hear the latest news about the work of your colleagues or ask questions about cross-functionality\"; },\n        message: function(d) { return \"There was nothing particularly interesting on today's sync\"; }\n      },\n      already_started: function(d) { return \"This meeting has already begun, you are late!\"; },\n      already_finished: function(d) { return \"This event has already ended\"; },\n      not_started_yet: function(d) { return \"This event has not started yet, you can join it later!\"; },\n      action: {\n        lunch: function(d) { return \"Take a lunch break (1 hr)\"; },\n        standup: function(d) { return \"Join the standup (1 hr)\"; },\n        one_on_one: function(d) { return \"Join the meeting (1 hr)\"; },\n        knowledge_sharing: function(d) { return \"Join and listen (1 hr)\"; },\n        interview: function(d) { return \"Join the call (2 hrs)\"; },\n        lead_meeting: function(d) { return \"Join the meeting (1 hr)\"; },\n        do_something_else: function(d) { return \"Think it over\"; }\n      }\n    },\n    teammate: {\n      action: {\n        help: function(d) { return \"Help \" + x(d.name, \"en\", (\" dative\").trim()) + \" with the task (1 hr)\"; }\n      },\n      helped: function(d) { return \"Taking a fresh look at \" + x(d.name, \"en\", (\" genitive\").trim()) + \"'s task, you quickly find the problem and help them with your advice [+Skill]\"; },\n      nothing_to_talk_about: function(d) { return \"I've got no idea what we can talk about now\"; },\n      cant_talk_after_work: function(d) { return \"It's too late now and \" + x(d.name, \"en\", (\" nominative\").trim()) + \" went offline, it is better to contact them later\"; }\n    },\n    task: {\n      status: {\n        not_started: function(d) { return \"Nobody has started working on this task\"; },\n        in_dev: {\n          you: function(d) { return \"Assigned to you now!\"; },\n          teammate: function(d) { return x(d.name, \"en\", (\" nominative\").trim()) + \" is currently working on this task\"; }\n        },\n        in_review: {\n          yours: function(d) { return \"You submitted this task to other team leads for review. This usually takes about one business day.\"; },\n          teammate: function(d) { return x(d.name, \"en\", (\" genitive\").trim()) + \"'s task is completed and waiting for your review\"; }\n        },\n        in_testing: function(d) { return \"This task was submitted for testing. If everything goes well, this process takes about one business day, but if serious defects are found, the task can always be returned to the developer.\"; },\n        done: function(d) { return \"This task is in production now. Great job!\"; }\n      },\n      action: {\n        go_to_editor: function(d) { return \"Go to CodeJunkie editor\"; },\n        go_to_review: function(d) { return \"Review\"; },\n        assign_to_you: function(d) { return \"Accept for development\"; }\n      }\n    },\n    inbox: {\n      review_info: function(d) { return \"As the developer completes a task, the code needs to be reviewed. Usually this task is assigned to the team lead (i.e. you)\"; },\n      returned_to_dev: function(d) { return \"It seems that the QA team has found serious bugs in this task and bounced it back to the developer\"; },\n      production_bug: function(d) { return \"Support ticket. Apparently, serious bugs have been found in one of our tasks transferred to production. They need to be fixed within the limited period (as agreed with clients). Bugs left: \" + d.num_bugs; },\n      production_bug_fixed: function(d) { return \"It looks like all the problems reported in the ticket have been fixed and the clients have confirmed that there are no defects, you can relax\"; },\n      action: {\n        review: function(d) { return \"Review\"; },\n        mark_as_read: function(d) { return \"Mark as read\"; },\n        fix_bugs: function(d) { return \"Work on bugs (1 hr)\"; },\n        do_something_else: function(d) { return \"Think it over\"; }\n      }\n    },\n    browser: {\n      jabr: function(d) { return \"Gabr is a popular resource with an ever-growing archive of technical articles\"; },\n      jabr_read: function(d) { return \"After scrolling through a couple of technical articles and a dozen holy wars in the comments, you feel increasingly big-brained [+Performance]\"; },\n      you_cube: function(d) { return \"What's new on your favorite video website?\"; },\n      you_cube_watched: function(d) { return \"After watching \" + d.video + \", you feel completely free of any worries [-Burnout]\"; },\n      video: {\n        v1: function(d) { return \"funny moments from The Office series\"; },\n        v2: function(d) { return \"a couple of Lapenko videos\"; },\n        v3: function(d) { return \"an interview by Yury Dud\"; },\n        v4: function(d) { return \"a review by Wylsacom\"; },\n        v5: function(d) { return \"Let's Play by Kuplinov\"; },\n        v6: function(d) { return \"a series of Nasty Stories by ClickClack\"; },\n        v7: function(d) { return \"a video by Syenduk\"; },\n        v8: function(d) { return \"a TiX episode\"; },\n        v9: function(d) { return \"a new invention video by KREOSAN\"; }\n      },\n      action: {\n        read_jabr: function(d) { return \"Read Gabr (1 hr)\"; },\n        you_cube: function(d) { return \"Watch YouCube (1 hr)\"; }\n      }\n    },\n    computer: {\n      finish_work_for_today: function(d) { return \"Finish work (for today)\"; }\n    },\n    weekend: {\n      day: {\n        mon: function(d) { return \"It's Monday\"; },\n        tue: function(d) { return \"It's Tuesday\"; },\n        wed: function(d) { return \"It's Wednesday\"; },\n        thu: function(d) { return \"It's Thursday\"; },\n        fri: function(d) { return \"It's Friday\"; },\n        sat: function(d) { return \"It's Saturday\"; },\n        sun: function(d) { return \"It's Sunday\"; }\n      },\n      message: function(d) { return d.day_started + \". Today is your well-deserved day off. You can continue working, but you'd better relax on the weekend.\"; },\n      action: {\n        rest: function(d) { return \"Relax until Monday\"; },\n        do_something_else: function(d) { return \"Do something else\"; }\n      }\n    },\n    game_over: {\n      reason: {\n        victory: function(d) { return \"Tasks went to production one by one and you didn't notice that the backlog ended. You did it! You met the deadline!\"; },\n        deadline_failed: function(d) { return \"The deadline got closer day after day, week after week. You felt that this would happen, but you continued to work in some kind of zealous stupor hoping that things would sort themselves out. But they failed to do so. You missed the deadline. The customer is lost. The end.\"; },\n        fired: function(d) { return \"Your computer unexpectedly locked. Cursing the PearNote developers for the umpteenth time, you tried to resume work by entering your password. The laptop continued to deny your legitimacy making a disgusting sound with every failed login attempt. \\\"Apparently it is dead,\\\" you thought while taking out your phone to contact the helpdesk engineers. You get a new email. \\\"Dismissed in one day for dereliction of duty.\\\" What?!\"; },\n        bad_health: function(d) { return \"Recently you have been absorbed in your work, ignoring meals and sleep. You don't even notice as your skin becomes pale, and you have dark circles under your eyes. Your family members find you fainting right at the computer. You are brought to the hospital, and you can forget about work for the next couple of weeks, not to mention the approaching deadline.\"; },\n        burnout: function(d) { return \"You forgot to what it feels like to relax. Completing task after task, you didn't notice that all your free time turned into work time. Suddenly something clicked inside you. Why do you need this all? Why all this effort? Where am I going? “Screw it all up! Damn the work, damn the deadline, I don't care anymore!”, you think and buy an air ticket to the place where your parents lived. Burnout is no joke, you know.\"; }\n      },\n      tip: {\n        bad_health: function(d) { return \"Remember to get enough food and rest\"; },\n        burnout: function(d) { return \"Work less after hours, including weekends!\"; },\n        fired: function(d) { return \"Remember to attend important business meetings and track bugs in production (in your inbox)\"; }\n      },\n      message: {\n        header: function(d) { return \"Game over\"; },\n        difficulty: function(d) { return \"Difficulty: \" + d.difficulty; },\n        tip: function(d) { return \"Hint: \" + d.tip; },\n        restart: function(d) { return \"Reload the page to restart.\"; }\n      }\n    }\n  },\n  top_bar: {\n    day: {\n      mon: function(d) { return \"Monday\"; },\n      tue: function(d) { return \"Tuesday\"; },\n      wed: function(d) { return \"Wednesday\"; },\n      thu: function(d) { return \"Thursday\"; },\n      fri: function(d) { return \"Friday\"; },\n      sat: function(d) { return \"Saturday\"; },\n      sun: function(d) { return \"Sunday\"; }\n    },\n    today: function(d) { return \"September \" + plural(d.day, 0, en, { other: number(\"en\", d.day, 0) }, 1) + \", \" + d.day_of_week; },\n    finish_work_tip: function(d) { return \"You can finish your day's work here\"; }\n  },\n  assigned_to_you: function(d) { return \"You\"; },\n  difficulty: {\n    junior: function(d) { return \"Junior\"; },\n    middle: function(d) { return \"Middle\"; },\n    senior: function(d) { return \"Senior\"; },\n    teamlead: function(d) { return \"Team lead\"; }\n  },\n  deadline_stats: {\n    days_until: function(d) { return \"The deadline is in \" + plural(d.days, 0, en, { one: number(\"en\", d.days, 0) + \" day\", other: number(\"en\", d.days, 0) + \" days\" }); },\n    tasks_remaining: function(d) { return plural(d.tasks, 0, en, { one: \"\", other: \"\" }) + \" \" + plural(d.tasks, 0, en, { other: number(\"en\", d.tasks, 0) }) + \" \" + plural(d.tasks, 0, en, { one: \"task left\", other: \"tasks left\" }) + \" (of \" + d.total + \")\"; },\n    backlog: function(d) { return plural(d.tasks, 0, en, { other: number(\"en\", d.tasks, 0) }) + \" \" + plural(d.tasks, 0, en, { one: \"task backlogged\", other: \"tasks backlogged\" }); }\n  },\n  status: {\n    health: {\n      perfect: function(d) { return \"Perfect\"; },\n      good: function(d) { return \"Good\"; },\n      fine: function(d) { return \"Feeble\"; },\n      bad: function(d) { return \"Poor\"; },\n      terrible: function(d) { return \"Sick\"; },\n      zero: function(d) { return \"Collapsing\"; }\n    },\n    company: {\n      perfect: function(d) { return \"Perfect\"; },\n      good: function(d) { return \"HR reps begin to suspect something\"; },\n      fine: function(d) { return \"Conversations are underway with your manager\"; },\n      bad: function(d) { return \"A Personal Improvement Plan is being drawn up\"; },\n      terrible: function(d) { return \"Dismissal papers are being signed\"; },\n      zero: function(d) { return \"Fired\"; }\n    },\n    burnout: {\n      perfect: function(d) { return \"Perfect\"; },\n      good: function(d) { return \"Light annoyance at work\"; },\n      fine: function(d) { return \"Hard to get up in the morning\"; },\n      bad: function(d) { return \"Sick of working\"; },\n      terrible: function(d) { return \"Almost burnt out\"; },\n      zero: function(d) { return \"Burnt out\"; }\n    },\n    label: {\n      health: function(d) { return \"Physical health\"; },\n      burnout: function(d) { return \"Mental health\"; },\n      company: function(d) { return \"Status in the company\"; },\n      performance: function(d) { return \"Performance\"; }\n    }\n  },\n  chat: {\n    action: {\n      message_teammate: function(d) { return \"Write to \" + x(d.name, \"en\", (\" dative\").trim()); }\n    },\n    greetings: {\n      v1: function(d) { return \"Hi there\"; },\n      v2: function(d) { return \"Hey\"; },\n      v3: function(d) { return \"Hi\"; },\n      v4: function(d) { return \"Hello\"; },\n      v5: function(d) { return \"What's up?\"; }\n    },\n    thanks: {\n      v1: function(d) { return \"Thanks\"; },\n      v2: function(d) { return \"Thank you!\"; },\n      v3: function(d) { return \"Thank you!!\"; }\n    },\n    figured_out: {\n      v1: function(d) { return \"Got it\"; },\n      v2: function(d) { return \"All right, I figured it out, sorry\"; },\n      v3: function(d) { return \"Ah, I figured it out myself\"; },\n      v4: function(d) { return \"Aha, I figured out the problem, don't mind me!\"; },\n      v5: function(d) { return \"I've understood it by myself, I'll write you if anything goes wrong\"; }\n    },\n    help: {\n      v1: function(d) { return \"I've gotten stuck with \" + d.task_name + \", can you help?\"; },\n      v2: function(d) { return \"I can't understand \" + d.task_name + \" \" + plural(d.sadness, 0, en, { one: \"\", \"0\": \"(\", \"1\": \"((\", other: \"(((\" }) + \" Can you help please?\"; },\n      v3: function(d) { return \"I'm stuck on \" + d.task_name + \". Help me please?\"; },\n      v4: function(d) { return d.task_name + \" is too much for me, can you help?\"; },\n      v5: function(d) { return \"Can I call you to discuss \" + d.task_name + \"? I can't figure out one problem\"; }\n    }\n  },\n  teammate: {\n    name_nom_gen_dat: {\n      v1: function(d) { return \"Jack|Jack|Jack\"; },\n      v2: function(d) { return \"John|John|John\"; },\n      v3: function(d) { return \"David|David|David\"; },\n      v4: function(d) { return \"Paul|Paul|Paul\"; },\n      v5: function(d) { return \"Peter|Peter|Peter\"; }\n    }\n  },\n  candidate: {\n    first_names: function(d) { return \"Oliver|Harry|Jacob|Charles|Thomas|George|Oscar|James|William|Noah|Liam|Mason|Ethan|Michael|Alexander|Daniel|Joseph|Richard|Robert|Damian|Henry|Leo|Edward|Max|Samuel|Arthur\"; },\n    last_names: function(d) { return \"Smith|Jones|Williams|Brown|Taylor|Foster|Wilson|Evans|Thomas|Roberts|Johnson|Miller|Davis|Murphy|Martin|Roy|Lee|White|Bell|Burton|Stevens|Lewis|Walker|Payne|Baker|Holmes|Owen\"; }\n  },\n  app: {\n    browser: {\n      name: function(d) { return \"Iron Browser\"; }\n    },\n    chat: {\n      name: function(d) { return \"Limp Messenger\"; }\n    },\n    calendar: {\n      name: function(d) { return \"Clndr\"; }\n    },\n    editor: {\n      name: function(d) { return \"Code Junkie\"; }\n    },\n    wrike: {\n      name: function(d) { return \"Wrike\"; }\n    },\n    computer: {\n      name: function(d) { return \"PearNote\"; }\n    }\n  },\n  website: {\n    blog: function(d) { return \"Gabr\"; },\n    videos: function(d) { return \"YouCube\"; }\n  }\n}", "import { number, plural } from '@messageformat/runtime';\nimport { ru } from '@messageformat/runtime/lib/plurals';\n\nconst x = (value, locale, arg) => {\n                        return value[arg];\n                    };\nexport default {\n  overlay: {\n    intro: {\n      header: function(d) { return \"Вы - тимлид\\nВаша команда:\\n\" + d.team; },\n      difficulty: function(d) { return \"Сложность: \" + d.difficulty; },\n      teammate: function(d) { return x(d.name, \"ru\", (\" nominative\").trim()) + \" - специалист в \" + d.skills; }\n    },\n    editor: {\n      nothing_done: function(d) { return \"В этой задаче совсем ничего не сделано. Время поработать?\"; },\n      lots_of_work: function(d) { return \"В текущей задаче еще полно работы\"; },\n      mostly_done: function(d) { return \"Кажется, в этой задаче большая часть работы готова\"; },\n      almost_there: function(d) { return \"В задачке осталось совсем немного работы\"; },\n      done: function(d) { return \"Основной код задачи готов!\"; },\n      work_on_task: function(d) { return \"Работать над текущей задачей (1 ч.)\"; },\n      work_done_1: function(d) { return \"Хрустнув пальцами, Вы приступили к работе. Спустя час непрерывного стука по клавиатуре Вы наконец дошли до состояния, когда можно сделать коммит\"; },\n      work_done_2: function(d) { return \"Потянувшись в кресле, Вы приступили к работе. Спустя час злостного рефакторинга Вы наконец дошли до состояния, когда можно сделать коммит\"; },\n      work_done_3: function(d) { return \"Сделав глоток кофе, Вы приступили к работе. Спустя час распиливания сервисов Вы наконец дошли до состояния, когда можно сделать коммит\"; },\n      work_done_4: function(d) { return \"Глубоко вдохнув, Вы приступили к работе. Спустя час переписывания чужого кода Вы наконец дошли до состояния, когда можно сделать коммит\"; },\n      passed_to_review: function(d) { return \"С чувством выполненного долга, Вы передали задачу в ревью\"; },\n      tests_done: function(d) { return \"Поймав по пути пару багов, Вы покрыли большую часть кода тестами. На душе стало чуть-чуть спокойнее\"; },\n      qa_instructions_done: function(d) { return \"Попытавшись успокоить совесть, Вы подробно описали изменения сделанные в задаче и моменты, которые нужно тщательно протестировать. Это точно должно упростить и ускорить процесс QA\"; },\n      task_done: function(d) { return \"С текущей задачкой покончено!\"; },\n      action: {\n        pass_to_review: function(d) { return \"Передать задачу в ревью\"; },\n        write_tests: function(d) { return \"Написать тесты (1 ч.)\"; },\n        write_qa_instructions: function(d) { return \"Написать подробные инструкции для QA (1 ч.)\"; },\n        open_wrike_to_take_new_task: function(d) { return \"Открыть Wrike и взять следующую\"; },\n        do_something_else: function(d) { return \"Заняться чем-нибудь другим\"; }\n      }\n    },\n    code_review: {\n      look_at_code: {\n        bad: function(d) { return \"Вы открыли задачу \" + x(d.name, \"ru\", (\" genitive\").trim()) + \" в вечно тормозящем GitPub'e. Код выглядит откровенно плохо\"; },\n        not_too_bad: function(d) { return \"Вы открыли задачу \" + x(d.name, \"ru\", (\" genitive\").trim()) + \" в вечно тормозящем GitPub'e. Код смотрится довольно небрежным\"; },\n        ok: function(d) { return \"Вы открыли задачу \" + x(d.name, \"ru\", (\" genitive\").trim()) + \" в вечно тормозящем GitPub'e. На первый взляд, код неплох\"; }\n      },\n      passed_to_qa_without_looking: function(d) { return \"Недолго думая, Вы поставили 'Review OK' и передали задачу в QA. Своей команде Вы все-таки доверяете.\"; },\n      found_bugs: function(d) { return \"Тщательно прошерстив код, Вы обнаружили в нем несколько багов и спорных моментов. Задача возвращается обратно к разработчику.\"; },\n      couldnt_find_bugs: function(d) { return \"Долго щурясь и всматриваясь в код, Вы все-же не смогли найти к чему придраться. Задача отправляется в тестирование\"; },\n      action: {\n        pass_to_qa_without_looking: function(d) { return \"Передать в тестирование не глядя\"; },\n        look_at_code: function(d) { return \"Тщательно просмотреть код (1 ч.)\"; },\n        do_something_else: function(d) { return \"Подумать еще\"; }\n      }\n    },\n    standup: {\n      you: {\n        name: function(d) { return \"Вы\"; },\n        working_on: function(d) { return \"Пока что работаю над \" + d.task; },\n        will_take_next_task: function(d) { return \"Беру следующую задачу в работу\"; }\n      },\n      teammate: {\n        worked_on: {\n          v1: function(d) { return \"Работал над\"; },\n          v2: function(d) { return \"Старался над\"; },\n          v3: function(d) { return \"Залипал в\"; },\n          v4: function(d) { return \"Трудился над\"; },\n          v5: function(d) { return \"Тупил над\"; },\n          v6: function(d) { return \"Врубался в\"; },\n          v7: function(d) { return \"Втыкал в\"; },\n          base: function(d) { return d.worked_on + \" \" + d.task; },\n          stuck: function(d) { return d.worked_on + \" \" + d.task + \", немного застрял, пытаюсь разобраться\"; },\n          finishing_soon: function(d) { return d.worked_on + \" \" + d.task + \", надеюсь, сегодня закончу\"; }\n        },\n        finished_all_tasks: {\n          v1: function(d) { return \"Закончил все свои задачи, жду следующей\"; },\n          v2: function(d) { return \"Задачки кончились, что взять следующим?\"; },\n          v3: function(d) { return \"Предыдущие задачки уехали, готов взять еще\"; },\n          v4: function(d) { return \"Прошлая задачка готова, какую брать дальше?\"; },\n          v5: function(d) { return \"Доделал всё, над чем работал, буду брать новую задачку\"; }\n        }\n      },\n      action: {\n        \"continue\": function(d) { return \"Продолжить\"; },\n        suggest_task: function(d) { return \"Предложить взять \" + d.task + \", оценка: \" + d.estimated_time; },\n        continue_no_free_tasks: function(d) { return \"Нет свободных задач, продолжить\"; },\n        assign_to_yourself: function(d) { return \"Взять на себя \" + d.task + \", оценка: \" + d.estimated_time; }\n      },\n      finished: function(d) { return \"Стендап закончен, рабочий день начался!\"; }\n    },\n    calendar: {\n      lunch: {\n        message: function(d) { return \"Сегодня в местной столовой как всегда людно. Отстояв в очереди, Вы купили \" + d.food + \" и с удовольствием пообедали. [+Здоровье]\"; },\n        food: {\n          v1: function(d) { return \"макарошки с курицей\"; },\n          v2: function(d) { return \"пюрешку с гуляшем\"; },\n          v3: function(d) { return \"супчик\"; },\n          v4: function(d) { return \"котлетки\"; },\n          v5: function(d) { return \"салатик\"; },\n          v6: function(d) { return \"рыбку\"; },\n          v7: function(d) { return \"кусочек пиццы\"; }\n        }\n      },\n      standup: {\n        info: function(d) { return \"На ежедневном стендапе все члены команды делятся краткой информацией о проделанной за предыдущий день работе и текущих блокерах\"; }\n      },\n      one_on_one: {\n        info: function(d) { return \"На еженедельных One on One встречах члены команды встречаются с их прямым менеджером и обсуждают рабочие и личные вопросы в свободной форме. Это помогает увеличить доверие между членами команды и выявить потенциальные проблемы заранее\"; },\n        message: function(d) { return \"One on One прошел продуктивно. \" + x(d.name, \"ru\", (\" nominative\").trim()) + \" поделился своими переживаниями по поводу дедлайна и успехами в работе. Вы поделились кусочком тимлидской мудрости и \" + x(d.name, \"ru\", (\" nominative\").trim()) + \" явно остался доволен [+Навык]\"; }\n      },\n      knowledge_sharing: {\n        info: function(d) { return \"Knowledge Sharing - еженедельное событие на котором один из разработчиков освещает потенциально полезную коллегам тему. Тема сегодняшней встречи - \" + d.topic; },\n        message: function(d) { return \"Шейринг сегодня был максимально интересный. Вы буквально прозрели на тему \" + d.topic + \" и чувствуете, будто теперь можете вообще всё [+Производительность]\"; }\n      },\n      interview: {\n        info: function(d) { return \"Одна из Ваших обязанностей - участвовать в собеседованиях потенциальных кандидатов, в том числе в другие команды.\"; },\n        message: function(d) { return \"Собеседование как всегда было довольно выматывающим. Но сегодняшний кандидат, \" + d.candidate_name + \", был довольно интересным.\"; }\n      },\n      lead_meeting: {\n        info: function(d) { return \"Еженедельный синк тимлидов служит чем-то вроде форума для быстрой коммуникации среди команд. На нем всегда можно узнать свежие новости о работе других коллег или задать вопрос о пересекающейся функциональности\"; },\n        message: function(d) { return \"На сегодняшнем синке не было ничего особо интересного\"; }\n      },\n      already_started: function(d) { return \"Эта встреча уже началась, Вы опоздали!\"; },\n      already_finished: function(d) { return \"Это событие уже закончилось\"; },\n      not_started_yet: function(d) { return \"Это событие еще не началось, к нему можно будет присоединиться позже!\"; },\n      action: {\n        lunch: function(d) { return \"Идти на обед (1 ч.)\"; },\n        standup: function(d) { return \"Подключиться к стендапу (1 ч.)\"; },\n        one_on_one: function(d) { return \"Подключиться к встрече (1 ч.)\"; },\n        knowledge_sharing: function(d) { return \"Присоединиться и послушать (1 ч.)\"; },\n        interview: function(d) { return \"Подключиться к звонку (2 ч.)\"; },\n        lead_meeting: function(d) { return \"Подключиться к встрече (1 ч.)\"; },\n        do_something_else: function(d) { return \"Подумать еще\"; }\n      }\n    },\n    teammate: {\n      action: {\n        help: function(d) { return \"Помочь \" + x(d.name, \"ru\", (\" dative\").trim()) + \" с задачей (1 ч.)\"; }\n      },\n      helped: function(d) { return \"Свежим взглядом пробежавшись по задаче \" + x(d.name, \"ru\", (\" genitive\").trim()) + \", Вы довольно быстро обнаружили проблему и мудрым советом помогли ему продолжить работу [+Навык]\"; },\n      nothing_to_talk_about: function(d) { return \"Не приходит в голову, о чем сейчас можно было бы поговорить\"; },\n      cant_talk_after_work: function(d) { return \"Время уже не рабочее и \" + x(d.name, \"ru\", (\" nominative\").trim()) + \" ушел в оффлайн, лучше написать ему позже\"; }\n    },\n    task: {\n      status: {\n        not_started: function(d) { return \"Над этой задачей еще никто не начинал работу\"; },\n        in_dev: {\n          you: function(d) { return \"Сейчас назначена на Вас!\"; },\n          teammate: function(d) { return \"Над этой задачей сейчас работает \" + x(d.name, \"ru\", (\" nominative\").trim()); }\n        },\n        in_review: {\n          yours: function(d) { return \"Вы передали эту задачу в ревью другим тимлидам. Обычно это занимает порядка одного рабочего дня.\"; },\n          teammate: function(d) { return \"Задача \" + x(d.name, \"ru\", (\" genitive\").trim()) + \" готова и ждет от Вас ревью\"; }\n        },\n        in_testing: function(d) { return \"Эта задача была передана в тестирование. Если все идет нормально, этот процесс занимает порядка одного рабочего дня, но при обнаружении серьезных дефектов, задача всегда может быть возвращена разработчику.\"; },\n        done: function(d) { return \"Эта задача уже на проде. Мы такие молодцы!\"; }\n      },\n      action: {\n        go_to_editor: function(d) { return \"Перейти в редактор CodeJunkie\"; },\n        go_to_review: function(d) { return \"Сделать ревью\"; },\n        assign_to_you: function(d) { return \"Взять в разработку\"; }\n      }\n    },\n    inbox: {\n      review_info: function(d) { return \"После выполнения задачи разработчиком необходимо провести ревью кода. Обычно эта задача ложится на тимлида (т.е. Вас)\"; },\n      returned_to_dev: function(d) { return \"Судя по всему, команда QA обнаружила в этой задаче серьезные баги и вернула ее обратно разработчику\"; },\n      production_bug: function(d) { return \"Тикет от саппорта. Судя по всему в одной из наших задач, которая уже уехала на прод, обнаружились серьезные баги. Их нужно исправить за отведенное время (по нашей договоренности с клиентами). Багов осталось: \" + d.num_bugs; },\n      production_bug_fixed: function(d) { return \"Похоже, что все проблемы в тикете были исправлены, клиенты подтвердили отсутствие дефектов, можно расслабиться\"; },\n      action: {\n        review: function(d) { return \"Сделать ревью\"; },\n        mark_as_read: function(d) { return \"Пометить прочитанным\"; },\n        fix_bugs: function(d) { return \"Работать над багами (1 ч.)\"; },\n        do_something_else: function(d) { return \"Подумать еще\"; }\n      }\n    },\n    browser: {\n      jabr: function(d) { return \"Жабр - один из самых известных ресурсов с постоянно пополняющимся архивом технических статей\"; },\n      jabr_read: function(d) { return \"Пролистав пару технических статей и с десяток холиваров в комментариях, Вы буквально чувствуете, как растет Ваш мозг [+Производительность]\"; },\n      you_cube: function(d) { return \"Интересно что нового на Вашем любимом сайте с видосиками?\"; },\n      you_cube_watched: function(d) { return \"Посмотрев \" + d.video + \", Вы чувствуете себя совершенно свободным от мирских забот [-Выгорание]\"; },\n      video: {\n        v1: function(d) { return \"смешные моменты из Офиса\"; },\n        v2: function(d) { return \"пару видосов Лапенко\"; },\n        v3: function(d) { return \"интервью Дудя\"; },\n        v4: function(d) { return \"обзор Вилсакома\"; },\n        v5: function(d) { return \"летсплей Куплинова\"; },\n        v6: function(d) { return \"серию Зашкварных Историй\"; },\n        v7: function(d) { return \"видосик Сыендука\"; },\n        v8: function(d) { return \"эпизод TiX\"; },\n        v9: function(d) { return \"видео об очередном изобретении KREOSAN'а\"; }\n      },\n      action: {\n        read_jabr: function(d) { return \"Читать Жабр (1 ч.)\"; },\n        you_cube: function(d) { return \"Смотреть Юкуб (1 ч.)\"; }\n      }\n    },\n    computer: {\n      finish_work_for_today: function(d) { return \"Завершить работу (на сегодня)\"; }\n    },\n    weekend: {\n      day: {\n        mon: function(d) { return \"Наступил понедельник\"; },\n        tue: function(d) { return \"Наступил вторник\"; },\n        wed: function(d) { return \"Наступила среда\"; },\n        thu: function(d) { return \"Наступил четверг\"; },\n        fri: function(d) { return \"Наступила пятница\"; },\n        sat: function(d) { return \"Наступила суббота\"; },\n        sun: function(d) { return \"Наступило воскресенье\"; }\n      },\n      message: function(d) { return d.day_started + \". Сегодня у Вас заслуженный выходной. Вы можете продолжить работать, но достоверно известно, что в выходные нужно отдыхать.\"; },\n      action: {\n        rest: function(d) { return \"Отдыхать до понедельника\"; },\n        do_something_else: function(d) { return \"Заняться чем-то еще\"; }\n      }\n    },\n    game_over: {\n      reason: {\n        victory: function(d) { return \"Задачка за задачкой уходили в прод и Вы едва успели заметить, как закончился беклог. Вы сделали это! Дедлайн побежден!\"; },\n        deadline_failed: function(d) { return \"День за днем, неделя за неделей, дедлайн подбирался всё ближе. Вы уже давно чувствовали, что это случится, но в каком-то рьяном ступоре продолжали работать, возможно надеясь, что оно как-то само собой рассосется. Не рассосалось. Дедлайн провален. Клиент потерян. Крышка.\"; },\n        fired: function(d) { return \"Ваш компьютер неожиданно заблокировался. В сотый раз проклиная производителей PearNote Вы попытались вернуться к работе, введя пароль. Ноутбук все продолжал отрицать легитимность его хозяина, издавая противный звук при каждой неудачной попытке входа. \\\"Видимо ему совсем кранты\\\", подумали Вы, доставая телефон, чтобы написать инженерам хелпдеска. На почту упало новое письмо. \\\"Уволен одним днем за неисполнение служебных обязанностей\\\". Что?!\"; },\n        bad_health: function(d) { return \"В последние дни Вы совсем погрузились в работу, игнорируя приемы пищи и сон. За всем этим Вы и не заметили, как кожа приобрела бледный оттенок, а под глазами появились синие мешки. Ваши родственники нашли Вас в состоянии обморока прямо у компьютера. Вы отправляетесь в больницу, о работе можно забыть на следующие пару недель, не говоря уже о приближающемся дедлайне.\"; },\n        burnout: function(d) { return \"Вы уже и забыли, что такое отдых. Закрывая задачу за задачей, Вы не заметили, как все свободное время превратилось в рабочее. В какой-то момент внутри Вас что-то щелкнуло. Зачем Вам вообще это нужно? К чему все эти старания? Куда я двигаюсь? \\\"А пропади оно все пропадом! К черту работу, к черту дедлайн, мне уже все равно!\\\", подумали Вы и купили авиабилет в Саратов, к родителям. Выгорание - это Вам не шутки.\"; }\n      },\n      tip: {\n        bad_health: function(d) { return \"Не забывайте есть и достаточно спать\"; },\n        burnout: function(d) { return \"Меньше работайте в нерабочее время, в том числе в выходные!\"; },\n        fired: function(d) { return \"Следите за посещением обязательным рабочих встреч и багами на продакшне (в вашем инбоксе)\"; }\n      },\n      message: {\n        header: function(d) { return \"Игра окончена\"; },\n        difficulty: function(d) { return \"Сложность: \" + d.difficulty; },\n        tip: function(d) { return \"Подсказка: \" + d.tip; },\n        restart: function(d) { return \"Перезагрузите страницу, чтобы начать заново.\"; }\n      }\n    }\n  },\n  top_bar: {\n    day: {\n      mon: function(d) { return \"Понедельник\"; },\n      tue: function(d) { return \"Вторник\"; },\n      wed: function(d) { return \"Среда\"; },\n      thu: function(d) { return \"Четверг\"; },\n      fri: function(d) { return \"Пятница\"; },\n      sat: function(d) { return \"Суббота\"; },\n      sun: function(d) { return \"Воскресенье\"; }\n    },\n    today: function(d) { return \"Сентябрь \" + plural(d.day, 0, ru, { other: number(\"ru\", d.day, 0) }, 1) + \", \" + d.day_of_week; },\n    finish_work_tip: function(d) { return \"Завершить работу на сегодня можно здесь\"; }\n  },\n  assigned_to_you: function(d) { return \"Вы\"; },\n  difficulty: {\n    junior: function(d) { return \"Джуниор\"; },\n    middle: function(d) { return \"Мидл\"; },\n    senior: function(d) { return \"Сеньор\"; },\n    teamlead: function(d) { return \"Тимлид\"; }\n  },\n  deadline_stats: {\n    days_until: function(d) { return \"До дедлайна \" + plural(d.days, 0, ru, { one: number(\"ru\", d.days, 0) + \" день\", few: number(\"ru\", d.days, 0) + \" дня\", many: number(\"ru\", d.days, 0) + \" дней\", other: number(\"ru\", d.days, 0) + \" дня\" }); },\n    tasks_remaining: function(d) { return plural(d.tasks, 0, ru, { one: \"Осталось\", few: \"Остались\", many: \"Осталось\", other: \"Осталось\" }) + \" \" + plural(d.tasks, 0, ru, { other: number(\"ru\", d.tasks, 0) }) + \" \" + plural(d.tasks, 0, ru, { one: \"задача\", few: \"задачи\", many: \"задач\", other: \"задачи\" }) + \" (из \" + d.total + \")\"; },\n    backlog: function(d) { return \"В беклоге \" + plural(d.tasks, 0, ru, { other: number(\"ru\", d.tasks, 0) }) + \" \" + plural(d.tasks, 0, ru, { one: \"задача\", few: \"задачи\", many: \"задач\", other: \"задачи\" }); }\n  },\n  status: {\n    health: {\n      perfect: function(d) { return \"Отличное\"; },\n      good: function(d) { return \"Хорошее\"; },\n      fine: function(d) { return \"Неважное\"; },\n      bad: function(d) { return \"Плохое\"; },\n      terrible: function(d) { return \"Отвратительное\"; },\n      zero: function(d) { return \"Обморок\"; }\n    },\n    company: {\n      perfect: function(d) { return \"Отличное\"; },\n      good: function(d) { return \"HR'ы начинают что-то подозревать\"; },\n      fine: function(d) { return \"С Вашим менеджером ведутся разговоры\"; },\n      bad: function(d) { return \"Оформляется Personal Improvement Plan\"; },\n      terrible: function(d) { return \"Подписываются бумаги об увольнении\"; },\n      zero: function(d) { return \"Уволен\"; }\n    },\n    burnout: {\n      perfect: function(d) { return \"Отличное\"; },\n      good: function(d) { return \"Легкое раздражение от работы\"; },\n      fine: function(d) { return \"Не хочется вставать по утрам\"; },\n      bad: function(d) { return \"Работа вызывает отвращение\"; },\n      terrible: function(d) { return \"Близко к выгоранию\"; },\n      zero: function(d) { return \"Выгорел\"; }\n    },\n    label: {\n      health: function(d) { return \"Физическое здоровье\"; },\n      burnout: function(d) { return \"Ментальное здоровье\"; },\n      company: function(d) { return \"Положение в компании\"; },\n      performance: function(d) { return \"Производительность\"; }\n    }\n  },\n  chat: {\n    action: {\n      message_teammate: function(d) { return \"Написать \" + x(d.name, \"ru\", (\" dative\").trim()); }\n    },\n    greetings: {\n      v1: function(d) { return \"Привет\"; },\n      v2: function(d) { return \"Прив\"; },\n      v3: function(d) { return \"Хай\"; },\n      v4: function(d) { return \"Даров\"; },\n      v5: function(d) { return \"Здоровеньки булы\"; }\n    },\n    thanks: {\n      v1: function(d) { return \"Спасибо\"; },\n      v2: function(d) { return \"Спасибо!\"; },\n      v3: function(d) { return \"Спасибо!!\"; }\n    },\n    figured_out: {\n      v1: function(d) { return \"Разобрался\"; },\n      v2: function(d) { return \"Всё, сам догнял, сорян\"; },\n      v3: function(d) { return \"Ух, все, допер сам\"; },\n      v4: function(d) { return \"Ага, понял сам в чем проблема, не отвлекаю\"; },\n      v5: function(d) { return \"Осилил сам вроде, если что ещё напишу\"; }\n    },\n    help: {\n      v1: function(d) { return \"Я что-то залип с \" + d.task_name + \", поможешь?\"; },\n      v2: function(d) { return \"Не могу разобраться с \" + d.task_name + \" \" + plural(d.sadness, 0, ru, { \"0\": \"(\", \"1\": \"((\", other: \"(((\" }) + \" Можешь помочь?\"; },\n      v3: function(d) { return \"Что-то я совсем застрял на \" + d.task_name + \".. Подсобишь?\"; },\n      v4: function(d) { return d.task_name + \" оказалась мне не по силам, поможешь?\"; },\n      v5: function(d) { return \"Можем созвониться по \" + d.task_name + \"? Не могу разобрать одну проблему\"; }\n    }\n  },\n  teammate: {\n    name_nom_gen_dat: {\n      v1: function(d) { return \"Иван|Ивана|Ивану\"; },\n      v2: function(d) { return \"Вася|Васи|Васе\"; },\n      v3: function(d) { return \"Дима|Димы|Диме\"; },\n      v4: function(d) { return \"Коля|Коли|Коле\"; },\n      v5: function(d) { return \"Вадик|Вадика|Вадику\"; }\n    }\n  },\n  candidate: {\n    first_names: function(d) { return \"Авдей|Авксентий|Агафон|Акакий|Александр|Владлен|Влас|Всеволод|Вячеслав|Макар|Максим|Марк|Матвей|Тарас|Тимофей|Тимур|Святослав|Севастьян|Семён|Серафим|Сергей|Павел|Паисий|Панкратий|Пантелеймон|Парфений\"; },\n    last_names: function(d) { return \"Сафонов|Капустин|Кириллов|Моисеев|Елисеев|Кошелев|Костин|Горбачёв|Орехов|Ефремов|Исаев|Евдокимов|Калашников|Кабанов|Носков|Юдин|Кулагин|Лапин|Прохоров|Нестеров|Харитонов|Агафонов|Муравьёв|Ларионов|Федосеев|Зимин|Пахомов\"; }\n  },\n  app: {\n    browser: {\n      name: function(d) { return \"Iron Browser\"; }\n    },\n    chat: {\n      name: function(d) { return \"Limp Messenger\"; }\n    },\n    calendar: {\n      name: function(d) { return \"Clndr\"; }\n    },\n    editor: {\n      name: function(d) { return \"Code Junkie\"; }\n    },\n    wrike: {\n      name: function(d) { return \"Wrike\"; }\n    },\n    computer: {\n      name: function(d) { return \"PearNote\"; }\n    }\n  },\n  website: {\n    blog: function(d) { return \"Jabr\"; },\n    videos: function(d) { return \"YouCube\"; }\n  }\n}", "import en from \"en.properties\";\nimport ru from \"ru.properties\";\n\nlet i18n = ru;\n\ntype XY = { x: number, y: number }\n\ntype Mouse_State = {\n    clicked: boolean\n    button: number\n    x: number\n    y: number\n    target_scroll_y: number\n    scroll_y: number\n}\n\nconst enum Button_State {\n    default = 0,\n    hovered = 1,\n    clicked = 2\n}\n\ntype Image_Resource = {\n    img: HTMLImageElement\n    loaded: boolean\n}\n\nconst enum Layout_Type {\n    vertical,\n    horizontal,\n    absolute\n}\n\ntype Layout = {\n    type: Layout_Type\n    cursor: XY\n}\n\ntype Font = {\n    size: number\n    weight: \"normal\" | \"bold\" | \"bolder\"\n    mono: boolean\n}\n\ntype Clip_Space = {\n    path: Path2D\n    fixed: false\n} | {\n    path: Path2D\n    fixed: true\n    fix_point: {\n        x: number\n        y: number\n    }\n}\n\n\nenum Task_Status {\n    new,\n    in_development,\n    in_review,\n    in_testing,\n    done\n}\n\ntype Day_Of_Week = 1 | 2 | 3 | 4 | 5 | 6 | 7;\n\ntype Game = {\n    out: CanvasRenderingContext2D\n    main_ctx: CanvasRenderingContext2D\n    overlay_ctx: CanvasRenderingContext2D\n    canvas_width: number\n    canvas_height: number\n    mouse: Mouse_State\n    any_button_clicked_this_frame: boolean\n    any_button_hovered_this_frame: boolean\n    context_stack: CanvasRenderingContext2D[]\n    layout_stack: Layout[]\n    font_stack: Font[]\n    clip_stack: WeakMap<CanvasRenderingContext2D, Clip_Space[]>\n    time: number\n    frame_time: number\n    blur: number\n    overlay_shown_at: number\n    dpi_scale: number\n\n    difficulty: Difficulty\n    day: number\n    deadline_day: number\n    day_of_week: Day_Of_Week\n    hour_of_day: number\n    player: Player\n    team: Teammate[]\n    backlog: Task[]\n    overlay: Overlay\n    today_events: Calendar_Event[]\n    inbox: Inbox_Entry[]\n    current_app?: App\n    apps: App[]\n}\n\ntype Player = {\n    burnout: number\n    health: number\n    company_status: number\n    productivity: number\n    attended_meetings_today: Calendar_Event_Type[]\n}\n\ntype Given_Name = {\n    nominative: string\n    genitive: string\n    dative: string\n}\n\ntype Teammate = {\n    name: Given_Name\n    skill_level: number\n    avatar: Image_Resource\n    messages: Message[]\n    skills: Skill[]\n    skill_title: string\n    messages_read: number\n}\n\ntype Assignee = {\n    you: true\n} | {\n    you: false\n    teammate: Teammate\n}\n\ntype Task_Base = {\n    name: string\n    full_name: string\n    estimated_time: number\n    time_spent: number\n    required_skills: Skill[]\n}\n\ntype Task = Task_Base & ({\n    status: Task_Status.new\n    estimated_time: number\n} | {\n    status: Task_Status.in_development\n    remaining_work_hours: number\n    developer_stuck_hours: number\n    has_already_stuck_once: boolean\n    assigned_to: Assignee\n    bugs: number\n    tests_written: boolean\n    instructions_for_qa_written: boolean\n} | {\n    status: Task_Status.in_review\n    assigned_to: Assignee\n    bugs: number\n    remaining_work_hours: number\n    instructions_for_qa_written: boolean\n} | {\n    status: Task_Status.in_testing\n    assigned_to: Assignee\n    remaining_work_hours: number\n    bugs: number\n} | {\n    status: Task_Status.done\n    bugs: number\n    can_backfire_on_prod: boolean\n    defects_found_on_prod: boolean\n})\n\nenum Calendar_Event_Type {\n    one_on_one,\n    lead_meeting,\n    candidate_interview,\n    daily_standup,\n    knowledge_sharing,\n    lunch\n}\n\ntype Calendar_Event_Base = {\n    start_hour: number\n    duration: number\n}\n\ntype Calendar_Event = Calendar_Event_Base & ({\n    type: Calendar_Event_Type.lead_meeting | Calendar_Event_Type.daily_standup | Calendar_Event_Type.lunch\n} | {\n    type: Calendar_Event_Type.knowledge_sharing\n    topic: string\n} | {\n    type: Calendar_Event_Type.one_on_one\n    teammate: Teammate\n} | {\n    type: Calendar_Event_Type.candidate_interview\n    candidate_name: string\n})\n\nenum App_Type {\n    code_junkie,\n    limp,\n    wrike,\n    clndr,\n    iron\n}\n\ntype App_Base = {\n    dock_hover_time: number\n}\n\ntype App = App_Base & ({\n    type: App_Type.code_junkie | App_Type.clndr | App_Type.iron\n} | {\n    type: App_Type.limp\n    current_chat?: Teammate\n} | {\n    type: App_Type.wrike\n    task_list_scroll_y: number\n    inbox_scroll_y: number\n})\n\ntype Message = {\n    received_at_day_of_week: Day_Of_Week\n    received_at_day: number\n    received_at_hour: number\n    text: string\n}\n\ntype By_Type<Union, Type> = Union extends { type: Type } ? Union : never;\ntype By_Status<Union, Status> = Union extends { status: Status } ? Union : never;\n\nenum Overlay_Type {\n    none,\n    lang,\n    intro,\n    standup_report,\n    code_review,\n    weekend,\n\n    calendar_event_menu,\n    message,\n    editor_work_menu,\n    computer_menu,\n    task_menu,\n    teammate_menu,\n    website_menu,\n    inbox_entry_menu,\n    game_over\n}\n\ntype Overlay = {\n    type: Overlay_Type.none\n} | {\n    type: Overlay_Type.lang\n} | {\n    type: Overlay_Type.intro\n} | {\n    type: Overlay_Type.standup_report\n    queue: Array<Teammate | undefined>\n    random_verb_divisible: number\n} | {\n    type: Overlay_Type.code_review\n    task: By_Status<Task, Task_Status.in_review>\n} | {\n    type: Overlay_Type.calendar_event_menu\n    at: XY\n    event: Calendar_Event\n} | {\n    type: Overlay_Type.message\n    text: string\n    next_overlay: Overlay\n} | {\n    type: Overlay_Type.editor_work_menu\n} | {\n    type: Overlay_Type.computer_menu\n    at: XY\n} | {\n    type: Overlay_Type.task_menu\n    at: XY\n    task: Task\n} | {\n    type: Overlay_Type.teammate_menu\n    teammate: Teammate\n    at: XY\n} | {\n    type: Overlay_Type.website_menu\n    website: Website\n    at: XY\n} | {\n    type: Overlay_Type.inbox_entry_menu\n    entry: Inbox_Entry\n    at: XY\n} | {\n    type: Overlay_Type.weekend\n} | {\n    type: Overlay_Type.game_over\n    reason: Game_Over_Reason\n}\n\nenum Skill {\n    dart,\n    typescript,\n    javascript,\n    java,\n    sql,\n    css\n}\n\nenum Website {\n    jabr,\n    you_cube\n}\n\nenum Difficulty {\n    junior,\n    middle,\n    senior,\n    teamlead\n}\n\nenum Inbox_Entry_Type {\n    review_task,\n    task_returned_to_dev,\n    production_bug\n}\n\ntype Inbox_Entry_Base = {\n    received_at_hour: number\n    received_at_day_of_week: Day_Of_Week\n    read: boolean\n}\n\ntype Inbox_Entry = Inbox_Entry_Base & ({\n    type: Inbox_Entry_Type.review_task\n    task: Task\n} | {\n    type: Inbox_Entry_Type.task_returned_to_dev\n    task: Task\n} | {\n    type: Inbox_Entry_Type.production_bug\n    task: By_Status<Task, Task_Status.done>\n    hours_remaining: number\n})\n\nenum Game_Over_Reason {\n    victory,\n    deadline_failed,\n    fired,\n    bad_health,\n    burnout\n}\n\nfunction all_skills() {\n    return [\n        Skill.dart,\n        Skill.java,\n        Skill.javascript,\n        Skill.sql,\n        Skill.typescript\n    ];\n}\n\nfunction skill_name(skill: Skill): string {\n    switch (skill) {\n        case Skill.dart: return \"Dart\";\n        case Skill.typescript: return \"TS\";\n        case Skill.javascript: return \"JS\";\n        case Skill.java: return \"Java\";\n        case Skill.sql: return \"SQL\";\n        case Skill.css: return \"CSS\";\n    }\n}\n\nlet game: Game;\n\nconst work_days = 5;\nconst week_days = 7;\nconst work_start_hour = 10;\nconst work_end_hour = 18;\n\nconst dev_mode = false;\nconst debug_clip = false;\nconst debug_buttons = false;\n\nconst image_cache: Map<string, Image_Resource> = new Map();\n\nfunction embed_base64(from_path: string): string {\n    return from_path;\n}\n\ndeclare function unreachable(x: never): never;\n\nfunction xy(x: number, y: number): XY {\n    return { x, y };\n}\n\nfunction image_from_url(url: string): Image_Resource {\n    const resource = image_cache.get(url);\n\n    if (resource) {\n        return resource;\n    }\n\n    const new_resource: Image_Resource = {\n        img: new Image(),\n        loaded: false\n    };\n\n    new_resource.img.onload = () => new_resource.loaded = true;\n    new_resource.img.src = url;\n\n    image_cache.set(url, new_resource);\n\n    return new_resource;\n}\n\nfunction contains(x: number, y: number, sx: number, sy: number, width: number, height: number) {\n    return x >= sx && y >= sy && x < sx + width && y < sy + height;\n}\n\nfunction point_to_screen_space(x: number, y: number): XY {\n    const p = point_to_world_space(x, y);\n    return xy(p.x / game.dpi_scale, p.y / game.dpi_scale);\n}\n\nfunction point_to_world_space(x: number, y: number): XY {\n    const p = current_context().getTransform().transformPoint({ x: x, y: y });\n    return xy(p.x, p.y);\n}\n\nfunction mouse_can_interact_with_area(top_left_x: number, top_left_y: number, width: number, height: number): boolean {\n    const clip = current_clip();\n\n    if (debug_buttons) {\n        const cursor = point_to_screen_space(0, 0);\n\n        push_context(game.overlay_ctx);\n        const ctx = current_context();\n        ctx.strokeStyle = \"red\";\n        ctx.lineWidth = 1;\n        ctx.strokeRect(cursor.x + top_left_x, cursor.y + top_left_y, width, height);\n        pop_context();\n    }\n\n    if (clip) {\n        const check_x = game.mouse.x;\n        const check_y = game.mouse.y;\n\n        let is_in_clip: boolean;\n        if (clip.fixed) {\n            const ctx = current_context();\n            const old = ctx.getTransform();\n            ctx.resetTransform();\n            ctx.translate(clip.fix_point.x, clip.fix_point.y);\n            is_in_clip = current_context().isPointInPath(clip.path, check_x, check_y);\n            ctx.setTransform(old);\n        } else {\n            // TODO Figure out what's wrong with this one\n            // is_in_clip = current_context().isPointInPath(clip.path, check_x, check_y);\n            is_in_clip = true;\n        }\n\n        if (!is_in_clip) return false;\n    }\n\n    const cursor = point_to_screen_space(0, 0);\n    return contains(game.mouse.x, game.mouse.y, cursor.x + top_left_x, cursor.y + top_left_y, width, height);\n}\n\nfunction button_behavior(top_left_x: number, top_left_y: number, width: number, height: number): Button_State {\n    const hovered = mouse_can_interact_with_area(top_left_x, top_left_y, width, height);\n\n    if (hovered && !game.any_button_hovered_this_frame) {\n        game.any_button_hovered_this_frame = true;\n\n        if (!game.any_button_clicked_this_frame && was_button_clicked(0)) {\n            game.any_button_clicked_this_frame = true;\n\n            return Button_State.clicked;\n        } else {\n            return Button_State.hovered;\n        }\n    }\n\n    return Button_State.default;\n}\n\nfunction do_button(text: string, top_left_x: number, top_left_y: number, font_size_px: number, padding: number): Button_State {\n    const ctx = current_context();\n\n    ctx.font = `${font_size_px}px Open Sans`;\n\n    const text_width = ctx.measureText(text).width;\n    const button_width = padding + text_width + padding;\n    const button_height = padding + font_size_px + padding;\n\n    const state = button_behavior(top_left_x, top_left_y, button_width, button_height);\n\n    ctx.fillStyle = state == Button_State.hovered ? \"#a4c7c2\" : \"#d0d0d0\";\n    ctx.fillRect(top_left_x, top_left_y, button_width, button_height);\n\n    ctx.fillStyle = \"black\";\n    ctx.fillText(text, top_left_x + padding, top_left_y + padding + font_size_px / 2);\n\n    return state;\n}\n\nfunction label(text: string) {\n    const ctx = current_context();\n    const font = game.font_stack[game.font_stack.length - 1];\n    const xy = layout_cursor();\n\n    ctx.fillText(text, xy.x, xy.y + font.size / 2);\n    push_size(font.size + 4);\n}\n\nfunction text_to_lines(text: string, wrap_at: number): string[] {\n    const paragraphs = text.split(\"\\n\");\n    const lines: string[] = [];\n\n    for (const paragraph of paragraphs) {\n        const words = paragraph.split(\" \");\n\n        let line = words[0];\n\n        const ctx = current_context();\n\n        for (let index = 1; index < words.length; index++) {\n            const word = words[index];\n            const width = ctx.measureText(line + \" \" + word).width;\n            if (width < wrap_at) {\n                line += \" \" + word;\n            } else {\n                lines.push(line);\n                line = word;\n            }\n        }\n\n        lines.push(line);\n    }\n\n    return lines;\n}\n\nfunction text(text: string, wrap_width: number) {\n    for (const line of text_to_lines(text, wrap_width)) {\n        label(line);\n    }\n}\n\nfunction button(text: string) {\n    const padding = 8;\n    const font_size_px = 18;\n    const xy = layout_cursor();\n    const state = do_button(text, xy.x, xy.y, font_size_px, padding) == Button_State.clicked;\n    push_size(padding + font_size_px + padding);\n    push_size(4);\n    return state;\n}\n\nfunction was_button_clicked(button: number) {\n    return game.mouse.button == button && game.mouse.clicked;\n}\n\nfunction layout_cursor() {\n    return game.layout_stack[game.layout_stack.length - 1].cursor;\n}\n\nfunction set_layout_cursor(x: number, y: number) {\n    const cursor = layout_cursor();\n    cursor.x = x;\n    cursor.y = y;\n}\n\nfunction push_layout(type: Layout_Type) {\n    const current = game.layout_stack[game.layout_stack.length - 1];\n\n    game.layout_stack.push({\n        type: type,\n        cursor: xy(current.cursor.x, current.cursor.y)\n    })\n}\n\nfunction pop_layout() {\n    game.layout_stack.pop();\n}\n\nfunction update_font() {\n    const font = game.font_stack[game.font_stack.length - 1];\n    current_context().font = `${font.weight} ${font.size}px ${font.mono ? \"monospace\" : \"sans-serif\"}`;\n}\n\nfunction push_font(size: number, weight: \"normal\" | \"bold\" | \"bolder\" = \"normal\", mono = false) {\n    game.font_stack.push({ size: size, weight: weight, mono: mono });\n    update_font();\n}\n\nfunction pop_font() {\n    game.font_stack.pop();\n    update_font();\n}\n\nfunction push_context(ctx: CanvasRenderingContext2D) {\n    game.context_stack.push(ctx);\n}\n\nfunction pop_context() {\n    game.context_stack.pop();\n}\n\nfunction current_context(): CanvasRenderingContext2D {\n    return game.context_stack[game.context_stack.length - 1];\n}\n\nfunction push_clip(path: Path2D, fixed = false) {\n    const ctx = current_context();\n    ctx.save();\n\n    if (debug_clip) {\n        ctx.strokeStyle = \"red\";\n        ctx.lineWidth = 2;\n        ctx.stroke(path);\n    }\n\n    ctx.clip(path);\n\n    const stack = game.clip_stack.get(ctx);\n    const clip_space: Clip_Space = fixed ?\n        { fixed: fixed, path: path, fix_point: point_to_screen_space(0, 0) } :\n        { fixed: fixed, path: path };\n\n    if (!stack) {\n        game.clip_stack.set(ctx, [clip_space]);\n    } else {\n        stack.push(clip_space);\n    }\n}\n\nfunction pop_clip() {\n    const ctx = current_context();\n    const stack = game.clip_stack.get(ctx);\n\n    if (stack) {\n        stack.pop();\n    }\n\n    ctx.restore();\n}\n\nfunction current_clip(): Clip_Space | undefined {\n    const ctx = current_context();\n    const stack = game.clip_stack.get(ctx);\n\n    if (stack && stack.length > 0) {\n        return stack[stack.length - 1];\n    }\n}\n\nfunction push_size(size: number) {\n    function increment_size(layout: Layout) {\n        switch (layout.type) {\n            case Layout_Type.horizontal: {\n                layout.cursor.x += size;\n                break;\n            }\n\n            case Layout_Type.vertical: {\n                layout.cursor.y += size;\n                break;\n            }\n\n            case Layout_Type.absolute: break;\n\n            default: unreachable(layout.type);\n        }\n    }\n\n    for (let index = game.layout_stack.length - 1; index >= 0; index--) {\n        const top = game.layout_stack[game.layout_stack.length - 1];\n        const current = game.layout_stack[index];\n\n        if (top.type == current.type) {\n            increment_size(current);\n        }\n    }\n}\n\nfunction show_overlay(overlay: Overlay) {\n    if (game.overlay.type == Overlay_Type.game_over) {\n        return;\n    }\n\n    if (overlay.type == Overlay_Type.game_over) {\n        close_current_app();\n    }\n\n    game.overlay = overlay;\n    game.overlay_shown_at = game.time;\n}\n\nfunction receive_message_from(teammate: Teammate, text: string, skip_greeting = false) {\n    const any_messages_today = teammate.messages.some(message => message.received_at_day == game.day);\n\n    if (!any_messages_today && !skip_greeting) {\n        const greetings = [\n            i18n.chat.greetings.v1(),\n            i18n.chat.greetings.v2(),\n            i18n.chat.greetings.v3(),\n            i18n.chat.greetings.v4(),\n            i18n.chat.greetings.v5()\n        ];\n\n        teammate.messages.push({\n            received_at_day: game.day,\n            received_at_hour: game.hour_of_day,\n            text: random_in_array(greetings) + random_in_array([\"\", \"!\"]), // @LangConcat\n            received_at_day_of_week: game.day_of_week\n        });\n    }\n\n    teammate.messages.push({\n        received_at_day: game.day,\n        received_at_hour: game.hour_of_day,\n        received_at_day_of_week: game.day_of_week,\n        text: text\n    })\n}\n\nconst images = {\n    logo_pear: image_from_url(embed_base64(\"images/pear.png\")),\n    icon_app_code_junkie: image_from_url(embed_base64(\"images/code_junkie.png\")),\n    icon_app_limp: image_from_url(embed_base64(\"images/limp.png\")),\n    icon_app_wrike: image_from_url(embed_base64(\"images/wrike.png\")),\n    icon_app_clndr: image_from_url(embed_base64(\"images/clndr.png\")),\n    icon_app_iron: image_from_url(embed_base64(\"images/iron.png\")),\n    icon_web_you_cube: image_from_url(embed_base64(\"images/you_cube.png\")),\n    icon_web_jabr: image_from_url(embed_base64(\"images/jabr.png\")),\n    background_day: image_from_url(embed_base64(\"images/mojave-day.jpg\")),\n    background_night: image_from_url(embed_base64(\"images/mojave-night.jpg\")),\n    logo_wrike: image_from_url(embed_base64(\"images/wrike_full.png\")),\n    logo_iron_big: image_from_url(embed_base64(\"images/iron_big_logo.png\")),\n    default_avatar: image_from_url(embed_base64(\"images/default_avatar.png\")),\n    people: [\n        image_from_url(embed_base64(\"images/people/1.jpg\")),\n        image_from_url(embed_base64(\"images/people/2.jpg\")),\n        image_from_url(embed_base64(\"images/people/3.jpg\")),\n        image_from_url(embed_base64(\"images/people/4.jpg\")),\n        image_from_url(embed_base64(\"images/people/5.jpg\")),\n        image_from_url(embed_base64(\"images/people/6.jpg\")),\n        image_from_url(embed_base64(\"images/people/7.jpg\")),\n        image_from_url(embed_base64(\"images/people/8.jpg\"))\n    ]\n};\n\nconst tokens = draw_code_editor.toString().split(\"\\n\").map(tokenize_code);\n\nfunction app_icon(app: App_Type): Image_Resource {\n    switch (app) {\n        case App_Type.code_junkie: return images.icon_app_code_junkie;\n        case App_Type.limp: return images.icon_app_limp;\n        case App_Type.wrike: return images.icon_app_wrike;\n        case App_Type.clndr: return images.icon_app_clndr;\n        case App_Type.iron: return images.icon_app_iron;\n    }\n}\n\nconst enum Token_Kind {\n    code,\n    keyword,\n    number,\n    string,\n    comment\n}\n\ntype Token = {\n    kind: Token_Kind\n    text: string\n}\n\nfunction difficulty_name(difficulty: Difficulty): string {\n    switch (difficulty) {\n        case Difficulty.junior: return i18n.difficulty.junior();\n        case Difficulty.middle: return i18n.difficulty.middle();\n        case Difficulty.senior: return i18n.difficulty.senior();\n        case Difficulty.teamlead: return i18n.difficulty.teamlead();\n    }\n}\n\nfunction tokenize_code(line: string): Token[] {\n    const tokens: Token[] = [];\n\n    let in_string = false;\n    let previous = \"\";\n    let current_token_start = 0;\n    let current_word_start = 0;\n    let index = 0\n\n    function push_token(kind: Token_Kind, text: string) {\n        tokens.push({\n            kind: kind,\n            text: text\n        });\n\n        current_word_start = index;\n        current_token_start = index;\n    }\n\n    const keywords = [\";\", \"const\", \"let\", \"function\", \"if\"];\n\n    function push_remains(text: string) {\n        if (text.length == 0) return;\n\n        if (keywords.includes(text)) {\n            push_token(Token_Kind.keyword, text);\n        } else if (/^\\d+$/.test(text)) {\n            push_token(Token_Kind.number, text);\n        } else {\n            push_token(Token_Kind.code, text);\n        }\n    }\n\n    for (index = 0; index < line.length; index++) {\n        const char = line[index];\n\n        const token_text = line.substring(current_token_start, index);\n\n        if (char == \"/\" && previous == \"/\") {\n            push_remains(line.substring(current_token_start, index - 1))\n            push_token(Token_Kind.comment, line.substring(index - 1))\n            return tokens;\n        }\n\n        if (in_string) {\n            if (char == \"\\\"\") {\n                index++;\n                push_token(Token_Kind.string, line.substring(current_token_start, index));\n                in_string = false;\n            }\n        } else {\n            const until_word = line.substring(current_token_start, current_word_start);\n            const word = line.substring(current_word_start, index);\n\n            if (keywords.includes(word)) {\n                push_remains(until_word);\n                push_token(Token_Kind.keyword, word);\n            } else if (/^\\d+$/.test(word)) {\n                push_remains(until_word);\n                push_token(Token_Kind.number, word);\n            }\n\n            if (char == \" \" || char == \"(\" || char == \")\" || char == \",\") {\n                current_word_start = index + 1;\n            }\n\n            if (char == \"\\\"\") {\n                push_remains(token_text);\n                in_string = true;\n            }\n        }\n\n        previous = char;\n    }\n\n    push_remains(line.substring(current_token_start));\n\n    return tokens;\n}\n\nfunction find_free_assignee(): Assignee | undefined {\n    for (const teammate of game.team) {\n        if (!find_first_assigned_task_in_dev(teammate)) {\n            return {\n                you: false,\n                teammate: teammate\n            }\n        }\n    }\n\n    if (!find_your_first_current_task_in_dev()) {\n        return { you: true };\n    }\n}\n\nfunction all_tasks(): Task[] {\n    return game.backlog;\n}\n\nfunction free_tasks(): By_Status<Task, Task_Status.new>[] {\n    const free: By_Status<Task, Task_Status.new>[] = [];\n\n    for (const task of all_tasks()) if (task.status == Task_Status.new) free.push(task);\n\n    return free;\n}\n\nfunction tasks_not_done() {\n    return all_tasks().filter(task => task.status != Task_Status.done).length;\n}\n\nfunction change_task(task: Task, new_state: Task) {\n    Object.assign(task, new_state);\n}\n\nfunction assign_task(task: By_Status<Task, Task_Status.new>, assignee: Assignee) {\n    const skills_non_possessed = assignee.you ? 0 : task.required_skills.filter(skill => assignee.teammate.skills.includes(skill)).length;\n\n    change_task(task, {\n        ...task,\n        status: Task_Status.in_development,\n        assigned_to: assignee,\n        remaining_work_hours: task.estimated_time + skills_non_possessed * 2,\n        developer_stuck_hours: 0,\n        bugs: 0,\n        tests_written: false,\n        instructions_for_qa_written: false,\n        has_already_stuck_once: false\n    });\n}\n\nfunction pass_task_to_review(task: By_Status<Task, Task_Status.in_development>) {\n    change_task(task, {\n        ...task,\n        status: Task_Status.in_review,\n        remaining_work_hours: 8\n    });\n}\n\nfunction return_task_from_review_to_development(task: By_Status<Task, Task_Status.in_review>, found_bugs: number) {\n    for (const entry of game.inbox) {\n        if (entry.type == Inbox_Entry_Type.review_task && entry.task == task) {\n            entry.read = true;\n        }\n    }\n\n    change_task(task, {\n        ...task,\n        status: Task_Status.in_development,\n        developer_stuck_hours: 0,\n        remaining_work_hours: found_bugs,\n        tests_written: false,\n        instructions_for_qa_written: false,\n        bugs: task.bugs - found_bugs,\n        has_already_stuck_once: false\n    })\n}\n\nfunction return_task_from_qa_to_development(task: By_Status<Task, Task_Status.in_testing>, found_bugs: number) {\n    change_task(task, {\n        ...task,\n        status: Task_Status.in_development,\n        developer_stuck_hours: 0,\n        remaining_work_hours: found_bugs,\n        tests_written: false,\n        instructions_for_qa_written: false,\n        bugs: task.bugs - found_bugs,\n        has_already_stuck_once: false\n    });\n\n    game.inbox.push({\n        type: Inbox_Entry_Type.task_returned_to_dev,\n        received_at_day_of_week: game.day_of_week,\n        received_at_hour: game.hour_of_day,\n        task: task,\n        read: false\n    });\n}\n\nfunction pass_task_to_qa(task: By_Status<Task, Task_Status.in_review>, work_hours: number) {\n    for (const entry of game.inbox) {\n        if (entry.type == Inbox_Entry_Type.review_task && entry.task == task) {\n            entry.read = true;\n        }\n    }\n\n    change_task(task, {\n        ...task,\n        status: Task_Status.in_testing,\n        remaining_work_hours: work_hours,\n    });\n}\n\nfunction deploy_task(task: By_Status<Task, Task_Status.in_testing>) {\n    change_task(task, {\n        ...task,\n        status: Task_Status.done,\n        can_backfire_on_prod: Math.random() > 0.3,\n        defects_found_on_prod: false\n    });\n\n    if (game.backlog.every(task => task.status == Task_Status.done)) {\n        show_overlay({ type: Overlay_Type.game_over, reason: Game_Over_Reason.victory });\n    }\n}\n\nfunction is_work_time() {\n    return game.hour_of_day >= work_start_hour && game.hour_of_day < work_end_hour && game.day_of_week <= work_days;\n}\n\nfunction increase_burnout_if_working_past_work_time() {\n    if (!is_work_time()) {\n        game.player.burnout = Math.min(100, game.player.burnout + 5);\n\n        if (game.player.burnout == 100) {\n            show_overlay({ type: Overlay_Type.game_over, reason: Game_Over_Reason.burnout });\n        }\n    }\n}\n\nfunction increase_health(by_how_much: number) {\n    game.player.health = Math.min(game.player.health + by_how_much, 100);\n}\n\nfunction path_rounded_rect(x: number, y: number, w: number, h: number, r: number): Path2D {\n    if (w < 2 * r) r = w / 2;\n    if (h < 2 * r) r = h / 2;\n\n    const path = new Path2D();\n\n    path.moveTo(x + r, y);\n    path.arcTo(x + w, y, x + w, y + h, r);\n    path.arcTo(x + w, y + h, x, y + h, r);\n    path.arcTo(x, y + h, x, y, r);\n    path.arcTo(x, y, x + w, y, r);\n\n    return path;\n}\n\nfunction path_circle(x: number, y: number, r: number) {\n    const ctx = current_context();\n\n    ctx.beginPath();\n    ctx.arc(x, y, r, 0, Math.PI * 2);\n    ctx.closePath();\n}\n\nfunction draw_line(color: string, width: number, x1: number, y1: number, x2: number, y2: number) {\n    const ctx = current_context();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = width;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.closePath();\n    ctx.stroke();\n}\n\nfunction fill_circle(color: string, x: number, y: number, r: number) {\n    const ctx = current_context();\n    ctx.fillStyle = color;\n    path_circle(x, y, r);\n    ctx.fill();\n}\n\n// https://stackoverflow.com/questions/6443990/javascript-calculate-brighter-colour\nfunction increase_brightness(hex: string, percent: number){\n    hex = hex.startsWith(\"#\") ? hex.substring(1) : hex;;\n\n    // convert 3 char codes --> 6, e.g. `E0F` --> `EE00FF`\n    if (hex.length == 3) {\n        hex = hex.replace(/(.)/g, '$1$1');\n    }\n\n    const r = parseInt(hex.substr(0, 2), 16),\n          g = parseInt(hex.substr(2, 2), 16),\n          b = parseInt(hex.substr(4, 2), 16);\n\n    return '#' +\n        ((0 | (1 << 8) + r + (256 - r) * percent / 100).toString(16)).substr(1) +\n        ((0 | (1 << 8) + g + (256 - g) * percent / 100).toString(16)).substr(1) +\n        ((0 | (1 << 8) + b + (256 - b) * percent / 100).toString(16)).substr(1);\n}\n\nfunction status_color(status: Task_Status): string {\n    switch (status) {\n        case Task_Status.new: return \"#2196F3\"\n        case Task_Status.in_development: return \"#00BCD4\"\n        case Task_Status.in_review: return \"#009688\"\n        case Task_Status.in_testing: return \"#FFEB3B\"\n        case Task_Status.done: return \"#8BC34A\"\n    }\n}\n\nfunction status_title(status: Task_Status): string {\n    switch (status) {\n        case Task_Status.new: return \"New\"\n        case Task_Status.in_development: return \"In development\"\n        case Task_Status.in_review: return \"Review is required\"\n        case Task_Status.in_testing: return \"Testing in progress\"\n        case Task_Status.done: return \"Deployed\"\n    }\n}\n\nfunction mark_current_chat_as_read(app: By_Type<App, App_Type.limp>) {\n    if (app.current_chat) {\n        app.current_chat.messages_read = app.current_chat.messages.length;\n    }\n}\n\nfunction draw_status_line(label: string, value_text: string, value_relative: number) {\n    const label_color = \"#181F38\";\n    const value_color_high = \"#08CF65\";\n    const value_color_low = \"#CF0808\";\n    const padding_h = 20;\n    const padding_v = 8;\n    const spacing = 8;\n    const font_h = 16;\n\n    function hex_to_rgb(hex: string) {\n        const value = parseInt(hex.substr(1), 16);\n        const r = (value >> 16) & 255;\n        const g = (value >> 8) & 255;\n        const b = value & 255;\n        return [r, g, b];\n    }\n\n    function lerp(a: number, b: number, x: number) {\n        return (b - a) * x + a;\n    }\n\n    const color_from = hex_to_rgb(value_color_low);\n    const color_to = hex_to_rgb(value_color_high);\n    const color_result = [\n        lerp(color_from[0], color_to[0], value_relative),\n        lerp(color_from[1], color_to[1], value_relative),\n        lerp(color_from[2], color_to[2], value_relative)\n    ];\n\n    const color_string = `rgb(${color_result[0]}, ${color_result[1]}, ${color_result[2]})`;\n\n    const ctx = current_context();\n\n    push_font(font_h);\n    const label_w = ctx.measureText(label).width;\n    pop_font();\n\n    push_font(font_h, \"bold\");\n    const value_w = ctx.measureText(value_text).width;\n    pop_font();\n\n    const block_w = padding_h + label_w + spacing + value_w + padding_h;\n    const block_h = padding_v + font_h + padding_v;\n\n    const xy = layout_cursor();\n\n    const rect = path_rounded_rect(xy.x, xy.y, block_w, block_h, 32);\n\n    ctx.shadowBlur = 0;\n    ctx.fillStyle = \"white\";\n    ctx.fill(rect);\n\n    const middle_y = xy.y + padding_v + font_h / 2;\n\n    push_font(font_h);\n    ctx.fillStyle = label_color;\n    ctx.fillText(label, xy.x + padding_h, middle_y);\n    pop_font();\n\n    push_font(font_h, \"bold\");\n    ctx.fillStyle = color_string;\n    ctx.fillText(value_text, xy.x + padding_h + label_w + spacing, middle_y);\n    pop_font();\n\n    push_size(block_h + 8);\n}\n\nfunction draw_messenger(app: By_Type<App, App_Type.limp>, width: number, height: number) {\n    const chat_list_background = \"#3F0E40\";\n    const offline_chat_color = \"#896B89\";\n    const read_chat_name = \"#B39FB3\";\n    const unread_chat_name = \"#fff\";\n    const notifications_bubble_background = \"#E01E5A\";\n    const online_bubble_background = \"#2BAC76\";\n    const selected_chat_background = \"#1164A3\";\n    const hovered_chat_background = \"#350D36\";\n    const chat_list_top_underline = \"#FFFFFF1A\";\n\n    const text_color = \"#1D1C1D\";\n    const subtext_color = \"#6B6A6B\";\n    const offline_chat_top = \"#606060\";\n\n    const top_bar_height = 64;\n    const chat_list_width = 200;\n\n    const message_input_height = 40;\n    const message_input_bottom_margin = 24;\n\n    const ctx = current_context();\n\n    const padding = 27;\n\n    ctx.fillStyle = \"#fff\";\n    ctx.fillRect(0, 0, width, height);\n\n    ctx.fillStyle = chat_list_background;\n    ctx.fillRect(0, 0, chat_list_width, height);\n\n    push_font(15);\n\n    push_font(15, \"bold\");\n    ctx.fillStyle = \"#fff\";\n    ctx.fillText(\"Chats\", padding - 8, top_bar_height / 2);\n    pop_font();\n\n    ctx.fillStyle = read_chat_name;\n    ctx.fillText(\"Direct Messages\", padding - 8, top_bar_height + 25);\n\n    draw_line(chat_list_top_underline, 1, 0.5, top_bar_height, chat_list_width - 0.5, top_bar_height);\n\n    let offset_y = 0;\n\n    const chat_height = 30;\n\n    const status_bubble_r = 5;\n\n    function draw_status_bubble(x: number, y: number, online: boolean, selected: boolean) {\n        path_circle(x, y, status_bubble_r);\n\n        if (online) {\n            ctx.fillStyle = selected ? unread_chat_name : online_bubble_background;\n            ctx.fill();\n        } else {\n            ctx.strokeStyle = selected ? unread_chat_name : offline_chat_color;\n            ctx.lineWidth = 2;\n            ctx.stroke();\n        }\n    }\n\n    for (const teammate of game.team) {\n        const center_y = top_bar_height + 55 + offset_y;\n        const top_y = center_y - chat_height / 2;\n\n        const state = button_behavior(0, top_y, chat_list_width, chat_height);\n        const selected = app.current_chat == teammate;\n        const hovered = state == Button_State.hovered;\n\n        if (selected || hovered) {\n            ctx.fillStyle = selected ? selected_chat_background : hovered_chat_background;\n            ctx.fillRect(0.5, top_y, chat_list_width - 1, chat_height);\n        }\n\n        draw_status_bubble(padding + status_bubble_r, center_y, is_work_time(), selected);\n\n        if (is_work_time()) {\n            ctx.fillStyle = selected ? unread_chat_name : read_chat_name;\n        } else {\n            ctx.fillStyle = selected ? unread_chat_name : offline_chat_color;\n        }\n\n        ctx.fillText(teammate.name.nominative, padding + status_bubble_r * 2 + 7, center_y);\n\n        if (state == Button_State.clicked) {\n            mark_current_chat_as_read(app);\n            app.current_chat = teammate;\n            mark_current_chat_as_read(app);\n        }\n\n        const unread_messages = teammate.messages.length - teammate.messages_read;\n\n        if (unread_messages > 0) {\n            const unread_width = 24;\n            const unread_height = 20;\n\n            const unread_x = chat_list_width - padding - unread_width;\n            const unread_y = center_y - unread_height / 2;\n\n            const rect = path_rounded_rect(unread_x, unread_y, unread_width, unread_height, 14);\n\n            ctx.fillStyle = notifications_bubble_background;\n            ctx.fill(rect);\n\n            push_font(15, \"bold\");\n            const text = unread_messages.toString(10);\n            const text_width = ctx.measureText(text).width;\n            ctx.fillStyle = unread_chat_name;\n            ctx.fillText(text, unread_x + unread_width / 2 - text_width / 2, center_y);\n            pop_font();\n        }\n\n        offset_y += chat_height;\n    }\n\n    pop_font();\n\n    { // Message area top bar\n        const top_bar_underline = \"#E2E2E2\";\n\n        draw_line(top_bar_underline, 1, chat_list_width + 0.5, top_bar_height, width - 0.5, top_bar_height);\n\n        push_font(15, \"bold\");\n\n        if (app.current_chat) {\n            const online = is_work_time();\n            const x = chat_list_width + padding;\n            const y = top_bar_height / 2;\n\n            draw_status_bubble(x, y, online, false);\n\n            ctx.fillStyle = online ? \"#000\" : offline_chat_top;\n\n            const name_width = ctx.measureText(app.current_chat.name.nominative).width;\n            const name_x = x + status_bubble_r * 2 + 4;\n            ctx.fillText(app.current_chat.name.nominative, name_x, y);\n\n            const title_x = name_x + name_width + 12;\n            push_font(15);\n            ctx.fillStyle = subtext_color;\n            ctx.fillText(app.current_chat.skill_title, title_x, y);\n            pop_font();\n        }\n\n        pop_font();\n    }\n\n    if (app.current_chat) { // Messages\n        const message_x = chat_list_width + padding;\n        const messages_pane_width = width - chat_list_width - 0.5;\n        const message_area_width = width - padding - message_x;\n\n        const rect = new Path2D();\n        rect.rect(chat_list_width + 0.5, top_bar_height + 0.5, messages_pane_width, height - top_bar_height - 0.5);\n        push_clip(rect);\n\n        const messages = app.current_chat.messages;\n\n        let message_bottom_y = height - message_input_height - message_input_bottom_margin - 8;\n\n        for (const message of [...messages].reverse()) {\n            push_font(15);\n            ctx.textBaseline = \"top\";\n\n            const avatar_side = 36;\n            const avatar_margin = 8;\n\n            const lines_x = message_x + avatar_side + avatar_margin;\n            const line_area_width = message_area_width - avatar_side - avatar_margin;\n            const lines = text_to_lines(message.text, line_area_width);\n            const line_height = 20;\n            const message_header_height = line_height;\n            const message_height = lines.length * line_height + message_header_height + 8;\n            const message_top_y = message_bottom_y - message_height;\n            const lines_y = message_top_y + message_header_height;\n\n            { // Avatar\n                const rect = path_rounded_rect(message_x, message_top_y, avatar_side, avatar_side, 6);\n                push_clip(rect);\n\n                ctx.drawImage(app.current_chat.avatar.img, message_x, message_top_y, avatar_side, avatar_side);\n\n                pop_clip();\n            }\n\n            { // Name and time\n                // Name\n                push_font(15, \"bold\");\n\n                const name_width = ctx.measureText(app.current_chat.name.nominative).width;\n\n                ctx.fillStyle = text_color;\n                ctx.fillText(app.current_chat.name.nominative, lines_x, message_top_y);\n\n                pop_font();\n\n                // Time\n                push_font(12);\n\n                const time_text = `${hour_string(message.received_at_hour)}, ${day_of_week_name(message.received_at_day_of_week)}`;\n\n                ctx.fillStyle = subtext_color;\n                ctx.fillText(time_text, lines_x + name_width + 4, message_top_y + 2);\n\n                pop_font();\n            }\n\n            { // Message lines\n                ctx.fillStyle = text_color;\n\n                for (let index = 0; index < lines.length; index++) {\n                    ctx.fillText(lines[index], lines_x, lines_y + line_height * index);\n                }\n            }\n\n            message_bottom_y -= message_height;\n\n            ctx.textBaseline = \"middle\";\n            pop_font();\n        }\n\n        pop_clip();\n    }\n\n    if (app.current_chat) { // Message input\n        const message_input_outline = \"#8E8D8E\";\n        const placeholder_text_color = \"#C8C8C8\";\n\n        const top_left_x = chat_list_width + padding;\n        const top_left_y = height - message_input_height - message_input_bottom_margin;\n\n        const input_width = width - top_left_x - padding;\n\n        const rect = path_rounded_rect(top_left_x, top_left_y, input_width, message_input_height, 4);\n        ctx.strokeStyle = message_input_outline;\n        ctx.lineWidth = 1;\n        ctx.stroke(rect);\n\n        if (app.current_chat) {\n            push_font(15);\n\n            ctx.fillStyle = placeholder_text_color;\n            ctx.fillText(i18n.chat.action.message_teammate({ name: app.current_chat.name }), top_left_x + 12, top_left_y + message_input_height / 2);\n\n            pop_font();\n\n            if (button_behavior(top_left_x, top_left_y, input_width, message_input_height) == Button_State.clicked) {\n                const y = point_to_screen_space(top_left_x, top_left_y).y;\n\n                show_overlay({\n                    type: Overlay_Type.teammate_menu,\n                    teammate: app.current_chat,\n                    at: {\n                        x: game.mouse.x,\n                        y: y\n                    }\n                })\n            }\n        }\n    }\n}\n\nfunction draw_wrike(app: By_Type<App, App_Type.wrike>, width: number, height: number) {\n    const bar_background = \"#04454D\";\n    const background = \"#F9F9F9\";\n    const block_background = \"#FFFFFF\";\n    const inbox_text = \"#4488FF\";\n    const inbox_warning = \"#ff445a\";\n\n    const grid_color = \"#EBEBEB\";\n    const grid_text_color = \"#161616\";\n\n    const top_bar_height = 56;\n    const bottom_bar_height = 24;\n\n    const content_padding = 32;\n\n    const inbox_width = 300;\n    const inbox_height = height - top_bar_height - bottom_bar_height - content_padding - content_padding - content_padding;\n\n    const ctx = current_context();\n\n    ctx.fillStyle = background;\n    ctx.fillRect(0, 0, width, height);\n\n    function entry_text(entry: Inbox_Entry): string {\n        switch (entry.type) {\n            case Inbox_Entry_Type.review_task: return \"Waiting for review\";\n            case Inbox_Entry_Type.task_returned_to_dev: return \"Defects found, returned to dev\";\n            case Inbox_Entry_Type.production_bug: return `Defects on prod (${entry.task.bugs}), ${entry.hours_remaining} hours left`;\n        }\n    }\n\n    { // Bars, logo\n        ctx.fillStyle = bar_background;\n        ctx.fillRect(0, 0, width, top_bar_height);\n\n        ctx.fillStyle = bar_background;\n        ctx.fillRect(0, height - bottom_bar_height, width, bottom_bar_height);\n\n        const logo = images.logo_wrike.img;\n        ctx.drawImage(logo, width / 2 - logo.width / 2 + 0.5, top_bar_height / 2 - logo.height / 2 + 0.5);\n    }\n\n    { // Inbox\n        const inbox_label_y = top_bar_height + content_padding;\n        const inbox_x = content_padding;\n\n        draw_block_title(\"Inbox\", inbox_x, inbox_label_y);\n\n        const inbox_y = inbox_label_y + content_padding;\n        const block = draw_block(inbox_x, inbox_y, inbox_width, inbox_height);\n\n        const entry_height = 90;\n\n        push_clip(block, true);\n\n        const unread_entries = game.inbox.filter(entry => !entry.read);\n\n        if (mouse_can_interact_with_area(inbox_x, inbox_y, inbox_width, inbox_height)) {\n            const max_scroll = unread_entries.length * entry_height;\n            app.inbox_scroll_y = Math.max(0, Math.min(app.inbox_scroll_y + game.mouse.scroll_y, max_scroll - inbox_height));\n        }\n\n        ctx.translate(0, -app.inbox_scroll_y);\n\n        const entry_x = inbox_x;\n        let entry_y = inbox_y;\n        const entry_padding = 16;\n\n        for (const entry of unread_entries) {\n            const state = button_behavior(entry_x, entry_y, inbox_width, entry_height);\n\n            if (state == Button_State.hovered) {\n                ctx.fillStyle = \"#eee\";\n                ctx.fillRect(entry_x, entry_y, inbox_width, entry_height);\n            }\n\n            if (state == Button_State.clicked) {\n                show_overlay({\n                    type: Overlay_Type.inbox_entry_menu,\n                    entry: entry,\n                    at: point_to_screen_space(entry_x, entry_y + entry_height)\n                })\n            }\n\n            push_font(15);\n\n            const time_text = `${day_of_week_name(entry.received_at_day_of_week)}, ${hour_string(entry.received_at_hour)}`;\n            const padded_x = entry_x + entry_padding;\n            const time_y = entry_y + entry_padding;\n\n            ctx.fillStyle = \"#aaa\";\n            ctx.fillText(time_text, padded_x, time_y);\n\n            const name_y = time_y + 24;\n\n            ctx.fillStyle = \"black\";\n            ctx.fillText(entry.task.name, padded_x, name_y);\n\n            const text_y = name_y + 24;\n\n            ctx.fillStyle = entry.type == Inbox_Entry_Type.production_bug ? inbox_warning : inbox_text;\n            ctx.fillText(entry_text(entry), padded_x, text_y);\n\n            pop_font();\n\n            draw_line(grid_color, 1, entry_x, entry_y + entry_height, entry_x + inbox_width, entry_y + entry_height);\n\n            entry_y += entry_height;\n        }\n\n        pop_clip();\n    }\n\n    { // Tasks\n        const tasks_label_y = top_bar_height + content_padding;\n        const tasks_x = content_padding + inbox_width + content_padding;\n        const tasks_width = width - tasks_x - content_padding;\n\n        draw_block_title(\"Tasks\", tasks_x, tasks_label_y);\n\n        const tasks_y = tasks_label_y + content_padding;\n\n        draw_block(tasks_x, tasks_y, tasks_width, inbox_height);\n\n        const row_height = 24;\n        const status_indicator_side = 12;\n\n        let row_y = tasks_y + row_height;\n\n        const name_column_x = tasks_x + 24;\n        const status_column_x = name_column_x + 370;\n        const assignee_column_x = status_column_x + 180;\n        const estimate_column_x = assignee_column_x + 120;\n        const time_spent_column_x = estimate_column_x + 90;\n\n        { // Header\n            ctx.fillStyle = block_background;\n            ctx.fillRect(tasks_x, tasks_y - 3, tasks_width, row_height + 3);\n\n            push_font(12);\n            ctx.fillStyle = \"#777\";\n            ctx.fillText(\"Title\", name_column_x, tasks_y + row_height / 2);\n            ctx.fillText(\"Status\", status_column_x, tasks_y + row_height / 2);\n            ctx.fillText(\"Assignee\", assignee_column_x, tasks_y + row_height / 2);\n            ctx.fillText(\"Estimate\", estimate_column_x, tasks_y + row_height / 2);\n            ctx.fillText(\"Time Spent\", time_spent_column_x, tasks_y + row_height / 2);\n            pop_font();\n        }\n\n        const tasks_area_y = tasks_y + row_height;\n        const tasks_area_height = inbox_height - row_height;\n\n        const rect = new Path2D();\n        rect.rect(tasks_x, tasks_area_y, tasks_width, tasks_area_height);\n        push_clip(rect, true);\n\n        if (mouse_can_interact_with_area(tasks_x, tasks_area_y, tasks_width, tasks_area_height)) {\n            const max_scroll = all_tasks().length * row_height;\n            app.task_list_scroll_y = Math.max(0, Math.min(app.task_list_scroll_y + game.mouse.scroll_y, max_scroll - tasks_area_height));\n        }\n\n        ctx.translate(0, -app.task_list_scroll_y);\n\n        push_font(14);\n\n        const tasks_fit_into_view = Math.ceil(tasks_area_height / row_height);\n        const tasks_view_start_index = Math.floor(app.task_list_scroll_y / row_height);\n        const tasks_end_index = tasks_view_start_index + tasks_fit_into_view;\n\n        const tasks = all_tasks();\n\n        for (let index = tasks_view_start_index; index < Math.min(tasks.length, tasks_end_index); index++) {\n            const task = tasks[index];\n            const row_y = tasks_y + row_height * (index + 1);\n            const row_center_y = row_y + row_height / 2;\n\n            { // Behavior\n                const state = button_behavior(tasks_x, row_y, tasks_width, row_height);\n\n                if (state == Button_State.hovered) {\n                    ctx.fillStyle = \"#0094FF33\";\n                    ctx.fillRect(tasks_x, row_y, tasks_width, row_height);\n                }\n\n                if (state == Button_State.clicked) {\n                    show_overlay({\n                        type: Overlay_Type.task_menu,\n                        task: task,\n                        at: {\n                            x: game.mouse.x,\n                            y: point_to_screen_space(0, row_y + row_height).y\n                        }\n                    });\n                }\n            }\n\n            { // Name\n                ctx.fillStyle = grid_text_color;\n                ctx.fillText(task.full_name, name_column_x, row_center_y + 1);\n            }\n\n            { // Status\n                ctx.fillStyle = status_color(task.status);\n                ctx.fillRect(status_column_x - 0.5, row_center_y - status_indicator_side / 2 - 0.5, status_indicator_side, status_indicator_side);\n\n                const status_name_x = status_column_x + status_indicator_side + 10;\n\n                ctx.fillStyle = grid_text_color;\n                ctx.fillText(status_title(task.status), status_name_x, row_center_y + 1);\n            }\n\n            { // Assignee\n                const assignee = task_to_assignee(task);\n\n                if (assignee) {\n                    ctx.fillStyle = grid_text_color;\n                    ctx.fillText(assignee.name, assignee_column_x, row_center_y + 1);\n                }\n            }\n\n            { // Estimate\n                ctx.fillStyle = grid_text_color;\n                ctx.fillText(`${task.estimated_time.toString(10)}h`, estimate_column_x, row_center_y + 1);\n            }\n\n            if (task.time_spent > 0) { // Time Spent\n                ctx.fillStyle = grid_text_color;\n                ctx.fillText(`${task.time_spent.toString(10)}h`, time_spent_column_x, row_center_y + 1);\n            }\n\n            draw_line(grid_color, 1, tasks_x, row_y, tasks_x + tasks_width, row_y);\n        }\n\n        // Columns are always drawn on top of the grid\n        ctx.translate(0, app.task_list_scroll_y);\n\n        pop_font();\n        pop_clip();\n\n        draw_line(grid_color, 1, tasks_x, row_y, tasks_x + tasks_width, row_y);\n\n        function draw_column_line(at_x: number) {\n            draw_line(grid_color, 1, at_x, tasks_y, at_x, tasks_y + inbox_height);\n        }\n\n        draw_column_line(status_column_x - 10);\n        draw_column_line(assignee_column_x - 10);\n        draw_column_line(estimate_column_x - 10);\n        draw_column_line(time_spent_column_x - 10);\n    }\n\n    function draw_block_title(text: string, x: number, y: number) {\n        push_font(18, \"bolder\");\n\n        ctx.fillStyle = \"#000\";\n        ctx.textBaseline = \"top\";\n        ctx.fillText(text, x, y);\n        ctx.textBaseline = \"middle\";\n\n        pop_font();\n    }\n\n    function draw_block(x: number, y: number, w: number, h: number): Path2D {\n        const rect = path_rounded_rect(x, y, w, h, 3);\n        ctx.shadowBlur = 8;\n        ctx.shadowColor = \"#eee\"\n        ctx.shadowOffsetY = 10;\n        ctx.fillStyle = block_background;\n        ctx.fill(rect);\n        ctx.shadowBlur = 0;\n        ctx.shadowOffsetY = 0;\n\n        return rect;\n    }\n\n    function task_to_assignee(task: Task): { name: string, avatar?: Image_Resource } | undefined {\n        if (task.status == Task_Status.in_development) {\n            if (task.assigned_to.you) {\n                return { name: i18n.assigned_to_you() };\n            } else {\n                return { name: task.assigned_to.teammate.name.nominative, avatar: task.assigned_to.teammate.avatar };\n            }\n        } else if (task.status == Task_Status.in_review) {\n            if (task.assigned_to.you) {\n\n            } else {\n                return { name: i18n.assigned_to_you() }\n            }\n        } else if (task.status == Task_Status.in_testing) {\n            return { name: \"QA Team\" };\n        }\n    }\n\n}\n\nfunction draw_code_editor(width: number, height: number) {\n    const ctx = current_context();\n\n    const ui_background = \"#3C3F41\";\n    const code_background = \"#2B2B2B\";\n    const selected_tab_bg = \"#4E5254\";\n    const tab_separator_line = \"#323232\";\n    const tab_underline = \"#4A88C7\";\n    const tab_name_color = \"#BBBBBB\";\n\n    const keyword_color = \"#CC7832\";\n    const string_color = \"#6A8759\";\n    const number_color = \"#6897BB\";\n    const code_color = \"#A9B7C6\";\n    const comment_color = \"#808080\";\n\n    const tab_height = 26;\n    const tab_padding = 7;\n\n    ctx.fillStyle = code_background;\n    ctx.fillRect(0, 0, width, height);\n\n    if (button_behavior(0, 0, width, height) == Button_State.clicked) {\n        show_overlay({ type: Overlay_Type.editor_work_menu });\n    }\n\n    { // Tabs\n        ctx.fillStyle = ui_background;\n        ctx.fillRect(0.5, 0, width - 1.5, tab_height);\n\n        const tab_names = [\n            \"UtilTokenGlobalInitializerServlet\",\n            \"RulesNotificationNotificationTokenTokenizer\",\n            \"ServiceTokenProxyStringTokenizer\",\n            \"StringServiceRulesProxyUtil\",\n            \"InitializerTokenBusinessManagementObject\",\n            \"BusinessRulesStringInitializerRegistry\"\n        ];\n\n        let tab_x = 1;\n\n        for (let index = 0; index < tab_names.length; index++) {\n            push_font(12);\n\n            const name = tab_names[index];\n            const tab_width = tab_padding + ctx.measureText(name).width + tab_padding;\n            const selected = index == 0;\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = tab_separator_line;\n            ctx.fillStyle = selected ? selected_tab_bg : ui_background;\n            ctx.beginPath();\n            ctx.rect(tab_x, 0, tab_width, tab_height);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.fill();\n\n            ctx.fillStyle = tab_name_color;\n            ctx.fillText(name, tab_x + tab_padding, tab_height / 2);\n\n            if (selected) {\n                draw_line(tab_underline, 2, tab_x, tab_height - 1, tab_x + tab_width - 1.5, tab_height - 1);\n            }\n\n            tab_x += tab_width;\n\n            pop_font();\n        }\n    }\n\n    { // Code\n        ctx.textBaseline = \"top\";\n\n        const line_height = 20;\n        const code_top_y = tab_height + 4;\n\n        push_font(12, \"normal\", true);\n\n        for (const [index, line] of tokens.entries()) {\n            let token_x = 8;\n\n            function draw_token(token: Token, color: string, bold = false) {\n                push_font(12, bold ? \"bold\" : \"normal\", true);\n                const width = ctx.measureText(token.text).width;\n                ctx.fillStyle = color;\n                ctx.fillText(token.text, token_x, code_top_y + index * line_height);\n                token_x += width;\n                pop_font();\n            }\n\n            for (const token of line) {\n                switch (token.kind) {\n                    case Token_Kind.code: {\n                        draw_token(token, code_color);\n                        break;\n                    }\n\n                    case Token_Kind.keyword: {\n                        draw_token(token, keyword_color, true);\n                        break;\n                    }\n\n                    case Token_Kind.number: {\n                        draw_token(token, number_color);\n                        break;\n                    }\n\n                    case Token_Kind.string: {\n                        draw_token(token, string_color);\n                        break;\n                    }\n\n                    case Token_Kind.comment: {\n                        draw_token(token, comment_color);\n                        break;\n                    }\n\n                    default: unreachable(token.kind);\n                }\n            }\n        }\n\n        pop_font();\n\n        ctx.textBaseline = \"middle\";\n    }\n}\n\nfunction draw_browser(width: number, height: number) {\n    const website_button_background = \"#F1F3F4\";\n\n    const ctx = current_context();\n    ctx.fillStyle = \"#fff\";\n    ctx.fillRect(0, 0, width, height);\n\n    const logo = images.logo_iron_big.img;\n    const scale = 0.5;\n    const logo_width = logo.width * scale;\n    ctx.drawImage(logo, width / 2 - logo_width / 2, 100, logo_width, logo.height * scale);\n\n    const total_buttons = 2;\n    const button_side = 72;\n    const button_spacing = 32;\n\n    const buttons_width = total_buttons * button_side + (total_buttons - 1) * button_spacing;\n\n    const button_center_y = 270;\n    let button_left_x = width / 2 - buttons_width / 2;\n\n    function website_button(logo: Image_Resource, text: string, website: Website) {\n        const r = button_side / 2;\n        const icon_side = button_side - 28;\n\n        path_circle(button_left_x + r, button_center_y, r);\n\n        const state = button_behavior(button_left_x, button_center_y - r, button_side, button_side);\n\n        if (state == Button_State.hovered) {\n            ctx.shadowColor = \"#ccc\";\n            ctx.shadowBlur = 8;\n        }\n\n        ctx.fillStyle = website_button_background;\n        ctx.fill();\n        ctx.shadowBlur = 0;\n\n        const image_x = button_left_x + r - icon_side / 2;\n        const image_y = button_center_y - icon_side / 2;\n\n        ctx.drawImage(logo.img, image_x, image_y, icon_side, icon_side);\n\n        ctx.fillStyle = \"#000\";\n        push_font(16);\n\n        const text_width = ctx.measureText(text).width;\n        const text_x = button_left_x + r - text_width / 2;\n        const text_y = button_center_y + r + 25;\n        ctx.fillText(text, text_x, text_y);\n\n        pop_font();\n\n        button_left_x += button_side + button_spacing;\n\n        if (state == Button_State.clicked) {\n            show_overlay({\n                type: Overlay_Type.website_menu,\n                website: website,\n                at: point_to_screen_space(button_left_x + r, button_center_y)\n            })\n        }\n    }\n\n    website_button(images.icon_web_jabr, i18n.website.blog(), Website.jabr);\n    website_button(images.icon_web_you_cube, i18n.website.videos(), Website.you_cube);\n}\n\nfunction draw_window(width: number, height: number, title: string, draw_content: () => void) {\n    const title_text_color = \"#2E2C2E\";\n    const title_bar_top = \"#E8E6E8\";\n    const title_bar_bottom = \"#D2D0D2\";\n    const title_bar_underline = \"#B0AFB0\";\n\n    const close_button_fill = \"#FC625D\";\n    const close_button_stroke = \"#EF4B47\";\n\n    const minimize_button_fill = \"#35C94A\";\n    const minimize_button_stroke = \"#26A934\";\n\n    const title_bar_height = 21;\n\n    const start_at = layout_cursor();\n\n    const ctx = current_context();\n    const transform = ctx.getTransform();\n\n    ctx.translate(start_at.x, start_at.y);\n\n    { // Title bar and background\n        const gradient = ctx.createLinearGradient(0, 0, 0, title_bar_height);\n        gradient.addColorStop(0, title_bar_top);\n        gradient.addColorStop(1, title_bar_bottom);\n\n        ctx.fillStyle = gradient;\n        ctx.shadowBlur = 20;\n        ctx.shadowColor = \"#333\";\n        const rect = path_rounded_rect(0, 0, width, height + title_bar_height, 4);\n        ctx.fill(rect);\n        ctx.shadowBlur = 0;\n\n        push_clip(rect);\n    }\n\n    { // Underline\n        draw_line(title_bar_underline, 1,\n            0, title_bar_height,\n            width, title_bar_height\n        );\n    }\n\n    { // Title text\n        const title_font = 12;\n        push_font(title_font);\n\n        const title_text_width = ctx.measureText(title).width;\n        ctx.fillStyle = title_text_color;\n        ctx.fillText(title, width / 2 - title_text_width / 2, title_bar_height / 2);\n\n        pop_font();\n    }\n\n    let button_index = 0;\n\n    function title_bar_button(fill: string, stroke: string) {\n        const button_r = 6;\n        const x_offset = 8 + (8 + button_r * 2) * button_index;\n        const y_offset = 5;\n\n        const result = button_behavior(x_offset, y_offset, button_r * 2, button_r * 2);\n\n        ctx.fillStyle = result == Button_State.hovered ? increase_brightness(fill, 20) : fill;\n        ctx.strokeStyle = result == Button_State.hovered ? increase_brightness(stroke, 20) : stroke;\n        ctx.lineWidth = 1;\n\n        path_circle(x_offset + button_r, y_offset + button_r, button_r);\n\n        ctx.fill()\n        ctx.stroke();\n\n        button_index++;\n\n        if (result == Button_State.clicked) {\n            close_current_app();\n        }\n    }\n\n    title_bar_button(close_button_fill, close_button_stroke);\n    title_bar_button(minimize_button_fill, minimize_button_stroke);\n\n    ctx.translate(0, title_bar_height + 1);\n    draw_content();\n\n    pop_clip();\n    ctx.setTransform(transform);\n}\n\nfunction draw_top_bar(width: number) {\n    const ctx = current_context();\n    const color_bg = \"rgba(210,210,210,0.4)\";\n    const height = 22;\n\n    ctx.fillStyle = color_bg;\n    ctx.fillRect(0, 0, width, height);\n\n    const padding_side = 20;\n\n    { // Main computer menu\n        const logo_side = 16;\n        const pear_x = padding_side;\n        const pear_y = height / 2 - logo_side / 2;\n\n        ctx.drawImage(images.logo_pear.img, padding_side, pear_y, logo_side, logo_side);\n\n        const name_x = pear_x + logo_side + 6;\n        const name_y = height / 2 + 1;\n\n        const name = i18n.app.computer.name();\n\n        push_font(14, \"bold\");\n\n        const name_width = ctx.measureText(name).width;\n\n        ctx.fillStyle = \"black\";\n        ctx.fillText(name, name_x, name_y);\n        pop_font();\n\n        const total_width = name_x + name_width - pear_x + 4;\n        const button = button_behavior(pear_x, 0, total_width, height);\n\n        if (button == Button_State.clicked) {\n            show_overlay({\n                type: Overlay_Type.computer_menu,\n                at: {\n                    x: pear_x,\n                    y: height\n                }\n            });\n        } else if (button == Button_State.hovered) {\n            ctx.fillStyle = \"rgba(99,161,255,0.4)\";\n            ctx.fillRect(pear_x, 0, total_width, height);\n        }\n\n        // Day end tip\n        if (game.day == 0 && game.hour_of_day >= work_end_hour && game.overlay.type != Overlay_Type.computer_menu) {\n            ctx.fillStyle = \"#fff\";\n\n            const tip_text = i18n.top_bar.finish_work_tip();\n\n            const tip_x = (Math.sin(game.time / 250) + 1) * 15 + name_x + name_width + 32;\n            const tip_y = 4;\n\n            push_font(15);\n\n            const tip_text_width = ctx.measureText(tip_text).width;\n            const tip_width = 16 + tip_text_width + 16;\n            const tip_height = 28;\n\n            const rect = path_rounded_rect(tip_x, tip_y, tip_width, tip_height,  4);\n\n            ctx.shadowBlur = 8;\n            ctx.shadowColor = \"black\";\n            ctx.fill(rect);\n            ctx.shadowBlur = 0;\n\n            ctx.fillStyle = \"black\";\n            ctx.fillText(tip_text, tip_x + 16, tip_y + tip_height / 2);\n\n            pop_font();\n\n            ctx.beginPath();\n            ctx.moveTo(tip_x - 5, tip_y);\n            ctx.lineTo(tip_x - 5, tip_y + tip_height);\n            ctx.lineTo(tip_x - tip_height * 0.75, tip_y + tip_height / 2);\n            ctx.closePath();\n            ctx.fillStyle = \"#fff\";\n            ctx.strokeStyle = \"#777\";\n\n            ctx.fill();\n            ctx.stroke();\n        }\n    }\n\n    { // Date and time\n        const time_text = hour_string(game.hour_of_day);\n\n        push_font(14, \"bolder\");\n        const time_width = ctx.measureText(time_text).width;\n        ctx.fillStyle = \"black\";\n        ctx.fillText(time_text, width - padding_side - time_width, height / 2);\n        pop_font();\n\n        const day_text = i18n.top_bar.today({ day: game.day + 1, day_of_week: day_of_week_name(game.day_of_week) });\n\n        push_font(14);\n        const day_width = ctx.measureText(day_text).width;\n        ctx.fillStyle = \"black\";\n        ctx.fillText(day_text, width - padding_side - time_width - day_width - 6, height / 2);\n\n        pop_font();\n    }\n}\n\nfunction draw_dock(width: number, height: number) {\n    const color_top = \"rgba(210,210,210,0.4)\";\n    const color_bottom = \"rgba(191,191,191,0.4)\";\n    const notifications_color = \"#F44542\";\n\n    const start_at = layout_cursor();\n    const ctx = current_context();\n\n    ctx.translate(start_at.x, start_at.y);\n\n    const gradient = ctx.createLinearGradient(0, 0, 0, height);\n    gradient.addColorStop(0, color_top);\n    gradient.addColorStop(1, color_bottom);\n\n    ctx.fillStyle = gradient;\n    const rect = path_rounded_rect(0, 0, width, height, 8);\n    ctx.fill(rect);\n\n    let app_index = 0;\n\n    function ease_out_circular(x: number): number {\n        return Math.sqrt(1 - Math.pow(x - 1, 2));\n    }\n\n    const hover_animation_time_ms = 60;\n\n    for (const app of game.apps) {\n        const image = app_icon(app.type).img;\n        const adjust = ease_out_circular(app.dock_hover_time / hover_animation_time_ms) * 15;\n        const notifications = get_app_notifications(app);\n\n        const x = 16 + app_index * (64 + 16) - adjust / 2;\n        const y = 16 - adjust / 2;\n        const w = 64 + adjust, h = 64 + adjust;\n\n        ctx.drawImage(image, 0, 0, image.width, image.height, x, y, w, h);\n\n        if (notifications > 0) {\n            const r = 12;\n\n            const bubble_x = x + w;\n            const bubble_y = 16 - adjust / 2;\n\n            fill_circle(notifications_color, bubble_x, bubble_y, r);\n\n            const bubble_text = notifications.toString(10);\n\n            push_font(16);\n\n            const text_width = ctx.measureText(bubble_text).width;\n\n            ctx.fillStyle = \"#fff\";\n            ctx.fillText(bubble_text, bubble_x - text_width / 2, bubble_y);\n            pop_font();\n        }\n\n        const result = button_behavior(x, y, w, h);\n\n        if (result == Button_State.hovered) {\n            app.dock_hover_time = Math.min(app.dock_hover_time + game.frame_time, hover_animation_time_ms);\n        } else if (result == Button_State.clicked) {\n            close_current_app();\n            game.current_app = app;\n        } else {\n            app.dock_hover_time = Math.max(0, app.dock_hover_time - game.frame_time);\n        }\n\n        app_index++;\n    }\n\n    ctx.translate(-start_at.x, -start_at.y);\n\n    push_size(height);\n}\n\nfunction hour_string(hour: number) {\n    return `${hour.toString(10).padStart(2, \"0\")}:00`\n}\n\nfunction draw_calendar(width: number) {\n    function calendar_event_name(event: Calendar_Event): string {\n        switch (event.type) {\n            case Calendar_Event_Type.one_on_one: return `One on One - ${event.teammate.name.nominative}`;\n            case Calendar_Event_Type.lead_meeting: return \"Team Lead Sync\";\n            case Calendar_Event_Type.candidate_interview: return `Interview - ${event.candidate_name}`;\n            case Calendar_Event_Type.daily_standup: return \"Daily Standup\";\n            case Calendar_Event_Type.knowledge_sharing: return \"Knowledge Sharing\";\n            case Calendar_Event_Type.lunch: return \"Lunch\";\n        }\n    }\n\n    const text_color = \"#70757A\";\n    const grid_color = \"#DADCE0\";\n    const today_color = \"#1A73E8\";\n    const now_color = \"#EA4335\";\n    const event_color = \"#039BE5\";\n    const past_event_color = \"#B3E1F7\";\n    const past_event_text_color = \"#69818D\";\n\n    const ctx = current_context();\n\n    const cell_height = 48;\n    const total_hours = work_end_hour - work_start_hour;\n\n    const grid_starts_at = 90;\n\n    ctx.fillStyle = \"#fff\";\n    ctx.fillRect(0, 0, width, (total_hours + 1) * cell_height);\n\n    draw_line(grid_color, 1,\n        grid_starts_at, 0,\n        grid_starts_at, (total_hours + 1) * cell_height\n    );\n\n    function hour_grid_y(hour: number) {\n        return (-(work_start_hour - hour) + 0.5) * cell_height;\n    }\n\n    for (let hour = work_start_hour; hour <= work_end_hour; hour++) {\n        const y = hour_grid_y(hour);\n        push_font(10);\n        ctx.fillStyle = text_color;\n        ctx.fillText(`${hour_string(hour)}`, 50, y);\n        pop_font();\n\n        draw_line(grid_color, 1,\n            grid_starts_at - 10, y,\n            width, y\n        );\n\n        for (const event of game.today_events) {\n            if (event.start_hour == hour) {\n                const past_event = is_past_event(event);\n\n                ctx.fillStyle = past_event ? past_event_color : event_color;\n\n                const event_width = width - grid_starts_at;\n                const event_height = (event.duration * cell_height) - 4;\n\n                const rect = path_rounded_rect(grid_starts_at, y, event_width, event_height, 4);\n                ctx.fill(rect);\n\n                const event_x = grid_starts_at;\n                const event_y = y;\n\n                const state = button_behavior(\n                    event_x,\n                    event_y,\n                    event_width,\n                    event_height\n                );\n\n                if (state == Button_State.clicked) {\n                    const screen_space = point_to_screen_space(\n                        event_x + event_width / 2,\n                        event_y + event_height\n                    );\n\n                    show_overlay({\n                        type: Overlay_Type.calendar_event_menu,\n                        event: event,\n                        at: {\n                            x: screen_space.x,\n                            y: screen_space.y\n                        }\n                    });\n                }\n\n                const old_baseline = ctx.textBaseline;\n\n                ctx.fillStyle = past_event ? past_event_text_color : \"#fff\";\n                ctx.textBaseline = \"top\";\n\n                const pad_x = 8;\n                const pad_y = 6;\n\n                push_font(12, \"bold\");\n                ctx.fillText(calendar_event_name(event), grid_starts_at + pad_x, y + pad_y);\n                pop_font();\n\n                push_font(12, \"normal\");\n                ctx.fillText(`${hour_string(hour)} - ${hour_string(hour + event.duration)}`, grid_starts_at + pad_x, y + pad_y + 16);\n                pop_font();\n\n                ctx.textBaseline = old_baseline;\n            }\n        }\n    }\n\n    const r = 6;\n    const y = hour_grid_y(game.hour_of_day);\n\n    fill_circle(now_color, grid_starts_at, y, r);\n    draw_line(now_color, 2,\n        grid_starts_at, y,\n        width, y\n    );\n}\n\nfunction open_app(type: App_Type) {\n    game.current_app = game.apps.find(app => app.type == type);\n}\n\nfunction close_current_app() {\n    if (game.current_app && game.current_app.type == App_Type.limp) {\n        mark_current_chat_as_read(game.current_app);\n    }\n\n    delete game.current_app;\n}\n\nfunction draw_overlay_screen() {\n    const overlay = game.overlay;\n\n    type Menu_Button = {\n        text: string\n        hovered: boolean\n    }\n\n    function draw_menu_background(x: number, y: number, width: number, height: number): Path2D {\n        const overlay_show_time = game.overlay.type == Overlay_Type.game_over ? 2000 : 100;\n\n        const rect = path_rounded_rect(x, y, width, height, 4);\n        const opacity = (game.time - game.overlay_shown_at) / overlay_show_time;\n\n        ctx.shadowBlur = 8;\n        ctx.shadowColor = `rgba(119, 119, 119, ${opacity})`;\n        ctx.fillStyle = `rgba(255, 255, 255, ${opacity})`;\n        ctx.fill(rect);\n        ctx.shadowBlur = 0;\n\n        return rect;\n    }\n\n    function auto_menu(x: number, y: number, width: number) {\n        const buttons: Menu_Button[] = [];\n        const button_height = 40;\n        const after_message_spacing = 8;\n\n        let message_font = 16;\n        let padding = 16;\n        let message_bottom_y = y;\n        let lines: string[] = [];\n        let line_height = 0;\n        let center_text = false;\n\n        return {\n            message_font(value: number): void {\n                message_font = value;\n            },\n            center_text(): void {\n                center_text = true;\n            },\n            padding(value: number): void {\n                padding = value;\n            },\n            message(text: string): void {\n                line_height = message_font + 4;\n                push_font(message_font);\n                lines = text_to_lines(text, width - padding * 2);\n                message_bottom_y = y + padding + lines.length * line_height;\n                pop_font();\n            },\n            button(text: string): boolean {\n                if (buttons.length == 0 && lines.length > 0) {\n                    message_bottom_y += after_message_spacing;\n                }\n\n                const button_y = message_bottom_y + buttons.length * button_height;\n                const state = button_behavior(x, button_y, width, button_height);\n\n                buttons.push({\n                    text: text,\n                    hovered: state == Button_State.hovered\n                });\n\n                return state == Button_State.clicked;\n            },\n            finish() {\n                const height = (message_bottom_y - y) + buttons.length * button_height + ((buttons.length == 0) ? padding : 0);\n\n                const rect = draw_menu_background(x, y, width, height);\n                push_clip(rect);\n\n                let line_y = y + padding;\n\n                push_font(message_font);\n                ctx.textBaseline = \"top\";\n\n                for (const line of lines) {\n                    const text_x = center_text\n                        ? x + (width / 2 - ctx.measureText(line).width / 2)\n                        : x + padding;\n\n                    ctx.fillStyle = \"#000\";\n                    ctx.fillText(line, text_x, line_y);\n\n                    line_y += line_height;\n                }\n\n                ctx.textBaseline = \"middle\";\n                pop_font();\n\n                let button_y = message_bottom_y;\n\n                push_font(16);\n\n                for (const button of buttons) {\n                    if (button.hovered) {\n                        ctx.fillStyle = \"#ccc\";\n                        ctx.fillRect(x, button_y, width, button_height);\n                    }\n\n                    ctx.fillStyle = lines.length > 0 ? \"#003a57\" : \"#000\";\n                    ctx.fillText(button.text, x + padding, button_y + button_height / 2, width);\n\n                    button_y += button_height;\n                }\n\n                pop_font();\n                pop_clip();\n            }\n        }\n    }\n\n    function message_overlay(text: string) {\n        message_overlay_and_then({ type: Overlay_Type.none }, text);\n    }\n\n    function message_overlay_and_then(overlay: Overlay, text: string) {\n        show_overlay({ type: Overlay_Type.message, text: text, next_overlay: overlay });\n    }\n\n    function exit_overlay() {\n        show_overlay({ type: Overlay_Type.none });\n    }\n\n    function allow_exit() {\n        if (button_behavior(0, 0, game.canvas_width, game.canvas_height) == Button_State.clicked) {\n            exit_overlay();\n        }\n    }\n\n    function block_exit() {\n        button_behavior(0, 0, game.canvas_width, game.canvas_height);\n    }\n\n    function big_centered_menu(at_height = 0.45, width = 600) {\n        const menu = auto_menu(game.canvas_width / 2 - width / 2, game.canvas_height * at_height, width);\n        menu.padding(16);\n        menu.message_font(20);\n\n        return menu;\n    }\n\n    function deadline_stats_message(show_total_tasks: boolean) {\n        const days_until = game.deadline_day - game.day;\n        const not_done = tasks_not_done();\n        const total = game.backlog.length;\n\n        const text_days_until = i18n.deadline_stats.days_until({ days: days_until });\n\n        if (show_total_tasks) {\n            const text_tasks_remaining = i18n.deadline_stats.tasks_remaining({ tasks: not_done, total: total.toString() });\n            return `${text_days_until}\\n${text_tasks_remaining}`;\n        } else {\n            const text_tasks_remaining = i18n.deadline_stats.backlog({ tasks: not_done });\n            return `${text_days_until}\\n${text_tasks_remaining}`;\n        }\n    }\n\n    function new_day_message() {\n        message_overlay(`${day_of_week_starts(game.day_of_week)}\\n${deadline_stats_message(true)}`);\n    }\n\n    const ctx = current_context();\n\n    switch (overlay.type) {\n        case Overlay_Type.none: {\n            break;\n        }\n\n        case Overlay_Type.message: {\n            const menu = big_centered_menu();\n            menu.center_text();\n            menu.padding(32);\n            menu.message(overlay.text);\n            menu.finish();\n\n            if (button_behavior(0, 0, game.canvas_width, game.canvas_height) == Button_State.clicked) {\n                show_overlay(overlay.next_overlay);\n            }\n\n            break;\n        }\n\n        case Overlay_Type.lang: {\n            const menu = big_centered_menu();\n            menu.center_text();\n            menu.message(\"Language\");\n\n            for (const [name, language] of [[\"English\", en], [\"Russian\", ru]] as const) {\n                if (menu.button(name)) {\n                    i18n = language;\n                    start_game();\n                    show_overlay({ type: Overlay_Type.intro });\n                }\n            }\n\n            menu.finish();\n\n            block_exit();\n\n            break;\n        }\n\n        case Overlay_Type.intro: {\n            const menu = big_centered_menu();\n            menu.center_text();\n\n            const team = game.team.map(teammate => i18n.overlay.intro.teammate({ name: teammate.name, skills: teammate.skills.map(skill_name).join(\", \") })).join(\"\\n\");\n\n            menu.message(i18n.overlay.intro.header({ team }))\n\n            for (const difficulty of [\n                [Difficulty.junior, 0.3] as const,\n                [Difficulty.middle, 0.5] as const,\n                [Difficulty.senior, 0.7] as const,\n                [Difficulty.teamlead, 0.9] as const\n            ]) {\n                const [kind, multiplier] = difficulty;\n\n                if (menu.button(i18n.overlay.intro.difficulty({ difficulty: difficulty_name(difficulty[0]) }))) {\n                    game.backlog = generate_backlog(game.team.length + 1, game.deadline_day, multiplier * 0.5);\n                    game.difficulty = kind;\n\n                    for (const teammate of game.team) {\n                        teammate.skill_level = Math.max(0.1, teammate.skill_level - multiplier * 0.35);\n                    }\n\n                    message_overlay(deadline_stats_message(false));\n                }\n            }\n\n            menu.finish();\n\n            block_exit();\n\n            break;\n        }\n\n        case Overlay_Type.weekend: {\n            const menu = big_centered_menu();\n            menu.center_text();\n\n            menu.message(i18n.overlay.weekend.message({ day_started: day_of_week_starts(game.day_of_week) }));\n\n            if (menu.button(i18n.overlay.weekend.action.rest())) {\n                do {\n                    skip_hours(1);\n                    increase_health(4);\n                } while (!(game.day_of_week == 1 && game.hour_of_day == 10));\n\n                new_day_message();\n            }\n\n            if (menu.button(i18n.overlay.weekend.action.do_something_else())) {\n                exit_overlay();\n            }\n\n            menu.finish();\n\n            block_exit();\n\n            break;\n        }\n\n        case Overlay_Type.calendar_event_menu: {\n            const top_center = overlay.at;\n            const menu_width = 300;\n            const menu = auto_menu(top_center.x - menu_width / 2, top_center.y, menu_width);\n\n            if (overlay.event.start_hour == game.hour_of_day) {\n                if (overlay.event.type == Calendar_Event_Type.lunch) {\n                    if (menu.button(i18n.overlay.calendar.action.lunch())) {\n                        const food = [\n                            i18n.overlay.calendar.lunch.food.v1(),\n                            i18n.overlay.calendar.lunch.food.v2(),\n                            i18n.overlay.calendar.lunch.food.v3(),\n                            i18n.overlay.calendar.lunch.food.v4(),\n                            i18n.overlay.calendar.lunch.food.v5(),\n                            i18n.overlay.calendar.lunch.food.v6(),\n                            i18n.overlay.calendar.lunch.food.v7()\n                        ];\n\n                        game.player.attended_meetings_today.push(overlay.event.type);\n\n                        skip_hours(1);\n                        increase_health(10);\n\n                        message_overlay(i18n.overlay.calendar.lunch.message({ food: random_in_array(food) }));\n                    }\n                }\n\n                if (overlay.event.type == Calendar_Event_Type.daily_standup) {\n                    menu.message(i18n.overlay.calendar.standup.info());\n\n                    if (menu.button(i18n.overlay.calendar.action.standup())) {\n                        game.player.attended_meetings_today.push(overlay.event.type);\n                        close_current_app();\n                        show_overlay({\n                            type: Overlay_Type.standup_report,\n                            queue: [...game.team],\n                            random_verb_divisible: Math.round(Math.random() * 65536)\n                        });\n                    }\n                }\n\n                if (overlay.event.type == Calendar_Event_Type.one_on_one) {\n                    menu.message(i18n.overlay.calendar.one_on_one.info());\n\n                    if (menu.button(i18n.overlay.calendar.action.one_on_one())) {\n                        game.player.attended_meetings_today.push(overlay.event.type);\n                        overlay.event.teammate.skill_level += 0.05;\n                        skip_hours(1);\n                        message_overlay(i18n.overlay.calendar.one_on_one.message({ name: overlay.event.teammate.name }));\n                    }\n                }\n\n                if (overlay.event.type == Calendar_Event_Type.knowledge_sharing) {\n                    menu.message(i18n.overlay.calendar.knowledge_sharing.info({ topic: overlay.event.topic }));\n\n                    if (menu.button(i18n.overlay.calendar.action.knowledge_sharing())) {\n                        game.player.attended_meetings_today.push(overlay.event.type);\n                        game.player.productivity += 20;\n                        skip_hours(1);\n                        message_overlay(i18n.overlay.calendar.knowledge_sharing.message({ topic: overlay.event.topic }));\n                    }\n                }\n\n                if (overlay.event.type == Calendar_Event_Type.candidate_interview) {\n                    menu.message(i18n.overlay.calendar.interview.info());\n\n                    if (menu.button(i18n.overlay.calendar.action.interview())) {\n                        game.player.attended_meetings_today.push(overlay.event.type);\n                        skip_hours(2);\n                        message_overlay(i18n.overlay.calendar.interview.message({ candidate_name: overlay.event.candidate_name }));\n                    }\n                }\n\n                if (overlay.event.type == Calendar_Event_Type.lead_meeting) {\n                    menu.message(i18n.overlay.calendar.lead_meeting.info());\n\n                    if (menu.button(i18n.overlay.calendar.action.lead_meeting())) {\n                        game.player.attended_meetings_today.push(overlay.event.type);\n                        skip_hours(1);\n                        message_overlay(i18n.overlay.calendar.lead_meeting.message());\n                    }\n                }\n\n                if (menu.button(i18n.overlay.calendar.action.do_something_else())) {\n                    exit_overlay();\n                }\n            } else {\n                if (overlay.event.start_hour < game.hour_of_day) {\n                    if (game.hour_of_day < overlay.event.start_hour + overlay.event.duration) {\n                        menu.message(i18n.overlay.calendar.already_started());\n                    } else {\n                        menu.message(i18n.overlay.calendar.already_finished());\n                    }\n                } else {\n                    menu.message(i18n.overlay.calendar.not_started_yet())\n                }\n            }\n\n            menu.finish();\n\n            allow_exit();\n\n            break;\n        }\n\n        case Overlay_Type.website_menu: {\n            const center = overlay.at;\n            const menu_width = 300;\n            const menu = auto_menu(center.x - menu_width / 2, center.y + 32, menu_width);\n\n            if (overlay.website == Website.jabr) {\n                menu.message(i18n.overlay.browser.jabr())\n\n                if (menu.button(i18n.overlay.browser.action.read_jabr())) {\n                    skip_hours(1);\n                    message_overlay(i18n.overlay.browser.jabr_read());\n                    game.player.productivity += 5;\n                }\n            } else if (overlay.website == Website.you_cube) {\n                menu.message(i18n.overlay.browser.you_cube())\n\n                if (menu.button(i18n.overlay.browser.action.you_cube())) {\n                    const channels = [\n                        i18n.overlay.browser.video.v1(),\n                        i18n.overlay.browser.video.v2(),\n                        i18n.overlay.browser.video.v3(),\n                        i18n.overlay.browser.video.v4(),\n                        i18n.overlay.browser.video.v5(),\n                        i18n.overlay.browser.video.v6(),\n                        i18n.overlay.browser.video.v7(),\n                        i18n.overlay.browser.video.v8(),\n                        i18n.overlay.browser.video.v9()\n                    ];\n\n                    skip_hours(1);\n                    message_overlay(i18n.overlay.browser.you_cube_watched({ video: random_in_array(channels) }));\n                    game.player.burnout = Math.max(0, game.player.burnout - 5);\n                }\n            } else {\n                unreachable(overlay.website);\n            }\n\n            menu.finish();\n\n            allow_exit();\n            break;\n        }\n\n        case Overlay_Type.computer_menu: {\n            const top_left = overlay.at;\n            const menu_width = 300;\n            const menu = auto_menu(top_left.x, top_left.y, menu_width);\n\n            if (menu.button(i18n.overlay.computer.finish_work_for_today())) {\n                do {\n                    skip_hours(1);\n                    increase_health(4);\n                } while (game.hour_of_day != 10)\n\n                close_current_app();\n                exit_overlay();\n\n                if (game.day_of_week > work_days) {\n                    show_overlay({\n                        type: Overlay_Type.weekend\n                    })\n                } else {\n                    new_day_message();\n                }\n            }\n\n            menu.finish();\n\n            allow_exit();\n\n            break;\n        }\n\n        case Overlay_Type.inbox_entry_menu: {\n            const top_left = overlay.at;\n            const menu_width = 300;\n            const menu = auto_menu(top_left.x, top_left.y, menu_width);\n\n            const entry = overlay.entry;\n\n            if (entry.type == Inbox_Entry_Type.review_task && entry.task.status == Task_Status.in_review) {\n                menu.message(i18n.overlay.inbox.review_info());\n\n                if (menu.button(i18n.overlay.inbox.action.review())) {\n                    show_overlay({\n                        type: Overlay_Type.code_review,\n                        task: entry.task\n                    });\n\n                    close_current_app();\n                }\n            }\n\n            if (entry.type == Inbox_Entry_Type.task_returned_to_dev) {\n                menu.message(i18n.overlay.inbox.returned_to_dev());\n\n                if (menu.button(i18n.overlay.inbox.action.mark_as_read())) {\n                    entry.read = true;\n                    exit_overlay();\n                }\n            }\n\n            if (entry.type == Inbox_Entry_Type.production_bug) {\n                menu.message(i18n.overlay.inbox.production_bug({ num_bugs: entry.task.bugs.toString() }));\n\n                if (menu.button(i18n.overlay.inbox.action.fix_bugs())) {\n                    increase_burnout_if_working_past_work_time();\n                    skip_hours(1);\n                    entry.task.bugs--;\n\n                    if (entry.task.bugs == 0) {\n                        message_overlay(i18n.overlay.inbox.production_bug_fixed());\n                        entry.read = true;\n                    }\n                }\n            }\n\n            if (menu.button(i18n.overlay.inbox.action.do_something_else())) {\n                exit_overlay();\n            }\n\n            menu.finish();\n\n            allow_exit();\n\n            break;\n        }\n\n        case Overlay_Type.task_menu: {\n            const top_left = overlay.at;\n            const menu_width = 300;\n            const menu = auto_menu(top_left.x, top_left.y, menu_width);\n            const task = overlay.task;\n            menu.message_font(17);\n            menu.padding(16);\n\n            function task_text(): string {\n                switch (task.status) {\n                    case Task_Status.new: {\n                        return i18n.overlay.task.status.not_started();\n                    }\n\n                    case Task_Status.in_development: {\n                        if (task.assigned_to.you) {\n                            return i18n.overlay.task.status.in_dev.you();\n                        } else {\n                            return i18n.overlay.task.status.in_dev.teammate({ name: task.assigned_to.teammate.name });\n                        }\n                    }\n\n                    case Task_Status.in_review: {\n                        if (task.assigned_to.you) {\n                            return i18n.overlay.task.status.in_review.yours();\n                        } else {\n                            return i18n.overlay.task.status.in_review.teammate({ name: task.assigned_to.teammate });\n                        }\n                    }\n\n                    case Task_Status.in_testing: {\n                        return i18n.overlay.task.status.in_testing();\n                    }\n\n                    case Task_Status.done: {\n                        return i18n.overlay.task.status.done();\n                    }\n\n                }\n            }\n\n            menu.message(`\"${overlay.task.name}\". ${task_text()}`);\n\n            if (task.status == Task_Status.in_development && task.assigned_to.you) {\n                if (menu.button(i18n.overlay.task.action.go_to_editor())) {\n                    open_app(App_Type.code_junkie);\n                    exit_overlay();\n                }\n            }\n\n            if (task.status == Task_Status.in_review && !task.assigned_to.you) {\n                if (menu.button(i18n.overlay.task.action.go_to_review())) {\n                    show_overlay({\n                        type: Overlay_Type.code_review,\n                        task: task\n                    });\n\n                    close_current_app();\n                }\n            }\n\n            if (task.status == Task_Status.new && !find_your_first_current_task_in_dev()) {\n                if (menu.button(i18n.overlay.task.action.assign_to_you())) {\n                    assign_task(task, { you: true });\n                }\n            }\n\n            menu.finish();\n\n            allow_exit();\n\n            break;\n        }\n\n        case Overlay_Type.teammate_menu: {\n            const teammate = overlay.teammate;\n            const task = find_first_assigned_task_in_dev(teammate);\n            const top_left = overlay.at;\n            const menu_width = 300;\n            const menu = auto_menu(top_left.x, top_left.y, menu_width);\n\n            if (is_work_time()) {\n                if (task && task.developer_stuck_hours > 0) {\n                    if (menu.button(i18n.overlay.teammate.action.help({ name: teammate.name }))) {\n                        task.developer_stuck_hours = 0;\n                        teammate.skill_level += 0.05;\n\n                        receive_message_from(teammate, random_in_array([\n                            i18n.chat.thanks.v1(),\n                            i18n.chat.thanks.v2(),\n                            i18n.chat.thanks.v3()\n                        ]), true);\n                        skip_hours(1);\n                        message_overlay(i18n.overlay.teammate.helped({ name: teammate.name }));\n                    }\n                } else {\n                    menu.message(i18n.overlay.teammate.nothing_to_talk_about());\n                }\n            } else {\n                menu.message(i18n.overlay.teammate.cant_talk_after_work({ name: teammate.name }))\n            }\n\n            menu.finish();\n\n            allow_exit();\n\n            break;\n        }\n\n        // @Lang\n        case Overlay_Type.standup_report: {\n            const queue = overlay.queue;\n            const teammate = queue[0];\n\n            const avatar_side = 256;\n\n            function draw_standup_avatar(img: Image_Resource, name: string, title: string) {\n                const x = game.canvas_width / 2 - avatar_side / 2\n                const y = game.canvas_height - 840;\n\n                const ctx = current_context();\n                const rect = path_rounded_rect(x, y, avatar_side, avatar_side + 60, 4);\n\n                ctx.shadowBlur = 8;\n                ctx.shadowColor = `rgba(119, 119, 119, 1)`;\n                ctx.fillStyle = \"#fff\";\n                ctx.fill(rect);\n                ctx.shadowBlur = 0;\n\n                push_clip(rect);\n\n                ctx.drawImage(img.img, x, y, avatar_side, avatar_side);\n\n                push_font(18);\n\n                const name_width = ctx.measureText(name).width;\n                const name_x = x + avatar_side / 2 - name_width / 2;\n                const name_y = y + avatar_side + 16;\n\n                ctx.fillStyle = \"#000\";\n                ctx.fillText(name, name_x, name_y);\n\n                pop_font();\n\n                push_font(15);\n\n                const title_width = ctx.measureText(title).width;\n                const title_x = x + avatar_side / 2 - title_width / 2;\n                const title_y = name_y + 24;\n\n                ctx.fillStyle = \"#777\";\n                ctx.fillText(title, title_x, title_y);\n\n                pop_font();\n\n                pop_clip();\n            }\n\n            const menu = big_centered_menu(0.45, 750);\n\n            if (teammate) {\n                const current_task = find_first_assigned_task_in_dev(teammate);\n\n                draw_standup_avatar(teammate.avatar, teammate.name.nominative, teammate.skill_title);\n\n                function continue_to_next_teammate() {\n                    const updated_queue = queue.slice(1);\n\n                    show_overlay({\n                        type: Overlay_Type.standup_report,\n                        queue: updated_queue,\n                        random_verb_divisible: Math.round(Math.random() * 65536)\n                    });\n                }\n\n                const random_verb_divisible = overlay.random_verb_divisible;\n\n                function teammate_message() {\n                    if (current_task) {\n                        const actions = [\n                            i18n.overlay.standup.teammate.worked_on.v1(),\n                            i18n.overlay.standup.teammate.worked_on.v2(),\n                            i18n.overlay.standup.teammate.worked_on.v3(),\n                            i18n.overlay.standup.teammate.worked_on.v4(),\n                            i18n.overlay.standup.teammate.worked_on.v5(),\n                            i18n.overlay.standup.teammate.worked_on.v6(),\n                            i18n.overlay.standup.teammate.worked_on.v7()\n                        ];\n\n                        // Biased, but who cares\n                        const action = actions[random_verb_divisible % actions.length];\n\n                        if (current_task.developer_stuck_hours > 0) {\n                            return i18n.overlay.standup.teammate.worked_on.stuck({ worked_on: action, task: current_task.name });\n                        } else {\n                            if (current_task.remaining_work_hours < 3) {\n                                return i18n.overlay.standup.teammate.worked_on.finishing_soon({ worked_on: action, task: current_task.name });\n                            } else {\n                                return i18n.overlay.standup.teammate.worked_on.base({ worked_on: action, task: current_task.name });\n                            }\n                        }\n                    } else {\n                        const strings = [\n                            i18n.overlay.standup.teammate.finished_all_tasks.v1(),\n                            i18n.overlay.standup.teammate.finished_all_tasks.v2(),\n                            i18n.overlay.standup.teammate.finished_all_tasks.v3(),\n                            i18n.overlay.standup.teammate.finished_all_tasks.v4(),\n                            i18n.overlay.standup.teammate.finished_all_tasks.v5()\n                        ];\n\n                        // Biased, but who cares\n                        return strings[random_verb_divisible % strings.length];\n                    }\n                }\n\n                menu.message(teammate_message());\n\n                if (current_task) {\n                    if (menu.button(i18n.overlay.standup.action.continue())) {\n                        continue_to_next_teammate();\n                    }\n                } else {\n                    const tasks = free_tasks().slice(0, 5);\n                    for (const task of tasks) {\n                        if (menu.button(i18n.overlay.standup.action.suggest_task({ task: task.full_name, estimated_time: task.estimated_time.toString() }))) {\n                            assign_task(task, {\n                                you: false,\n                                teammate: teammate\n                            });\n\n                            continue_to_next_teammate();\n                        }\n                    }\n\n                    if (tasks.length == 0) {\n                        if (menu.button(i18n.overlay.standup.action.continue_no_free_tasks())) {\n                            continue_to_next_teammate();\n                        }\n                    }\n                }\n            } else {\n                const current_task = find_your_first_current_task_in_dev();\n\n                draw_standup_avatar(images.default_avatar, i18n.overlay.standup.you.name(), \"TeamLead\");\n\n                function your_message() {\n                    if (current_task) {\n                        return i18n.overlay.standup.you.working_on({ task: current_task.name });\n                    } else {\n                        return i18n.overlay.standup.you.will_take_next_task();\n                    }\n                }\n\n                function finish_standup() {\n                    skip_hours(1);\n                    message_overlay(i18n.overlay.standup.finished());\n                }\n\n                menu.message(your_message());\n\n                if (current_task) {\n                    if (menu.button(i18n.overlay.standup.action.continue())) {\n                        finish_standup();\n                    }\n                } else {\n                    const tasks = free_tasks().slice(0, 5);\n\n                    for (const task of tasks) {\n                        if (menu.button(i18n.overlay.standup.action.assign_to_yourself({ task: task.full_name, estimated_time: task.estimated_time.toString() }))) {\n                            assign_task(task, { you: true });\n\n                            finish_standup();\n                        }\n                    }\n\n                    if (tasks.length == 0) {\n                        if (menu.button(i18n.overlay.standup.action.continue_no_free_tasks())) {\n                            finish_standup();\n                        }\n                    }\n                }\n            }\n\n            menu.finish();\n\n            block_exit();\n\n            break;\n        }\n\n        case Overlay_Type.editor_work_menu: {\n            const menu = big_centered_menu();\n\n            const my_task = find_your_first_current_task_in_dev();\n\n            if (my_task) {\n                const work_remaining_message = (): string => {\n                    const hours = my_task.remaining_work_hours;\n\n                    if (hours == my_task.estimated_time) {\n                        return i18n.overlay.editor.nothing_done();\n                    }\n\n                    // TODO more of those\n                    if (hours > 5) {\n                        return i18n.overlay.editor.lots_of_work();\n                    } else if (hours > 2) {\n                        return i18n.overlay.editor.mostly_done();\n                    } else if (hours == 0) {\n                        return i18n.overlay.editor.done();\n                    } else {\n                        return i18n.overlay.editor.almost_there();\n                    }\n                }\n\n                menu.message(work_remaining_message());\n\n                if (my_task.remaining_work_hours > 0) {\n                    if (menu.button(i18n.overlay.editor.work_on_task())) {\n                        increase_burnout_if_working_past_work_time();\n                        skip_hours(1);\n\n                        const work_effort = (game.player.productivity / 100);\n\n                        my_task.remaining_work_hours = Math.max(0, my_task.remaining_work_hours - work_effort);\n                        my_task.time_spent++;\n                        my_task.bugs += Math.floor(Math.random() * 2.5);\n\n                        if (my_task.remaining_work_hours > 5) {\n                            message_overlay_and_then(overlay, i18n.overlay.editor.work_done_1())\n                        } else if (my_task.remaining_work_hours > 2) {\n                            message_overlay_and_then(overlay, i18n.overlay.editor.work_done_2());\n                        } else if (my_task.remaining_work_hours == 0) {\n                            message_overlay_and_then(overlay, i18n.overlay.editor.work_done_3());\n                        } else {\n                            message_overlay_and_then(overlay, i18n.overlay.editor.work_done_4())\n                        }\n                    }\n                } else {\n                    if (menu.button(i18n.overlay.editor.action.pass_to_review())) {\n                        message_overlay(i18n.overlay.editor.passed_to_review());\n                        pass_task_to_review(my_task);\n                    }\n\n                    if (!my_task.tests_written && menu.button(i18n.overlay.editor.action.write_tests())) {\n                        const found_bugs = Math.round((0.5 + Math.random() * 0.5) * my_task.bugs);\n\n                        my_task.time_spent++;\n                        my_task.tests_written = true;\n                        my_task.bugs -= found_bugs;\n\n                        increase_burnout_if_working_past_work_time();\n                        message_overlay_and_then(overlay, i18n.overlay.editor.tests_done());\n                        skip_hours(1);\n                    }\n\n                    if (!my_task.instructions_for_qa_written && menu.button(i18n.overlay.editor.action.write_qa_instructions())) {\n                        my_task.instructions_for_qa_written = true;\n                        my_task.time_spent++;\n                        increase_burnout_if_working_past_work_time();\n                        message_overlay_and_then(overlay, i18n.overlay.editor.qa_instructions_done());\n                        skip_hours(1);\n                    }\n                }\n            } else {\n                menu.message(i18n.overlay.editor.task_done());\n\n                if (menu.button(i18n.overlay.editor.action.open_wrike_to_take_new_task())) {\n                    open_app(App_Type.wrike);\n                    exit_overlay();\n                }\n            }\n\n            if (menu.button(i18n.overlay.editor.action.do_something_else())) {\n                exit_overlay()\n            }\n\n            menu.finish();\n\n            allow_exit();\n\n            break;\n        }\n\n        case Overlay_Type.code_review: {\n            const task = overlay.task;\n            if (task.assigned_to.you) break; // TODO bad invariant\n\n            const menu = big_centered_menu();\n\n            if (task.bugs > 5) {\n                menu.message(i18n.overlay.code_review.look_at_code.bad({ name: task.assigned_to.teammate.name }));\n            } else if (task.bugs > 2) {\n                menu.message(i18n.overlay.code_review.look_at_code.not_too_bad({ name: task.assigned_to.teammate.name }));\n            } else {\n                menu.message(i18n.overlay.code_review.look_at_code.ok({ name: task.assigned_to.teammate.name }));\n            }\n\n            if (menu.button(i18n.overlay.code_review.action.pass_to_qa_without_looking())) {\n                pass_task_to_qa(overlay.task, 8);\n                message_overlay(i18n.overlay.code_review.passed_to_qa_without_looking());\n            }\n\n            // if (button(\"Докопаться до кодстайла (1 ч.)\")) {\n            //     skip_hours(1);\n            //     pass_task_to_qa(screen.task);\n            // }\n\n            if (menu.button(i18n.overlay.code_review.action.look_at_code())) {\n                increase_burnout_if_working_past_work_time();\n                skip_hours(1);\n\n                if (overlay.task.bugs > 0) {\n                    const found_bugs = Math.round((0.5 + Math.random() * 0.5) * overlay.task.bugs);\n                    return_task_from_review_to_development(overlay.task, found_bugs);\n                    message_overlay(i18n.overlay.code_review.found_bugs());\n                } else {\n                    pass_task_to_qa(overlay.task, 8);\n                    message_overlay(i18n.overlay.code_review.couldnt_find_bugs());\n                }\n            }\n\n            if (menu.button(i18n.overlay.code_review.action.do_something_else())) {\n                exit_overlay();\n            }\n\n            menu.finish();\n\n            allow_exit();\n\n            break;\n        }\n\n        case Overlay_Type.game_over: {\n            function game_over_message(reason: Game_Over_Reason): string {\n                switch (reason) {\n                    case Game_Over_Reason.victory: return i18n.overlay.game_over.reason.victory();\n                    case Game_Over_Reason.deadline_failed: return i18n.overlay.game_over.reason.deadline_failed();\n                    case Game_Over_Reason.fired: return i18n.overlay.game_over.reason.fired();\n                    case Game_Over_Reason.bad_health: return i18n.overlay.game_over.reason.bad_health();\n                    case Game_Over_Reason.burnout: return i18n.overlay.game_over.reason.burnout()\n                }\n            }\n\n            function reason_tip(reason: Game_Over_Reason): string | undefined {\n                switch (reason) {\n                    case Game_Over_Reason.bad_health: return i18n.overlay.game_over.tip.bad_health();\n                    case Game_Over_Reason.burnout: return i18n.overlay.game_over.tip.burnout();\n                    case Game_Over_Reason.fired: return i18n.overlay.game_over.tip.fired();\n                }\n            }\n\n            const tip = reason_tip(overlay.reason);\n\n            const menu = big_centered_menu(0.2);\n            menu.center_text();\n            menu.padding(32);\n            menu.message(\n                `${game_over_message(overlay.reason)}\\n\\n` +\n                `${i18n.overlay.game_over.message.header()}\\n` +\n                `${i18n.overlay.game_over.message.difficulty({ difficulty: difficulty_name(game.difficulty) })}\\n` +\n                `${deadline_stats_message(true)}\\n` +\n                `${tip ? `\\n${i18n.overlay.game_over.message.tip({ tip: tip })}\\n` : \"\"}\\n` +\n                `${i18n.overlay.game_over.message.restart()}`);\n            menu.finish();\n\n            block_exit();\n            break;\n        }\n\n        default: unreachable(overlay);\n    }\n}\n\nfunction decrease_company_status(penalty: number) {\n    game.player.company_status = Math.max(0, game.player.company_status - penalty);\n\n    if (game.player.company_status == 0) {\n        show_overlay({ type: Overlay_Type.game_over, reason: Game_Over_Reason.fired });\n    }\n}\n\nfunction skip_hours(how_many: number) {\n    function one_hour() {\n        if (is_work_time()) {\n            const worked_this_hour = new Set<Teammate>();\n\n            for (const task of all_tasks()) {\n                if (task.status == Task_Status.in_development && !task.assigned_to.you) {\n                    if (worked_this_hour.has(task.assigned_to.teammate)) {\n                        continue;\n                    } else {\n                        worked_this_hour.add(task.assigned_to.teammate);\n                    }\n\n                    if (task.developer_stuck_hours == 0) {\n                        const chance_to_get_stuck = (1.0 - task.assigned_to.teammate.skill_level) * 0.1;\n\n                        if (Math.random() < chance_to_get_stuck && !task.has_already_stuck_once) {\n                            const help_messages = [\n                                i18n.chat.help.v1({ task_name: task.name }),\n                                i18n.chat.help.v2({ task_name: task.name, sadness: random_up_to(3) }),\n                                i18n.chat.help.v3({ task_name: task.name }),\n                                i18n.chat.help.v4({ task_name: task.name }),\n                                i18n.chat.help.v5({ task_name: task.name })\n                            ];\n\n                            task.developer_stuck_hours = 6;\n                            task.has_already_stuck_once = true;\n\n                            receive_message_from(task.assigned_to.teammate, random_in_array(help_messages));\n                        } else {\n                            const change_to_introduce_bugs = (1.0 - task.assigned_to.teammate.skill_level) * 0.5;\n\n                            if (Math.random() < change_to_introduce_bugs) {\n                                task.bugs++;\n                            }\n\n                            task.remaining_work_hours--;\n                            task.time_spent++;\n\n                            if (task.remaining_work_hours == 0) {\n                                pass_task_to_review(task);\n\n                                game.inbox.push({\n                                    type: Inbox_Entry_Type.review_task,\n                                    task: task,\n                                    read: false,\n                                    received_at_hour: game.hour_of_day,\n                                    received_at_day_of_week: game.day_of_week\n                                });\n                            }\n                        }\n                    } else {\n                        task.developer_stuck_hours--;\n                        task.time_spent++;\n\n                        if (task.developer_stuck_hours == 0) {\n                            const ok_messages = [\n                                i18n.chat.figured_out.v1(),\n                                i18n.chat.figured_out.v2(),\n                                i18n.chat.figured_out.v3(),\n                                i18n.chat.figured_out.v4(),\n                                i18n.chat.figured_out.v5()\n                            ];\n\n                            receive_message_from(task.assigned_to.teammate, `${random_in_array(ok_messages)}${random_in_array([\"\", \" 👌\"])}`, true);\n                        }\n                    }\n                }\n\n                if (task.status == Task_Status.in_testing) {\n                    task.remaining_work_hours--;\n\n                    if (task.remaining_work_hours == 0) {\n                        const bugs_found = Math.floor(Math.random() * task.bugs * 0.7);\n\n                        if (!task.assigned_to.you && bugs_found > 1) {\n                            return_task_from_qa_to_development(task, bugs_found);\n                        } else {\n                            deploy_task(task);\n                        }\n                    }\n                }\n\n                if (task.status == Task_Status.in_review && task.assigned_to.you) {\n                    task.remaining_work_hours--;\n\n                    if (task.remaining_work_hours == 0) {\n                        if (task.instructions_for_qa_written) {\n                            pass_task_to_qa(task, 2);\n                        } else {\n                            pass_task_to_qa(task, 8);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (const task of game.backlog) {\n            if (task.status == Task_Status.done && task.bugs > 0 && task.can_backfire_on_prod && !task.defects_found_on_prod) {\n                const chance_to_find_defects = task.bugs * 0.03;\n\n                if (Math.random() > chance_to_find_defects) {\n                    task.defects_found_on_prod = true;\n                    game.inbox.push({\n                        type: Inbox_Entry_Type.production_bug,\n                        task: task,\n                        hours_remaining: 72,\n                        read: false,\n                        received_at_hour: game.hour_of_day,\n                        received_at_day_of_week: game.day_of_week\n                    });\n                }\n            }\n        }\n\n        for (const entry of game.inbox) {\n            if (entry.type == Inbox_Entry_Type.production_bug && !entry.read) {\n                if (entry.hours_remaining > 0) {\n                    entry.hours_remaining--;\n                } else {\n                    decrease_company_status(3);\n                }\n            }\n        }\n\n        game.hour_of_day++;\n\n        for (const event of game.today_events) {\n            if (game.hour_of_day == event.start_hour + event.duration) {\n                if (event.type == Calendar_Event_Type.daily_standup && !game.player.attended_meetings_today.includes(Calendar_Event_Type.daily_standup)) {\n                    for (const teammate of game.team) {\n                        const task = find_first_assigned_task_in_dev(teammate);\n\n                        if (!task) {\n                            const new_random_task = random_in_array(free_tasks().slice(0, 10));\n\n                            if (new_random_task) {\n                                assign_task(new_random_task, {you: false, teammate: teammate});\n                            }\n                        }\n                    }\n                }\n\n                const meeting_miss_penalty: Record<Calendar_Event_Type, number> = {\n                    [Calendar_Event_Type.candidate_interview]: 15,\n                    [Calendar_Event_Type.one_on_one]: 3,\n                    [Calendar_Event_Type.lead_meeting]: 5,\n                    [Calendar_Event_Type.daily_standup]: 5,\n\n                    [Calendar_Event_Type.knowledge_sharing]: 0,\n                    [Calendar_Event_Type.lunch]: 0\n                };\n\n                if (!game.player.attended_meetings_today.includes(event.type)) {\n                    decrease_company_status(meeting_miss_penalty[event.type]);\n                }\n            }\n        }\n\n        if (game.hour_of_day == 24) {\n            game.hour_of_day = 0;\n            game.day++;\n\n            if (game.day == game.deadline_day) {\n                show_overlay({ type: Overlay_Type.game_over, reason: Game_Over_Reason.deadline_failed });\n            }\n\n            if (game.day_of_week == week_days) {\n                game.day_of_week = 1;\n            } else {\n                game.day_of_week++;\n            }\n\n            game.player.attended_meetings_today = [];\n            refresh_events_for_today();\n        }\n\n        game.player.health = Math.max(0, game.player.health - 3);\n\n        if (game.player.health == 0) {\n            show_overlay({ type: Overlay_Type.game_over, reason: Game_Over_Reason.bad_health });\n        }\n    }\n\n    for (let hour = 0; hour < how_many; hour++) one_hour();\n}\n\nfunction find_first_assigned_task_in_dev(teammate: Teammate): By_Status<Task, Task_Status.in_development> | undefined {\n    for (const task of game.backlog) {\n        if (task.status == Task_Status.in_development && !task.assigned_to.you && task.assigned_to.teammate == teammate) {\n            return task;\n        }\n    }\n}\n\nfunction find_your_first_current_task_in_dev(): By_Status<Task, Task_Status.in_development> | undefined {\n    for (const task of game.backlog) {\n        if (task.status == Task_Status.in_development && task.assigned_to.you) {\n            return task;\n        }\n    }\n}\n\nfunction task_ui(task: Task) {\n    return `${task.name} [${Task_Status[task.status]}${task.status == Task_Status.in_development ? \" \" + `h: ${task.remaining_work_hours.toFixed(1)}, b: ${task.bugs}` : \"\"}]`;\n}\n\nfunction get_app_notifications(app: App): number {\n    switch (app.type) {\n        case App_Type.clndr: {\n            return game.today_events.some(event => event.start_hour == game.hour_of_day) ? 1 : 0;\n        }\n\n        case App_Type.limp: {\n            return game.team.map(teammate => teammate.messages.length - teammate.messages_read).reduce((l, r) => l + r, 0);\n        }\n\n        case App_Type.wrike: {\n            return game.inbox.filter(entry => !entry.read).length;\n        }\n\n        default: return 0;\n    }\n}\n\nfunction draw_app(app: App) {\n    function center_cursor(w: number, h: number) {\n        set_layout_cursor(game.canvas_width / 2 - w / 2, game.canvas_height / 2 - h / 2);\n    }\n\n    function scale_dimension(original: number, min_ratio: number) {\n        const ratio = Math.min(1, Math.max(min_ratio, game.canvas_height / 900));\n        return original * ratio;\n    }\n\n    switch (app.type) {\n        case App_Type.code_junkie: {\n            const w = scale_dimension(1100, 0.75), h = scale_dimension(600, 0.75);\n\n            push_layout(Layout_Type.absolute);\n            center_cursor(w, h);\n\n            draw_window(w, h, i18n.app.editor.name(),() => {\n                draw_code_editor(w, h);\n            });\n\n            pop_layout();\n            break;\n        }\n\n        case App_Type.limp: {\n            const w = 900, h = 450;\n\n            push_layout(Layout_Type.absolute);\n            center_cursor(w, h);\n\n            draw_window(w, h, i18n.app.chat.name(),() => {\n                draw_messenger(app, w, h);\n            });\n\n            pop_layout();\n\n            break;\n        }\n\n        case App_Type.wrike: {\n            const w = 1260, h = scale_dimension(620, 0.8);\n\n            push_layout(Layout_Type.absolute);\n            center_cursor(w, h);\n\n            draw_window(w, h, i18n.app.wrike.name(),() => {\n                draw_wrike(app, w, h);\n            });\n\n            pop_layout();\n            break;\n        }\n\n        case App_Type.clndr: {\n            const w = 500, h = 420;\n\n            push_layout(Layout_Type.absolute);\n            center_cursor(w, h);\n\n            draw_window(w, h, i18n.app.calendar.name(),() => {\n                draw_calendar(w);\n            });\n\n            pop_layout();\n            break;\n        }\n\n        case App_Type.iron: {\n            const w = 900, h = 450;\n\n            push_layout(Layout_Type.absolute);\n            center_cursor(w, h);\n\n            draw_window(w, h, i18n.app.browser.name(),() => {\n                draw_browser(w, h);\n            });\n\n            pop_layout();\n\n            break;\n        }\n\n        default: unreachable(app);\n    }\n}\n\nfunction health_label(health: number) {\n    if (health > 80) return i18n.status.health.perfect();\n    if (health > 60) return i18n.status.health.good();\n    if (health > 40) return i18n.status.health.fine();\n    if (health > 20) return i18n.status.health.bad();\n    if (health > 0) return i18n.status.health.terrible();\n    return i18n.status.health.zero();\n}\n\nfunction company_status_label(status: number) {\n    if (status > 80) return i18n.status.company.perfect();\n    if (status > 60) return i18n.status.company.good();\n    if (status > 40) return i18n.status.company.fine();\n    if (status > 20) return i18n.status.company.bad();\n    if (status > 0) return i18n.status.company.terrible();\n    return i18n.status.company.zero();\n}\n\nfunction burnout_label(burnout: number) {\n    if (burnout == 100) return i18n.status.burnout.zero();\n    if (burnout > 80) return i18n.status.burnout.terrible();\n    if (burnout > 60) return i18n.status.burnout.bad();\n    if (burnout > 40) return i18n.status.burnout.fine();\n    if (burnout > 20) return i18n.status.burnout.good();\n    return i18n.status.burnout.perfect();\n}\n\nfunction update_canvas_size(ctx: CanvasRenderingContext2D) {\n    ctx.canvas.width = game.canvas_width;\n    ctx.canvas.height = game.canvas_height;\n}\n\nfunction draw_image_cover(image: Image_Resource, x: number, y: number, w: number, h: number) {\n    const ctx = current_context();\n\n    const image_w = image.img.width;\n    const image_h = image.img.height;\n    const ratio = Math.min(w / image_w, h / image_h);\n\n    let new_w = image_w * ratio;\n    let new_h = image_h * ratio;\n\n    let ar = 1;\n\n    // decide which gap to fill\n    if (new_w < w) ar = w / new_w;\n    if (Math.abs(ar - 1) < 1e-14 && new_h < h) ar = h / new_h;\n    new_w *= ar;\n    new_h *= ar;\n\n    let cw = image_w / (new_w / w);\n    let ch = image_h / (new_h / h);\n\n    const cx = (image_w - cw) * 0.5;\n    const cy = (image_h - ch) * 0.5;\n\n    if (cw > image_w) cw = image_w;\n    if (ch > image_h) ch = image_h;\n\n    ctx.drawImage(image.img, cx, cy, cw, ch, x, y, w, h);\n}\n\nfunction do_one_frame() {\n    game.canvas_width = window.innerWidth;\n    game.canvas_height = window.innerHeight;\n\n    update_canvas_size(game.out);\n    update_canvas_size(game.overlay_ctx);\n    update_canvas_size(game.main_ctx);\n\n    fix_canvas_dpi_scale(game.overlay_ctx);\n    fix_canvas_dpi_scale(game.main_ctx);\n    fix_canvas_dpi_scale(game.out, false);\n\n    game.font_stack = [];\n    game.context_stack = [];\n    game.layout_stack = [{\n        type: Layout_Type.vertical,\n        cursor: xy(30, 30)\n    }];\n\n    game.mouse.scroll_y = game.mouse.scroll_y + (game.mouse.target_scroll_y - game.mouse.scroll_y) * 0.3;\n\n    push_context(game.main_ctx);\n    push_font(18);\n\n    game.out.clearRect(0, 0, game.canvas_width * game.dpi_scale, game.canvas_height * game.dpi_scale);\n    game.main_ctx.clearRect(0, 0, game.canvas_width, game.canvas_height);\n    game.overlay_ctx.clearRect(0, 0, game.canvas_width, game.canvas_height);\n\n    const ctx = current_context();\n\n    if (game.hour_of_day < 18 && game.hour_of_day > 6) {\n        draw_image_cover(images.background_day, 0, 0, game.canvas_width, game.canvas_height);\n    } else {\n        draw_image_cover(images.background_night, 0, 0, game.canvas_width, game.canvas_height);\n    }\n\n    ctx.textBaseline = \"middle\";\n    game.overlay_ctx.textBaseline = \"middle\";\n\n    push_context(game.overlay_ctx);\n    draw_overlay_screen();\n    pop_context();\n\n    ctx.fillStyle = \"#fff\"\n    ctx.shadowBlur = 3;\n    ctx.shadowColor = \"#000\";\n    draw_status_line(i18n.status.label.health(), health_label(game.player.health), game.player.health / 100);\n    draw_status_line(i18n.status.label.burnout(), burnout_label(game.player.burnout), 1 - (game.player.burnout / 100));\n    draw_status_line(i18n.status.label.company(), company_status_label(game.player.company_status), game.player.company_status / 100);\n    draw_status_line(i18n.status.label.performance(), `${game.player.productivity.toString(10)}%`, 1);\n    ctx.shadowBlur = 0;\n\n    push_size(50);\n\n    if (dev_mode) {\n        const current = find_your_first_current_task_in_dev();\n\n        if (current) {\n            label(task_ui(current));\n        }\n\n        if (button(\"Health = 5\")) {\n            game.player.health = 5;\n        }\n\n        if (button(\"Burnout = 95\")) {\n            game.player.burnout = 95;\n        }\n\n        if (button(\"Skip 3 hours\")) {\n            skip_hours(3);\n        }\n    }\n\n    draw_top_bar(game.canvas_width);\n\n    push_layout(Layout_Type.absolute);\n    const dock_width = 420; // Blaze it\n    const dock_height = 100;\n    set_layout_cursor(game.canvas_width / 2 - dock_width / 2, game.canvas_height - dock_height + 10);\n    draw_dock(dock_width, dock_height);\n    pop_layout();\n\n    push_size(500);\n\n    if (game.current_app) {\n        draw_app(game.current_app);\n    }\n\n    const target_blur = game.overlay.type == Overlay_Type.none ? 0 : 2;\n\n    game.blur = game.blur + (target_blur - game.blur) * 0.1;\n\n    if (game.blur > 0.1) {\n        game.out.filter = `blur(${game.blur}px)`;\n    }\n\n    game.out.drawImage(game.main_ctx.canvas, 0, 0);\n    game.out.filter = \"none\";\n    game.out.drawImage(game.overlay_ctx.canvas, 0, 0);\n    game.out.canvas.style.cursor = game.any_button_hovered_this_frame ? \"pointer\" : \"default\";\n\n    game.mouse.target_scroll_y = 0;\n    game.mouse.clicked = false;\n    game.any_button_clicked_this_frame = false;\n    game.any_button_hovered_this_frame = false;\n}\n\nfunction start_animation_frame_loop(time: number) {\n    requestAnimationFrame(time => start_animation_frame_loop(time));\n\n    game.frame_time = time - game.time;\n    game.time = time;\n    do_one_frame();\n}\n\nfunction fix_canvas_dpi_scale(context: CanvasRenderingContext2D, scale = true) {\n    const canvas = context.canvas;\n    const width = canvas.width;\n    const height = canvas.height;\n\n    const devicePixelRatio = window.devicePixelRatio ?? 1;\n    const backingStoreRatio = 1; //context.backingStorePixelRatio || 1\n    const ratio = devicePixelRatio / backingStoreRatio;\n\n    if (devicePixelRatio !== backingStoreRatio) {\n        canvas.width = width * ratio;\n        canvas.height = height * ratio;\n\n        canvas.style.width = width + 'px';\n        canvas.style.height = height + 'px';\n    } else {\n        canvas.width = width;\n        canvas.height = height;\n        canvas.style.width = '';\n        canvas.style.height = '';\n    }\n\n    if (scale) {\n        context.scale(ratio, ratio);\n    }\n\n    return ratio;\n}\n\nfunction random_up_to(x: number) {\n    return Math.floor(Math.random() * x);\n}\n\nfunction random_in_array<T>(input: T[]): T {\n    return input[random_up_to(input.length)];\n}\n\nfunction pick_n_random_skills(skills: Skill[], how_many: number) {\n    const picked: Skill[] = [];\n\n    for (let index = 0; index < how_many; index++) {\n        const skill_index = random_up_to(skills.length);\n        picked.push(...skills.splice(skill_index, 1));\n    }\n\n    return picked;\n}\n\nfunction generate_team(): Teammate[] {\n    const available_avatars = shuffle([...images.people])\n    const available_skills = all_skills();\n\n    function shuffle<T>(input: T[]) {\n        for (let index = input.length - 1; index > 0; index--) {\n            const random_index = Math.floor(Math.random() * (index + 1));\n            const swapped = input[index];\n            input[index] = input[random_index];\n            input[random_index] = swapped;\n        }\n\n        return input;\n    }\n\n    function pick_avatar() {\n        const avatar = available_avatars.pop();\n        if (!avatar) throw \"Avatar not found\";\n        return avatar;\n    }\n\n    function base(how_many_skills: number) {\n        const titles = [\n            \"connoisseur\",\n            \"master\",\n            \"jedi\",\n            \"ninja\",\n            \"enthusiast\",\n            \"specialist\",\n            \"expert\",\n            \"guru\",\n            \"wizard\",\n            \"nerd\"\n        ];\n\n        const skills = pick_n_random_skills(available_skills, how_many_skills);\n        const title = skills.map(skill => {\n            const random_title = titles.splice(random_up_to(titles.length), 1)[0];\n            return `${skill_name(skill)} ${random_title}`;\n        }).join(\", \");\n\n        return {\n            avatar: pick_avatar(),\n            skills: skills,\n            skill_title: title,\n            messages_read: 0,\n            messages: []\n        }\n    }\n\n    function parse_name(encoded: string): Given_Name {\n        const parts = encoded.split(\"|\");\n\n        return {\n            nominative: parts[0],\n            genitive: parts[1],\n            dative: parts[2]\n        }\n    }\n\n    const names = [\n        parse_name(i18n.teammate.name_nom_gen_dat.v1()),\n        parse_name(i18n.teammate.name_nom_gen_dat.v2()),\n        parse_name(i18n.teammate.name_nom_gen_dat.v3()),\n        parse_name(i18n.teammate.name_nom_gen_dat.v4()),\n        parse_name(i18n.teammate.name_nom_gen_dat.v5())\n    ];\n\n    shuffle(names);\n\n    return [{\n        ...base(2),\n        name: names[0],\n        skill_level: 0.7\n    }, {\n        ...base(2),\n        name: names[1],\n        skill_level: 0.5\n    }, {\n        ...base(1),\n        name: names[2],\n        skill_level: 0.3,\n    }];\n}\n\nconst words = {\n    verbs: [\n        \"Implement\",\n        \"Research\",\n        \"Add\",\n        \"Support\",\n        \"Fix\",\n        \"Change\",\n        \"Improve\",\n        \"Optimize\",\n        \"Integrate\",\n        \"Enable\"\n    ],\n    adjectives: [\n        \"adaptive\",\n        \"progressive\",\n        \"directional\",\n        \"borderless\",\n        \"seamless\",\n        \"intuitive\",\n        \"selectable\",\n        \"persistent\",\n        \"contextual\",\n        \"third party\",\n        \"stateful\",\n        \"stateless\",\n        \"sharded\"\n    ],\n    nouns: [\n        \"navigation\",\n        \"browsing\",\n        \"file attachments\",\n        \"sharing\",\n        \"editing\",\n        \"collaboration\",\n        \"comments\",\n        \"administration\",\n        \"selection\",\n        \"uploads\",\n        \"updates\",\n        \"permalinks\",\n        \"dashboards\",\n        \"stacking\",\n        \"accounts\"\n    ]\n};\n\nconst knowledge_sharing_topics = new Set<string>();\n\nfunction generate_knowledge_sharing_topic() {\n    while (true) {\n        const name = `${random_in_array(words.adjectives)} ${random_in_array(words.nouns)}`;\n\n        if (!knowledge_sharing_topics.has(name)) {\n            knowledge_sharing_topics.add(name);\n            return name;\n        }\n    }\n}\n\nfunction generate_backlog(team_size: number, days_until_deadline: number, difficulty_multiplier: number): Task[] {\n    let remaining_task_hours = Math.ceil((days_until_deadline * team_size * (work_end_hour - work_start_hour)) * difficulty_multiplier);\n\n    const generated_names = new Set<string>();\n\n    function generate_task_name(): string {\n        while (true) {\n            const name = `${random_in_array(words.verbs)} ${random_in_array(words.adjectives)} ${random_in_array(words.nouns)}`;\n\n            if (!generated_names.has(name)) {\n                generated_names.add(name);\n                return name;\n            }\n        }\n    }\n\n    function generate_task(): Task {\n        const random_hours = 3 + Math.ceil(Math.random() * 7);\n        const capped_hours = Math.min(remaining_task_hours, random_hours);\n        const how_many_skills_required = Math.round(Math.random() * 3);\n\n        function required_skills_in_brackets(skills: Skill[]) {\n            const text = skills.map(skill_name).map(name => `[${name}]`).join(\"\");\n\n            if (text.length == 0) {\n                return \"\";\n            } else {\n                return `${text} `;\n            }\n        }\n\n        const required_skills = pick_n_random_skills(all_skills(), how_many_skills_required);\n        const generated_name = generate_task_name();\n\n        return {\n            name: generated_name,\n            full_name: `${required_skills_in_brackets(required_skills)}${generated_name}`,\n            estimated_time: capped_hours,\n            status: Task_Status.new,\n            required_skills: required_skills,\n            time_spent: 0\n        }\n    }\n\n    const tasks: Task[] = [];\n\n    while (remaining_task_hours > 0) {\n        const task = generate_task();\n\n        remaining_task_hours -= task.estimated_time;\n\n        tasks.push(task);\n    }\n\n    return tasks;\n}\n\nfunction day_of_week_starts(day: Day_Of_Week) {\n    switch (day) {\n        case 1: return i18n.overlay.weekend.day.mon();\n        case 2: return i18n.overlay.weekend.day.tue();\n        case 3: return i18n.overlay.weekend.day.wed();\n        case 4: return i18n.overlay.weekend.day.thu();\n        case 5: return i18n.overlay.weekend.day.fri();\n        case 6: return i18n.overlay.weekend.day.sat();\n        case 7: return i18n.overlay.weekend.day.sun();\n    }\n}\n\nfunction day_of_week_name(day: Day_Of_Week) {\n    switch (day) {\n        case 1: return i18n.top_bar.day.mon();\n        case 2: return i18n.top_bar.day.tue();\n        case 3: return i18n.top_bar.day.wed();\n        case 4: return i18n.top_bar.day.thu();\n        case 5: return i18n.top_bar.day.fri();\n        case 6: return i18n.top_bar.day.sat();\n        case 7: return i18n.top_bar.day.sun();\n    }\n}\n\nfunction generate_candidate_name() {\n    const first_names = i18n.candidate.first_names().split(\"|\");\n    const last_names = i18n.candidate.last_names().split(\"|\");\n\n    return `${random_in_array(first_names)} ${random_in_array(last_names)}`;\n}\n\nfunction refresh_events_for_today() {\n    game.today_events.length = 0;\n\n    if (game.day_of_week <= work_days) {\n        game.today_events.push({\n            type: Calendar_Event_Type.daily_standup,\n            duration: 1,\n            start_hour: 10\n        });\n    }\n\n    game.today_events.push({\n        type: Calendar_Event_Type.lunch,\n        duration: 1,\n        start_hour: 13\n    });\n\n    if (game.day_of_week == 1) {\n        game.today_events.push({\n            type: Calendar_Event_Type.one_on_one,\n            start_hour: 14,\n            duration: 1,\n            teammate: game.team[0]\n        });\n    }\n\n    if (game.day_of_week == 2) {\n        game.today_events.push({\n            type: Calendar_Event_Type.lead_meeting,\n            duration: 1,\n            start_hour: 14\n        });\n    }\n\n    if (game.day_of_week == 3) {\n        game.today_events.push({\n            type: Calendar_Event_Type.one_on_one,\n            start_hour: 14,\n            duration: 1,\n            teammate: game.team[1]\n        });\n\n        game.today_events.push({\n            type: Calendar_Event_Type.candidate_interview,\n            duration: 2,\n            start_hour: 16,\n            candidate_name: generate_candidate_name()\n        });\n    }\n\n    if (game.day_of_week == 4) {\n        game.today_events.push({\n            type: Calendar_Event_Type.knowledge_sharing,\n            start_hour: 16,\n            duration: 1,\n            topic: generate_knowledge_sharing_topic()\n        });\n    }\n\n    if (game.day_of_week == 5) {\n        game.today_events.push({\n            type: Calendar_Event_Type.one_on_one,\n            start_hour: 14,\n            duration: 1,\n            teammate: game.team[2]\n        });\n    }\n\n}\n\nfunction is_past_event(event: Calendar_Event) {\n    return game.hour_of_day >= event.start_hour + event.duration;\n}\n\nfunction all_apps(): App[] {\n    return [{\n        type: App_Type.wrike,\n        dock_hover_time: 0,\n        task_list_scroll_y: 0,\n        inbox_scroll_y: 0\n    }, {\n        type: App_Type.clndr,\n        dock_hover_time: 0,\n    }, {\n        type: App_Type.limp,\n        dock_hover_time: 0,\n    }, {\n        type: App_Type.code_junkie,\n        dock_hover_time: 0\n    }, {\n        type: App_Type.iron,\n        dock_hover_time: 0\n    }];\n}\n\nfunction start_game() {\n    game.team = generate_team();\n    refresh_events_for_today();\n}\n\nfunction create_game() {\n    const canvas_element = document.getElementById(\"canvas\");\n\n    if (!canvas_element) {\n        throw \"Malformed page\";\n    }\n\n    const backing_canvas = (canvas_element as HTMLCanvasElement);\n    const backing_context = backing_canvas.getContext(\"2d\", { alpha: false });\n\n    if (!backing_context) {\n        throw \"Unable to create draw context\";\n    }\n\n    const base_width = backing_canvas.width;\n    const base_height = backing_canvas.height;\n\n    // backing_context.translate(0.5, 0.5);\n\n    function create_additional_context(alpha = true): CanvasRenderingContext2D {\n        const element = document.createElement('canvas');\n        element.width = backing_canvas.width;\n        element.height = backing_canvas.height;\n\n        console.log(\"Created canvas\", element.width, element.height);\n\n        const context = element.getContext('2d', { alpha: alpha });\n\n        if (!context) {\n            throw \"Unable to create draw context\";\n        }\n\n        fix_canvas_dpi_scale(context);\n        // context.translate(0.5, 0.5);\n\n        return context;\n    }\n\n    const overlay_ctx = create_additional_context();\n    const main_ctx = create_additional_context(false);\n\n    const scale = fix_canvas_dpi_scale(backing_context, false);\n\n    const days_until_deadline = 26;\n\n    game = {\n        canvas_width: base_width,\n        canvas_height: base_height,\n        out: backing_context,\n        main_ctx: main_ctx,\n        overlay_ctx: overlay_ctx,\n        any_button_clicked_this_frame: false,\n        any_button_hovered_this_frame: false,\n        mouse: {\n            x: 0,\n            y: 0,\n            button: 0,\n            clicked: false,\n            target_scroll_y: 0,\n            scroll_y: 0\n        },\n        layout_stack: [],\n        font_stack: [],\n        context_stack: [],\n        clip_stack: new WeakMap(),\n        time: 0,\n        frame_time: 0,\n        blur: 0,\n        dpi_scale: scale,\n\n        difficulty: Difficulty.junior,\n        day: 0,\n        deadline_day: days_until_deadline,\n        day_of_week: 1,\n        hour_of_day: work_start_hour,\n\n        player: {\n            burnout: 0,\n            health: 100,\n            company_status: 100,\n            productivity: 100,\n            attended_meetings_today: []\n        },\n\n        overlay_shown_at: 0,\n\n        backlog: [],\n        overlay: {\n            type: Overlay_Type.lang\n        },\n        team: [],\n        today_events: [],\n        inbox: [],\n        apps: all_apps()\n    };\n\n    const cursor_position_on_canvas = (event: MouseEvent) => {\n        const transform = backing_context.getTransform().inverse();\n\n        const rect = backing_canvas.getBoundingClientRect();\n        const scale_x = backing_canvas.width / rect.width;\n        const scale_y = backing_canvas.height / rect.height;\n\n        return transform.transformPoint({\n            x: (event.clientX - rect.left),// * scale_x,\n            y: (event.clientY - rect.top)// * scale_y\n        });\n    };\n\n    backing_canvas.addEventListener(\"mousedown\", event => {\n        const real_position = cursor_position_on_canvas(event);\n\n        const mouse = game.mouse;\n        mouse.clicked = true;\n        mouse.x = real_position.x;\n        mouse.y = real_position.y;\n        mouse.button = event.button;\n    });\n\n    backing_canvas.addEventListener(\"mousemove\", event => {\n        const real_position = cursor_position_on_canvas(event);\n\n        const mouse = game.mouse;\n        mouse.x = real_position.x;\n        mouse.y = real_position.y;\n    });\n\n    backing_canvas.addEventListener(\"wheel\", event => {\n        const mouse = game.mouse;\n        mouse.target_scroll_y = event.deltaY;\n    })\n\n    backing_canvas.addEventListener(\"contextmenu\", event => event.preventDefault());\n\n    start_animation_frame_loop(0);\n}\n\ncreate_game();\n"],
  "mappings": "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",
  "names": []
}
